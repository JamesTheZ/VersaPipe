# 1 "bezmesh.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "bezmesh.cudafe1.cpp"
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
#pragma GCC diagnostic push
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
#pragma GCC diagnostic pop
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
# 1 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
# 56 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
#pragma GCC diagnostic push
# 59 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
#pragma GCC diagnostic ignored "-Wunused-function"
# 61 "/usr/local/cuda-8.0/include/device_types.h" 3
# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3

# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef long ptrdiff_t;
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda-8.0/include/builtin_types.h" 1 3
# 56 "/usr/local/cuda-8.0/include/builtin_types.h" 3
# 1 "/usr/local/cuda-8.0/include/device_types.h" 1 3
# 53 "/usr/local/cuda-8.0/include/device_types.h" 3
# 1 "/usr/local/cuda-8.0/include/host_defines.h" 1 3
# 54 "/usr/local/cuda-8.0/include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3


# 1 "/usr/local/cuda-8.0/include/driver_types.h" 1 3
# 156 "/usr/local/cuda-8.0/include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 191 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 200 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 210 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 219 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 234 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 315 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 324 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 333 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 342 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 391 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 426 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 488 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 514 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 639 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorSyncDepthExceeded = 68,
# 651 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,
# 671 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorHardwareStackError = 72,







    cudaErrorIllegalInstruction = 73,
# 688 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorMisalignedAddress = 74,
# 699 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorInvalidAddressSpace = 75,







    cudaErrorInvalidPc = 76,







    cudaErrorIllegalAddress = 77,





    cudaErrorInvalidPtx = 78,




    cudaErrorInvalidGraphicsContext = 79,





    cudaErrorNvlinkUncorrectable = 80,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 1044 "/usr/local/cuda-8.0/include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;




    int isManaged;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaMemoryAdvise
{
    cudaMemAdviseSetReadMostly = 1,
    cudaMemAdviseUnsetReadMostly = 2,
    cudaMemAdviseSetPreferredLocation = 3,
    cudaMemAdviseUnsetPreferredLocation = 4,
    cudaMemAdviseSetAccessedBy = 5,
    cudaMemAdviseUnsetAccessedBy = 6
};




enum cudaMemRangeAttribute
{
    cudaMemRangeAttributeReadMostly = 1,
    cudaMemRangeAttributePreferredLocation = 2,
    cudaMemRangeAttributeAccessedBy = 3,
    cudaMemRangeAttributeLastPrefetchLocation = 4
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85,
    cudaDevAttrHostNativeAtomicSupported = 86,
    cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
    cudaDevAttrPageableMemoryAccess = 88,
    cudaDevAttrConcurrentManagedAccess = 89,
    cudaDevAttrComputePreemptionSupported = 90,
    cudaDevAttrCanUseHostPointerForRegisteredMem = 91
};





enum cudaDeviceP2PAttr {
    cudaDevP2PAttrPerformanceRank = 1,
    cudaDevP2PAttrAccessSupported = 2,
    cudaDevP2PAttrNativeAtomicSupported = 3
};



struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
    int hostNativeAtomicSupported;
    int singleToDoublePrecisionPerfRatio;
    int pageableMemoryAccess;
    int concurrentManagedAccess;
};
# 1455 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1477 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 60 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3


# 1 "/usr/local/cuda-8.0/include/surface_types.h" 1 3
# 84 "/usr/local/cuda-8.0/include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-8.0/include/texture_types.h" 1 3
# 84 "/usr/local/cuda-8.0/include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    float borderColor[4];



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-8.0/include/vector_types.h" 1 3
# 61 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 1 "/usr/local/cuda-8.0/include/builtin_types.h" 1 3
# 64 "/usr/local/cuda-8.0/include/builtin_types.h" 3
# 1 "/usr/local/cuda-8.0/include/vector_types.h" 1 3
# 64 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 62 "/usr/local/cuda-8.0/include/vector_types.h" 2 3
# 98 "/usr/local/cuda-8.0/include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 274 "/usr/local/cuda-8.0/include/vector_types.h" 3
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 362 "/usr/local/cuda-8.0/include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 64 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 70 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda-8.0/include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 2 3
# 218 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 2 3
# 429 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef
# 426 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
struct {
# 427 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
long long __max_align_ll __attribute((__aligned__(__alignof__(long long))));
# 428 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
long double __max_align_ld __attribute((__aligned__(__alignof__(long double))));
# 429 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
} max_align_t;
# 436 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef __decltype((nullptr)) nullptr_t;
# 156 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 751 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 762 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 774 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef struct cudaArray *cudaArray_t;
# 779 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef const cudaArray *cudaArray_const_t;
# 781 "/usr/local/cuda-8.0/include/driver_types.h" 3
struct cudaArray;
# 786 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 791 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 793 "/usr/local/cuda-8.0/include/driver_types.h" 3
struct cudaMipmappedArray;
# 798 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 807 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 821 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 834 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 846 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 856 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 873 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 891 "/usr/local/cuda-8.0/include/driver_types.h" 3
struct cudaGraphicsResource;
# 896 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 908 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 918 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 931 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 942 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 984 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1012 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1027 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1067 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1123 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1135 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1145 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1156 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1168 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1181 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1192 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1201 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1299 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1307 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1458 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1466 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1477 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1482 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1487 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1492 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1497 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 1502 "/usr/local/cuda-8.0/include/driver_types.h" 3
# 84 "/usr/local/cuda-8.0/include/surface_types.h" 3
# 94 "/usr/local/cuda-8.0/include/surface_types.h" 3
# 103 "/usr/local/cuda-8.0/include/surface_types.h" 3
# 114 "/usr/local/cuda-8.0/include/surface_types.h" 3
# 84 "/usr/local/cuda-8.0/include/texture_types.h" 3
# 95 "/usr/local/cuda-8.0/include/texture_types.h" 3
# 104 "/usr/local/cuda-8.0/include/texture_types.h" 3
# 113 "/usr/local/cuda-8.0/include/texture_types.h" 3
# 161 "/usr/local/cuda-8.0/include/texture_types.h" 3
# 212 "/usr/local/cuda-8.0/include/texture_types.h" 3
# 98 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 103 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 109 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 114 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 119 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 124 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 129 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 134 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 139 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 144 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 149 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 154 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 159 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 164 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 169 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 170 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 172 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 177 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 182 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 183 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 185 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 190 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 195 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 200 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 205 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 210 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 220 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 225 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 232 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 237 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 242 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 247 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 252 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 274 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 279 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 284 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 289 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 294 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 299 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 304 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 309 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 314 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 319 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 324 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 329 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 334 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 339 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 344 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 362 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 363 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 364 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 365 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 366 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 367 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 368 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 369 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 370 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 371 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 372 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 373 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 374 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 375 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 376 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 377 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 378 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 379 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 380 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 381 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 382 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 383 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 384 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 385 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 386 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 387 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 388 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 389 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 390 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 391 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 392 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 393 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 394 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 395 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 396 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 397 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 398 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 399 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 400 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 401 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 402 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 403 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 404 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 405 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 406 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 407 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 408 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 409 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 417 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 427 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 70 "/usr/local/cuda-8.0/include/library_types.h" 3
typedef
# 54 "/usr/local/cuda-8.0/include/library_types.h" 3
enum cudaDataType_t {
# 56 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_16F = 2,
# 57 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_16F = 6,
# 58 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_32F = 0,
# 59 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_32F = 4,
# 60 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_64F = 1,
# 61 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_64F = 5,
# 62 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_8I = 3,
# 63 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_8I = 7,
# 64 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_8U,
# 65 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_8U,
# 66 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_32I,
# 67 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_32I,
# 68 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_R_32U,
# 69 "/usr/local/cuda-8.0/include/library_types.h" 3
CUDA_C_32U
# 70 "/usr/local/cuda-8.0/include/library_types.h" 3
} cudaDataType;
# 78 "/usr/local/cuda-8.0/include/library_types.h" 3
typedef
# 73 "/usr/local/cuda-8.0/include/library_types.h" 3
enum libraryPropertyType_t {
# 75 "/usr/local/cuda-8.0/include/library_types.h" 3
MAJOR_VERSION,
# 76 "/usr/local/cuda-8.0/include/library_types.h" 3
MINOR_VERSION,
# 77 "/usr/local/cuda-8.0/include/library_types.h" 3
PATCH_LEVEL
# 78 "/usr/local/cuda-8.0/include/library_types.h" 3
} libraryPropertyType;
# 104 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern "C" {
# 106 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 107 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetLimit(::size_t * pValue, cudaLimit limit);
# 108 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 109 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 110 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceSynchronize();
# 111 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGetLastError();
# 112 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaPeekAtLastError();
# 113 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern const char *cudaGetErrorString(cudaError_t error);
# 114 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern const char *cudaGetErrorName(cudaError_t error);
# 115 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGetDeviceCount(int * count);
# 116 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGetDevice(int * device);
# 117 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 118 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 119 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 120 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 121 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 122 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream);
# 123 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream);
# 124 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 125 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 126 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaFree(void * devPtr);
# 127 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMalloc(void ** devPtr, ::size_t size);
# 128 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 129 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemcpyAsync_ptsz(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 130 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DAsync(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 131 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemcpy2DAsync_ptsz(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 132 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 133 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 134 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, ::size_t count, cudaStream_t stream);
# 135 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemsetAsync_ptsz(void * devPtr, int value, ::size_t count, cudaStream_t stream);
# 136 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemset2DAsync(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height, cudaStream_t stream);
# 137 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemset2DAsync_ptsz(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height, cudaStream_t stream);
# 138 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 139 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 140 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 161 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern void *cudaGetParameterBuffer(::size_t alignment, ::size_t size);
# 189 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern void *cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize);
# 190 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 191 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream);
# 209 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 210 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream);
# 213 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSmemSize);
# 214 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSmemSize, unsigned flags);
# 216 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
}
# 218 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, ::size_t size);
# 219 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 220 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, ::size_t dynamicSmemSize);
# 221 "/usr/local/cuda-8.0/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, ::size_t dynamicSmemSize, unsigned flags);
# 219 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern "C" {
# 252 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceReset();
# 269 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSynchronize();
# 344 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetLimit(cudaLimit limit, ::size_t value);
# 373 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetLimit(::size_t * pValue, cudaLimit limit);
# 404 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 439 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 481 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 510 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 552 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 575 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 602 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 644 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 679 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 717 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 767 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 797 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 837 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadExit();
# 861 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadSynchronize();
# 908 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadSetLimit(cudaLimit limit, ::size_t value);
# 939 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadGetLimit(::size_t * pValue, cudaLimit limit);
# 974 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1020 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1074 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetLastError();
# 1115 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaPeekAtLastError();
# 1130 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern const char *cudaGetErrorName(cudaError_t error);
# 1145 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern const char *cudaGetErrorString(cudaError_t error);
# 1175 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceCount(int * count);
# 1421 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceProperties(cudaDeviceProp * prop, int device);
# 1593 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1628 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetP2PAttribute(int * value, cudaDeviceP2PAttr attr, int srcDevice, int dstDevice);
# 1647 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 1681 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDevice(int device);
# 1698 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDevice(int * device);
# 1727 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 1789 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDeviceFlags(unsigned flags);
# 1830 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 1867 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 1896 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 1939 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 1963 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 1984 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 2005 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 2037 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 2051 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData);
# 2108 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2128 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2149 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2220 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, ::size_t length = 0, unsigned flags = 4);
# 2256 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventCreate(cudaEvent_t * event);
# 2290 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 2321 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 2353 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventQuery(cudaEvent_t event);
# 2385 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 2410 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 2451 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 2510 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, ::size_t sharedMem, cudaStream_t stream);
# 2560 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 2614 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 2648 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 2671 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDoubleForDevice(double * d);
# 2694 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDoubleForHost(double * d);
# 2750 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSMemSize);
# 2794 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSMemSize, unsigned flags);
# 2845 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaConfigureCall(dim3 gridDim, dim3 blockDim, ::size_t sharedMem = 0, cudaStream_t stream = 0);
# 2874 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetupArgument(const void * arg, ::size_t size, ::size_t offset);
# 2912 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunch(const void * func);
# 3030 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocManaged(void ** devPtr, ::size_t size, unsigned flags = 1);
# 3056 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc(void ** devPtr, ::size_t size);
# 3085 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocHost(void ** ptr, ::size_t size);
# 3124 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocPitch(void ** devPtr, ::size_t * pitch, ::size_t width, ::size_t height);
# 3166 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, ::size_t width, ::size_t height = 0, unsigned flags = 0);
# 3193 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFree(void * devPtr);
# 3213 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeHost(void * ptr);
# 3235 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeArray(cudaArray_t array);
# 3257 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 3316 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostAlloc(void ** pHost, ::size_t size, unsigned flags);
# 3393 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostRegister(void * ptr, ::size_t size, unsigned flags);
# 3412 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostUnregister(void * ptr);
# 3454 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 3473 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 3508 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 3643 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 3764 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 3790 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 3890 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 3918 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 4029 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 4052 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 4071 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemGetInfo(::size_t * free, ::size_t * total);
# 4092 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 4130 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind);
# 4162 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, ::size_t count);
# 4200 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToArray(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t count, cudaMemcpyKind kind);
# 4237 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t count, cudaMemcpyKind kind);
# 4275 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, ::size_t wOffsetDst, ::size_t hOffsetDst, cudaArray_const_t src, ::size_t wOffsetSrc, ::size_t hOffsetSrc, ::size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4320 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2D(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind);
# 4366 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind);
# 4412 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DFromArray(void * dst, ::size_t dpitch, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t width, ::size_t height, cudaMemcpyKind kind);
# 4455 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, ::size_t wOffsetDst, ::size_t hOffsetDst, cudaArray_const_t src, ::size_t wOffsetSrc, ::size_t hOffsetSrc, ::size_t width, ::size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4493 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, ::size_t count, ::size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 4531 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, ::size_t count, ::size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 4582 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4614 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, ::size_t count, cudaStream_t stream = 0);
# 4660 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4705 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4765 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DAsync(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4820 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4874 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, ::size_t dpitch, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4920 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, ::size_t count, ::size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4966 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, ::size_t count, ::size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4992 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset(void * devPtr, int value, ::size_t count);
# 5022 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset2D(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height);
# 5065 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 5097 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, ::size_t count, cudaStream_t stream = 0);
# 5134 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset2DAsync(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height, cudaStream_t stream = 0);
# 5184 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 5207 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 5229 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSymbolSize(::size_t * size, const void * symbol);
# 5296 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPrefetchAsync(const void * devPtr, ::size_t count, int dstDevice, cudaStream_t stream = 0);
# 5382 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemAdvise(const void * devPtr, ::size_t count, cudaMemoryAdvise advice, int device);
# 5438 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemRangeGetAttribute(void * data, ::size_t dataSize, cudaMemRangeAttribute attribute, const void * devPtr, ::size_t count);
# 5474 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemRangeGetAttributes(void ** data, ::size_t * dataSizes, cudaMemRangeAttribute * attributes, ::size_t numAttributes, const void * devPtr, ::size_t count);
# 5627 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 5665 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 5704 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 5723 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 5783 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 5815 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 5851 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5883 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5912 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, ::size_t * size, cudaGraphicsResource_t resource);
# 5946 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 5971 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 6011 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 6046 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 6093 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTexture(::size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, ::size_t size = ((2147483647) * 2U) + 1U);
# 6144 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTexture2D(::size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, ::size_t width, ::size_t height, ::size_t pitch);
# 6172 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6200 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc);
# 6221 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaUnbindTexture(const textureReference * texref);
# 6246 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureAlignmentOffset(::size_t * offset, const textureReference * texref);
# 6271 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureReference(const textureReference ** texref, const void * symbol);
# 6311 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6330 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol);
# 6556 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 6571 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 6587 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 6603 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 6620 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 6659 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 6674 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 6689 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 6716 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDriverGetVersion(int * driverVersion);
# 6733 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 6738 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 6964 "/usr/local/cuda-8.0/include/cuda_runtime_api.h" 3
}
# 107 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 109 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 112 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 114 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 119 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 121 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 126 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 128 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 133 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 135 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 140 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 142 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 151 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 153 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 158 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 160 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 165 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 167 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 172 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 174 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 179 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 181 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 186 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 188 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 193 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 195 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 200 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 202 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 207 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 209 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 214 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 216 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 221 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 223 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 228 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 230 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 235 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 237 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 242 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 244 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 249 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 251 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 256 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 258 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 263 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 265 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 270 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 272 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 277 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 279 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 284 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 286 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 291 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 293 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 298 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 300 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 305 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 307 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 312 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 314 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 379 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 381 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 386 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 388 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 393 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 395 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 400 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
{
# 402 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda-8.0/include/channel_descriptor.h" 3
}
# 79 "/usr/local/cuda-8.0/include/driver_functions.h" 3
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, ::size_t p, ::size_t xsz, ::size_t ysz)
# 80 "/usr/local/cuda-8.0/include/driver_functions.h" 3
{
# 81 "/usr/local/cuda-8.0/include/driver_functions.h" 3
cudaPitchedPtr s;
# 83 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(s.ptr) = d;
# 84 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(s.pitch) = p;
# 85 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(s.xsize) = xsz;
# 86 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(s.ysize) = ysz;
# 88 "/usr/local/cuda-8.0/include/driver_functions.h" 3
return s;
# 89 "/usr/local/cuda-8.0/include/driver_functions.h" 3
}
# 106 "/usr/local/cuda-8.0/include/driver_functions.h" 3
static inline cudaPos make_cudaPos(::size_t x, ::size_t y, ::size_t z)
# 107 "/usr/local/cuda-8.0/include/driver_functions.h" 3
{
# 108 "/usr/local/cuda-8.0/include/driver_functions.h" 3
cudaPos p;
# 110 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(p.x) = x;
# 111 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(p.y) = y;
# 112 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(p.z) = z;
# 114 "/usr/local/cuda-8.0/include/driver_functions.h" 3
return p;
# 115 "/usr/local/cuda-8.0/include/driver_functions.h" 3
}
# 132 "/usr/local/cuda-8.0/include/driver_functions.h" 3
static inline cudaExtent make_cudaExtent(::size_t w, ::size_t h, ::size_t d)
# 133 "/usr/local/cuda-8.0/include/driver_functions.h" 3
{
# 134 "/usr/local/cuda-8.0/include/driver_functions.h" 3
cudaExtent e;
# 136 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(e.width) = w;
# 137 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(e.height) = h;
# 138 "/usr/local/cuda-8.0/include/driver_functions.h" 3
(e.depth) = d;
# 140 "/usr/local/cuda-8.0/include/driver_functions.h" 3
return e;
# 141 "/usr/local/cuda-8.0/include/driver_functions.h" 3
}
# 75 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline char1 make_char1(signed char x)
# 76 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 77 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
char1 t; (t.x) = x; return t;
# 78 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 80 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uchar1 make_uchar1(unsigned char x)
# 81 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 82 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uchar1 t; (t.x) = x; return t;
# 83 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 85 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline char2 make_char2(signed char x, signed char y)
# 86 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 87 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
char2 t; (t.x) = x; (t.y) = y; return t;
# 88 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 90 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 91 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 92 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 93 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 95 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 96 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 97 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 98 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 100 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 101 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 102 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 103 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 105 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 106 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 107 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 108 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 110 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 111 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 112 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 113 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 115 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline short1 make_short1(short x)
# 116 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 117 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
short1 t; (t.x) = x; return t;
# 118 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 120 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ushort1 make_ushort1(unsigned short x)
# 121 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 122 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ushort1 t; (t.x) = x; return t;
# 123 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 125 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline short2 make_short2(short x, short y)
# 126 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 127 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
short2 t; (t.x) = x; (t.y) = y; return t;
# 128 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 130 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 131 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 132 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 133 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 135 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline short3 make_short3(short x, short y, short z)
# 136 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 137 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 138 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 140 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 141 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 142 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 143 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 145 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline short4 make_short4(short x, short y, short z, short w)
# 146 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 147 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 148 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 150 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 151 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 152 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 153 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 155 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline int1 make_int1(int x)
# 156 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 157 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
int1 t; (t.x) = x; return t;
# 158 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 160 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uint1 make_uint1(unsigned x)
# 161 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 162 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uint1 t; (t.x) = x; return t;
# 163 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 165 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline int2 make_int2(int x, int y)
# 166 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 167 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
int2 t; (t.x) = x; (t.y) = y; return t;
# 168 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 170 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uint2 make_uint2(unsigned x, unsigned y)
# 171 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 172 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uint2 t; (t.x) = x; (t.y) = y; return t;
# 173 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 175 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline int3 make_int3(int x, int y, int z)
# 176 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 177 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 178 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 180 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 181 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 182 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 183 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 185 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline int4 make_int4(int x, int y, int z, int w)
# 186 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 187 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 188 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 190 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 191 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 192 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 193 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 195 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline long1 make_long1(long x)
# 196 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 197 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
long1 t; (t.x) = x; return t;
# 198 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 200 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulong1 make_ulong1(unsigned long x)
# 201 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 202 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulong1 t; (t.x) = x; return t;
# 203 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 205 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline long2 make_long2(long x, long y)
# 206 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 207 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
long2 t; (t.x) = x; (t.y) = y; return t;
# 208 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 210 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 211 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 212 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 213 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 215 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline long3 make_long3(long x, long y, long z)
# 216 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 217 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 218 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 220 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 221 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 222 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 223 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 225 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline long4 make_long4(long x, long y, long z, long w)
# 226 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 227 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 228 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 230 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 231 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 232 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 235 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline float1 make_float1(float x)
# 236 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 237 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
float1 t; (t.x) = x; return t;
# 238 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 240 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline float2 make_float2(float x, float y)
# 241 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 242 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
float2 t; (t.x) = x; (t.y) = y; return t;
# 243 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 245 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline float3 make_float3(float x, float y, float z)
# 246 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 247 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 248 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 250 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline float4 make_float4(float x, float y, float z, float w)
# 251 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 252 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 253 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 255 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline longlong1 make_longlong1(long long x)
# 256 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 257 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
longlong1 t; (t.x) = x; return t;
# 258 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 260 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 261 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 262 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulonglong1 t; (t.x) = x; return t;
# 263 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 265 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline longlong2 make_longlong2(long long x, long long y)
# 266 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 267 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 268 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 270 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 271 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 272 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 273 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 275 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 276 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 277 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 278 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 280 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 281 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 282 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 283 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 285 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 286 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 287 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 288 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 290 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 291 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 292 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 295 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline double1 make_double1(double x)
# 296 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 297 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
double1 t; (t.x) = x; return t;
# 298 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 300 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline double2 make_double2(double x, double y)
# 301 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 302 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
double2 t; (t.x) = x; (t.y) = y; return t;
# 303 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 305 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline double3 make_double3(double x, double y, double z)
# 306 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 307 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 308 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 310 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
static inline double4 make_double4(double x, double y, double z, double w)
# 311 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
{
# 312 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 313 "/usr/local/cuda-8.0/include/vector_functions.hpp" 3
}
# 27 "/usr/include/string.h" 3
extern "C" {
# 42 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __n) throw()
# 43 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 46 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memmove(void * __dest, const void * __src, ::size_t __n) throw()
# 47 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 54 "/usr/include/string.h" 3
extern void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, ::size_t __n) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 62 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memset(void * __s, int __c, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 65 "/usr/include/string.h" 3
extern int memcmp(const void * __s1, const void * __s2, ::size_t __n) throw()
# 66 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 70 "/usr/include/string.h" 3
extern "C++" {
# 72 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *memchr(void * __s, int __c, ::size_t __n) throw() __asm__("memchr")
# 73 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 74 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const void *memchr(const void * __s, int __c, ::size_t __n) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 78 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline void *
# 79 "/usr/include/string.h" 3
memchr(void *__s, int __c, ::size_t __n) throw()
# 80 "/usr/include/string.h" 3
{
# 81 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 82 "/usr/include/string.h" 3
}
# 84 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const void *
# 85 "/usr/include/string.h" 3
memchr(const void *__s, int __c, ::size_t __n) throw()
# 86 "/usr/include/string.h" 3
{
# 87 "/usr/include/string.h" 3
return __builtin_memchr(__s, __c, __n);
# 88 "/usr/include/string.h" 3
}
# 90 "/usr/include/string.h" 3
}
# 101 "/usr/include/string.h" 3
extern "C++" void *rawmemchr(void * __s, int __c) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
extern "C++" const void *rawmemchr(const void * __s, int __c) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
extern "C++" void *memrchr(void * __s, int __c, ::size_t __n) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
extern "C++" const void *memrchr(const void * __s, int __c, ::size_t __n) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 125 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 126 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 130 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 133 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern int strcmp(const char * __s1, const char * __s2) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern int strncmp(const char * __s1, const char * __s2, ::size_t __n) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern int strcoll(const char * __s1, const char * __s2) throw()
# 148 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern ::size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 152 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 39 "/usr/include/xlocale.h" 3
typedef
# 27 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 30 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 33 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 34 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 38 "/usr/include/xlocale.h" 3
const char *__names[13];
# 39 "/usr/include/xlocale.h" 3
} *__locale_t;
# 42 "/usr/include/xlocale.h" 3
typedef __locale_t locale_t;
# 162 "/usr/include/string.h" 3
extern int strcoll_l(const char * __s1, const char * __s2, __locale_t __l) throw()
# 163 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 165 "/usr/include/string.h" 3
extern ::size_t strxfrm_l(char * __dest, const char * __src, ::size_t __n, __locale_t __l) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 171 "/usr/include/string.h" 3
extern char *strdup(const char * __s) throw()
# 172 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 179 "/usr/include/string.h" 3
extern char *strndup(const char * __string, ::size_t __n) throw()
# 180 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 209 "/usr/include/string.h" 3
extern "C++" {
# 211 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strchr(char * __s, int __c) throw() __asm__("strchr")
# 212 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 213 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strchr(const char * __s, int __c) throw() __asm__("strchr")
# 214 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 217 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 218 "/usr/include/string.h" 3
strchr(char *__s, int __c) throw()
# 219 "/usr/include/string.h" 3
{
# 220 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 221 "/usr/include/string.h" 3
}
# 223 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 224 "/usr/include/string.h" 3
strchr(const char *__s, int __c) throw()
# 225 "/usr/include/string.h" 3
{
# 226 "/usr/include/string.h" 3
return __builtin_strchr(__s, __c);
# 227 "/usr/include/string.h" 3
}
# 229 "/usr/include/string.h" 3
}
# 236 "/usr/include/string.h" 3
extern "C++" {
# 238 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strrchr(char * __s, int __c) throw() __asm__("strrchr")
# 239 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 240 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strrchr(const char * __s, int __c) throw() __asm__("strrchr")
# 241 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 244 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 245 "/usr/include/string.h" 3
strrchr(char *__s, int __c) throw()
# 246 "/usr/include/string.h" 3
{
# 247 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 248 "/usr/include/string.h" 3
}
# 250 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 251 "/usr/include/string.h" 3
strrchr(const char *__s, int __c) throw()
# 252 "/usr/include/string.h" 3
{
# 253 "/usr/include/string.h" 3
return __builtin_strrchr(__s, __c);
# 254 "/usr/include/string.h" 3
}
# 256 "/usr/include/string.h" 3
}
# 267 "/usr/include/string.h" 3
extern "C++" char *strchrnul(char * __s, int __c) throw() __asm__("strchrnul")
# 268 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 269 "/usr/include/string.h" 3
extern "C++" const char *strchrnul(const char * __s, int __c) throw() __asm__("strchrnul")
# 270 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 280 "/usr/include/string.h" 3
extern ::size_t strcspn(const char * __s, const char * __reject) throw()
# 281 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 284 "/usr/include/string.h" 3
extern ::size_t strspn(const char * __s, const char * __accept) throw()
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 288 "/usr/include/string.h" 3
extern "C++" {
# 290 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strpbrk(char * __s, const char * __accept) throw() __asm__("strpbrk")
# 291 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strpbrk(const char * __s, const char * __accept) throw() __asm__("strpbrk")
# 293 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 296 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 297 "/usr/include/string.h" 3
strpbrk(char *__s, const char *__accept) throw()
# 298 "/usr/include/string.h" 3
{
# 299 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 300 "/usr/include/string.h" 3
}
# 302 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 303 "/usr/include/string.h" 3
strpbrk(const char *__s, const char *__accept) throw()
# 304 "/usr/include/string.h" 3
{
# 305 "/usr/include/string.h" 3
return __builtin_strpbrk(__s, __accept);
# 306 "/usr/include/string.h" 3
}
# 308 "/usr/include/string.h" 3
}
# 315 "/usr/include/string.h" 3
extern "C++" {
# 317 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *strstr(char * __haystack, const char * __needle) throw() __asm__("strstr")
# 318 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 319 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *strstr(const char * __haystack, const char * __needle) throw() __asm__("strstr")
# 320 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 323 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 324 "/usr/include/string.h" 3
strstr(char *__haystack, const char *__needle) throw()
# 325 "/usr/include/string.h" 3
{
# 326 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 327 "/usr/include/string.h" 3
}
# 329 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 330 "/usr/include/string.h" 3
strstr(const char *__haystack, const char *__needle) throw()
# 331 "/usr/include/string.h" 3
{
# 332 "/usr/include/string.h" 3
return __builtin_strstr(__haystack, __needle);
# 333 "/usr/include/string.h" 3
}
# 335 "/usr/include/string.h" 3
}
# 343 "/usr/include/string.h" 3
extern char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) throw()
# 344 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 349 "/usr/include/string.h" 3
extern char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 352 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 354 "/usr/include/string.h" 3
extern char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 356 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 362 "/usr/include/string.h" 3
extern "C++" char *strcasestr(char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 363 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 364 "/usr/include/string.h" 3
extern "C++" const char *strcasestr(const char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 366 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 377 "/usr/include/string.h" 3
extern void *memmem(const void * __haystack, ::size_t __haystacklen, const void * __needle, ::size_t __needlelen) throw()
# 379 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 383 "/usr/include/string.h" 3
extern void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __n) throw()
# 385 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 386 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __n) throw()
# 388 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 394 "/usr/include/string.h" 3
extern ::size_t strlen(const char * __s) throw()
# 395 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 401 "/usr/include/string.h" 3
extern ::size_t strnlen(const char * __string, ::size_t __maxlen) throw()
# 402 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 408 "/usr/include/string.h" 3
extern char *strerror(int __errnum) throw();
# 433 "/usr/include/string.h" 3
extern char *strerror_r(int __errnum, char * __buf, ::size_t __buflen) throw()
# 434 "/usr/include/string.h" 3
 __attribute((__nonnull__(2))) __attribute((__warn_unused_result__));
# 440 "/usr/include/string.h" 3
extern char *strerror_l(int __errnum, __locale_t __l) throw();
# 446 "/usr/include/string.h" 3
extern void __bzero(void * __s, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 450 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void bcopy(const void * __src, void * __dest, ::size_t __n) throw()
# 451 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline void bzero(void * __s, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 457 "/usr/include/string.h" 3
extern int bcmp(const void * __s1, const void * __s2, ::size_t __n) throw()
# 458 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 462 "/usr/include/string.h" 3
extern "C++" {
# 464 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *index(char * __s, int __c) throw() __asm__("index")
# 465 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 466 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *index(const char * __s, int __c) throw() __asm__("index")
# 467 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 470 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 471 "/usr/include/string.h" 3
index(char *__s, int __c) throw()
# 472 "/usr/include/string.h" 3
{
# 473 "/usr/include/string.h" 3
return __builtin_index(__s, __c);
# 474 "/usr/include/string.h" 3
}
# 476 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 477 "/usr/include/string.h" 3
index(const char *__s, int __c) throw()
# 478 "/usr/include/string.h" 3
{
# 479 "/usr/include/string.h" 3
return __builtin_index(__s, __c);
# 480 "/usr/include/string.h" 3
}
# 482 "/usr/include/string.h" 3
}
# 490 "/usr/include/string.h" 3
extern "C++" {
# 492 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *rindex(char * __s, int __c) throw() __asm__("rindex")
# 493 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 494 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline const char *rindex(const char * __s, int __c) throw() __asm__("rindex")
# 495 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 498 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline char *
# 499 "/usr/include/string.h" 3
rindex(char *__s, int __c) throw()
# 500 "/usr/include/string.h" 3
{
# 501 "/usr/include/string.h" 3
return __builtin_rindex(__s, __c);
# 502 "/usr/include/string.h" 3
}
# 504 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline const char *
# 505 "/usr/include/string.h" 3
rindex(const char *__s, int __c) throw()
# 506 "/usr/include/string.h" 3
{
# 507 "/usr/include/string.h" 3
return __builtin_rindex(__s, __c);
# 508 "/usr/include/string.h" 3
}
# 510 "/usr/include/string.h" 3
}
# 518 "/usr/include/string.h" 3
extern int ffs(int __i) throw() __attribute((const));
# 523 "/usr/include/string.h" 3
extern int ffsl(long __l) throw() __attribute((const));
# 524 "/usr/include/string.h" 3
__extension__ extern int ffsll(long long __ll) throw()
# 525 "/usr/include/string.h" 3
 __attribute((const));
# 529 "/usr/include/string.h" 3
extern int strcasecmp(const char * __s1, const char * __s2) throw()
# 530 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 533 "/usr/include/string.h" 3
extern int strncasecmp(const char * __s1, const char * __s2, ::size_t __n) throw()
# 534 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 540 "/usr/include/string.h" 3
extern int strcasecmp_l(const char * __s1, const char * __s2, __locale_t __loc) throw()
# 542 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 544 "/usr/include/string.h" 3
extern int strncasecmp_l(const char * __s1, const char * __s2, ::size_t __n, __locale_t __loc) throw()
# 546 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 552 "/usr/include/string.h" 3
extern char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) throw()
# 554 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 559 "/usr/include/string.h" 3
extern char *strsignal(int __sig) throw();
# 562 "/usr/include/string.h" 3
extern char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 563 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 564 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 565 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 569 "/usr/include/string.h" 3
extern char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 571 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 572 "/usr/include/string.h" 3
extern __attribute((gnu_inline)) inline char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 574 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 579 "/usr/include/string.h" 3
extern int strverscmp(const char * __s1, const char * __s2) throw()
# 580 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 583 "/usr/include/string.h" 3
extern char *strfry(char * __string) throw() __attribute((__nonnull__(1)));
# 586 "/usr/include/string.h" 3
extern void *memfrob(void * __s, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 594 "/usr/include/string.h" 3
extern "C++" char *basename(char * __filename) throw() __asm__("basename")
# 595 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 596 "/usr/include/string.h" 3
extern "C++" const char *basename(const char * __filename) throw() __asm__("basename")
# 597 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 49 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 50 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __len) throw()
# 52 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 53 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___memcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 54 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 56 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 57 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *memmove(void *__dest, const void *__src, ::size_t __len) throw()
# 58 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 59 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 60 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 63 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 64 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __len) throw()
# 66 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 67 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___mempcpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 68 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 77 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 78 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline void *memset(void *__dest, int __ch, ::size_t __len) throw()
# 79 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 90 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___memset_chk(__dest, __ch, __len, __builtin_object_size(__dest, 0));
# 91 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 94 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 95 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
 __attribute((__leaf__)) bcopy(const void *__src, void *__dest, ::size_t __len) throw()
# 96 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 97 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
(void)__builtin___memmove_chk(__dest, __src, __len, __builtin_object_size(__dest, 0));
# 98 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 100 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline void
# 101 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
 __attribute((__leaf__)) bzero(void *__dest, ::size_t __len) throw()
# 102 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
(void)__builtin___memset_chk(__dest, '\000', __len, __builtin_object_size(__dest, 0));
# 104 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 107 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 108 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 109 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 110 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 111 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 114 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 115 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 116 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 117 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___stpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 118 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 122 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 123 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __len) throw()
# 125 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 126 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strncpy_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 127 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 130 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
extern char *__stpncpy_chk(char * __dest, const char * __src, ::size_t __n, ::size_t __destlen) throw();
# 132 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
extern char *__stpncpy_alias(char * __dest, const char * __src, ::size_t __n) throw() __asm__("stpncpy");
# 135 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 136 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *stpncpy(char *__dest, const char *__src, ::size_t __n) throw()
# 137 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 138 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
if ((__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1))) && ((!(0)) || (__n > __builtin_object_size(__dest, 2 > 1)))) {
# 140 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __stpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1)); }
# 141 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __stpncpy_alias(__dest, __src, __n);
# 142 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 145 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 146 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 147 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 148 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strcat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1));
# 149 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 152 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 153 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
__attribute((__leaf__)) extern inline char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __len) throw()
# 155 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
{
# 156 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
return __builtin___strncat_chk(__dest, __src, __len, __builtin_object_size(__dest, 2 > 1));
# 157 "/usr/include/x86_64-linux-gnu/bits/string3.h" 3
}
# 648 "/usr/include/string.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline void *
# 649 "/usr/include/string.h" 3
__mempcpy_inline(void *__restrict__ __dest, const void *__restrict__
# 650 "/usr/include/string.h" 3
__src, ::size_t __n)
# 651 "/usr/include/string.h" 3
{
# 652 "/usr/include/string.h" 3
return ((char *)memcpy(__dest, __src, __n)) + __n;
# 653 "/usr/include/string.h" 3
}
# 658 "/usr/include/string.h" 3
}
# 29 "/usr/include/time.h" 3
extern "C" {
# 30 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 36 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 43 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 124 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 125 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 126 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 127 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 128 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 129 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 132 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 133 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 135 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 136 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 137 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 138 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 139 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 140 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 144 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 163 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 166 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 167 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 170 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 172 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 175 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 177 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 181 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 182 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __quad_t *__qaddr_t;
# 183 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 186 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 189 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 30 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
struct timeval {
# 32 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__time_t tv_sec;
# 33 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__suseconds_t tv_usec;
# 34 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
};
# 25 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 27 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 47 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 50 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 90 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" {
# 93 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern int clock_adjtime(__clockid_t __clock_id, timex * __utx) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
}
# 59 "/usr/include/time.h" 3
typedef __clock_t clock_t;
# 75 "/usr/include/time.h" 3
typedef __time_t time_t;
# 91 "/usr/include/time.h" 3
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3
typedef __timer_t timer_t;
# 120 "/usr/include/time.h" 3
struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
__syscall_slong_t tv_nsec;
# 124 "/usr/include/time.h" 3
};
# 133 "/usr/include/time.h" 3
struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
};
# 161 "/usr/include/time.h" 3
struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
};
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 189 "/usr/include/time.h" 3
extern clock_t clock() throw();
# 192 "/usr/include/time.h" 3
extern time_t time(time_t * __timer) throw();
# 195 "/usr/include/time.h" 3
extern double difftime(time_t __time1, time_t __time0) throw()
# 196 "/usr/include/time.h" 3
 __attribute((const));
# 199 "/usr/include/time.h" 3
extern time_t mktime(tm * __tp) throw();
# 205 "/usr/include/time.h" 3
extern ::size_t strftime(char *__restrict__ __s, ::size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 213 "/usr/include/time.h" 3
extern char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) throw();
# 223 "/usr/include/time.h" 3
extern ::size_t strftime_l(char *__restrict__ __s, ::size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 230 "/usr/include/time.h" 3
extern char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, __locale_t __loc) throw();
# 239 "/usr/include/time.h" 3
extern tm *gmtime(const time_t * __timer) throw();
# 243 "/usr/include/time.h" 3
extern tm *localtime(const time_t * __timer) throw();
# 249 "/usr/include/time.h" 3
extern tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 254 "/usr/include/time.h" 3
extern tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 261 "/usr/include/time.h" 3
extern char *asctime(const tm * __tp) throw();
# 264 "/usr/include/time.h" 3
extern char *ctime(const time_t * __timer) throw();
# 272 "/usr/include/time.h" 3
extern char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) throw();
# 276 "/usr/include/time.h" 3
extern char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) throw();
# 282 "/usr/include/time.h" 3
extern char *__tzname[2];
# 283 "/usr/include/time.h" 3
extern int __daylight;
# 284 "/usr/include/time.h" 3
extern long __timezone;
# 289 "/usr/include/time.h" 3
extern char *tzname[2];
# 293 "/usr/include/time.h" 3
extern void tzset() throw();
# 297 "/usr/include/time.h" 3
extern int daylight;
# 298 "/usr/include/time.h" 3
extern long timezone;
# 304 "/usr/include/time.h" 3
extern int stime(const time_t * __when) throw();
# 319 "/usr/include/time.h" 3
extern time_t timegm(tm * __tp) throw();
# 322 "/usr/include/time.h" 3
extern time_t timelocal(tm * __tp) throw();
# 325 "/usr/include/time.h" 3
extern int dysize(int __year) throw() __attribute((const));
# 334 "/usr/include/time.h" 3
extern int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 339 "/usr/include/time.h" 3
extern int clock_getres(clockid_t __clock_id, timespec * __res) throw();
# 342 "/usr/include/time.h" 3
extern int clock_gettime(clockid_t __clock_id, timespec * __tp) throw();
# 345 "/usr/include/time.h" 3
extern int clock_settime(clockid_t __clock_id, const timespec * __tp) throw();
# 353 "/usr/include/time.h" 3
extern int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 358 "/usr/include/time.h" 3
extern int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) throw();
# 363 "/usr/include/time.h" 3
extern int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) throw();
# 368 "/usr/include/time.h" 3
extern int timer_delete(timer_t __timerid) throw();
# 371 "/usr/include/time.h" 3
extern int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) throw();
# 376 "/usr/include/time.h" 3
extern int timer_gettime(timer_t __timerid, itimerspec * __value) throw();
# 380 "/usr/include/time.h" 3
extern int timer_getoverrun(timer_t __timerid) throw();
# 386 "/usr/include/time.h" 3
extern int timespec_get(timespec * __ts, int __base) throw()
# 387 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/time.h" 3
extern int getdate_err;
# 412 "/usr/include/time.h" 3
extern tm *getdate(const char * __string);
# 426 "/usr/include/time.h" 3
extern int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 430 "/usr/include/time.h" 3
}
# 68 "/usr/local/cuda-8.0/include/common_functions.h" 3
extern "C" {
# 71 "/usr/local/cuda-8.0/include/common_functions.h" 3
extern clock_t clock() throw();
# 72 "/usr/local/cuda-8.0/include/common_functions.h" 3
extern void *memset(void *, int, ::size_t) throw();
# 73 "/usr/local/cuda-8.0/include/common_functions.h" 3
extern void *memcpy(void *, const void *, ::size_t) throw();
# 75 "/usr/local/cuda-8.0/include/common_functions.h" 3
}
# 93 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern "C" {
# 164 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int abs(int) throw();
# 165 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long labs(long) throw();
# 166 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long long llabs(long long) throw();
# 216 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double fabs(double x) throw();
# 257 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float fabsf(float x) throw();
# 261 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline int min(int, int);
# 263 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline unsigned umin(unsigned, unsigned);
# 264 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline long long llmin(long long, long long);
# 265 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline unsigned long long ullmin(unsigned long long, unsigned long long);
# 286 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float fminf(float x, float y) throw();
# 306 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double fmin(double x, double y) throw();
# 313 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline int max(int, int);
# 315 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline unsigned umax(unsigned, unsigned);
# 316 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline long long llmax(long long, long long);
# 317 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline unsigned long long ullmax(unsigned long long, unsigned long long);
# 338 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float fmaxf(float x, float y) throw();
# 358 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double fmax(double, double) throw();
# 402 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double sin(double x) throw();
# 435 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double cos(double x) throw();
# 454 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern void sincos(double x, double * sptr, double * cptr) throw();
# 470 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern void sincosf(float x, float * sptr, float * cptr) throw();
# 515 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double tan(double x) throw();
# 584 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double sqrt(double x) throw();
# 656 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double rsqrt(double x);
# 726 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rsqrtf(float x);
# 782 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double log2(double x) throw();
# 807 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double exp2(double x) throw();
# 832 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float exp2f(float x) throw();
# 859 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double exp10(double x) throw();
# 882 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float exp10f(float x) throw();
# 928 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double expm1(double x) throw();
# 973 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float expm1f(float x) throw();
# 1028 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float log2f(float x) throw();
# 1082 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double log10(double x) throw();
# 1153 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double log(double x) throw();
# 1247 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double log1p(double x) throw();
# 1344 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float log1pf(float x) throw();
# 1419 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double floor(double x) throw();
# 1458 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double exp(double x) throw();
# 1489 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double cosh(double x) throw();
# 1519 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double sinh(double x) throw();
# 1549 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double tanh(double x) throw();
# 1584 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double acosh(double x) throw();
# 1622 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float acoshf(float x) throw();
# 1638 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double asinh(double x) throw();
# 1654 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float asinhf(float x) throw();
# 1708 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double atanh(double x) throw();
# 1762 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float atanhf(float x) throw();
# 1821 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double ldexp(double x, int exp) throw();
# 1877 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float ldexpf(float x, int exp) throw();
# 1929 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double logb(double x) throw();
# 1984 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float logbf(float x) throw();
# 2014 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int ilogb(double x) throw();
# 2044 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int ilogbf(float x) throw();
# 2120 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double scalbn(double x, int n) throw();
# 2196 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float scalbnf(float x, int n) throw();
# 2272 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double scalbln(double x, long n) throw();
# 2348 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float scalblnf(float x, long n) throw();
# 2426 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double frexp(double x, int * nptr) throw();
# 2501 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float frexpf(float x, int * nptr) throw();
# 2515 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double round(double x) throw();
# 2532 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float roundf(float x) throw();
# 2550 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long lround(double x) throw();
# 2568 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long lroundf(float x) throw();
# 2586 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long long llround(double x) throw();
# 2604 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long long llroundf(float x) throw();
# 2656 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rintf(float x) throw();
# 2672 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long lrint(double x) throw();
# 2688 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long lrintf(float x) throw();
# 2704 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long long llrint(double x) throw();
# 2720 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern long long llrintf(float x) throw();
# 2773 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double nearbyint(double x) throw();
# 2826 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float nearbyintf(float x) throw();
# 2888 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double ceil(double x) throw();
# 2900 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double trunc(double x) throw();
# 2915 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float truncf(float x) throw();
# 2941 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double fdim(double x, double y) throw();
# 2967 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float fdimf(float x, float y) throw();
# 3003 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double atan2(double y, double x) throw();
# 3034 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double atan(double x) throw();
# 3057 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double acos(double x) throw();
# 3089 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double asin(double x) throw();
# 3135 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double hypot(double x, double y) throw();
# 3187 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double rhypot(double x, double y) throw();
# 3233 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float hypotf(float x, float y) throw();
# 3285 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rhypotf(float x, float y) throw();
# 3332 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double norm3d(double a, double b, double c) throw();
# 3383 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double rnorm3d(double a, double b, double c) throw();
# 3432 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double norm4d(double a, double b, double c, double d) throw();
# 3488 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double rnorm4d(double a, double b, double c, double d) throw();
# 3533 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double norm(int dim, const double * t) throw();
# 3584 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double rnorm(int dim, const double * t) throw();
# 3636 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rnormf(int dim, const float * a) throw();
# 3680 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float normf(int dim, const float * a) throw();
# 3725 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float norm3df(float a, float b, float c) throw();
# 3776 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rnorm3df(float a, float b, float c) throw();
# 3825 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float norm4df(float a, float b, float c, float d) throw();
# 3881 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rnorm4df(float a, float b, float c, float d) throw();
# 3965 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double cbrt(double x) throw();
# 4051 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float cbrtf(float x) throw();
# 4106 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double rcbrt(double x);
# 4156 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float rcbrtf(float x);
# 4216 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double sinpi(double x);
# 4276 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float sinpif(float x);
# 4328 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double cospi(double x);
# 4380 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float cospif(float x);
# 4410 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern void sincospi(double x, double * sptr, double * cptr);
# 4440 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern void sincospif(float x, float * sptr, float * cptr);
# 4752 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double pow(double x, double y) throw();
# 4808 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double modf(double x, double * iptr) throw();
# 4867 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double fmod(double x, double y) throw();
# 4953 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double remainder(double x, double y) throw();
# 5043 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float remainderf(float x, float y) throw();
# 5097 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double remquo(double x, double y, int * quo) throw();
# 5151 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float remquof(float x, float y, int * quo) throw();
# 5192 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double j0(double x) throw();
# 5234 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float j0f(float x) throw();
# 5295 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double j1(double x) throw();
# 5356 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float j1f(float x) throw();
# 5399 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double jn(int n, double x) throw();
# 5442 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float jnf(int n, float x) throw();
# 5494 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double y0(double x) throw();
# 5546 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float y0f(float x) throw();
# 5598 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double y1(double x) throw();
# 5650 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float y1f(float x) throw();
# 5703 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double yn(int n, double x) throw();
# 5756 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float ynf(int n, float x) throw();
# 5783 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double cyl_bessel_i0(double x) throw();
# 5809 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float cyl_bessel_i0f(float x) throw();
# 5836 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double cyl_bessel_i1(double x) throw();
# 5862 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float cyl_bessel_i1f(float x) throw();
# 5945 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double erf(double x) throw();
# 6027 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float erff(float x) throw();
# 6091 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double erfinv(double y);
# 6148 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float erfinvf(float y);
# 6187 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double erfc(double x) throw();
# 6225 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float erfcf(float x) throw();
# 6353 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double lgamma(double x) throw();
# 6416 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double erfcinv(double y);
# 6472 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float erfcinvf(float y);
# 6530 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double normcdfinv(double y);
# 6588 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float normcdfinvf(float y);
# 6631 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double normcdf(double y);
# 6674 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float normcdff(float y);
# 6749 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double erfcx(double x);
# 6824 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float erfcxf(float x);
# 6958 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float lgammaf(float x) throw();
# 7067 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double tgamma(double x) throw();
# 7176 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float tgammaf(float x) throw();
# 7189 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double copysign(double x, double y) throw();
# 7202 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float copysignf(float x, float y) throw();
# 7239 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double nextafter(double x, double y) throw();
# 7276 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float nextafterf(float x, float y) throw();
# 7292 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double nan(const char * tagp) throw();
# 7308 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float nanf(const char * tagp) throw();
# 7315 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __isinff(float) throw();
# 7316 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __isnanf(float) throw();
# 7326 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __finite(double) throw();
# 7327 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __finitef(float) throw();
# 7328 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern __attribute((gnu_inline)) inline int __signbit(double) throw();
# 7329 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __isnan(double) throw();
# 7330 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __isinf(double) throw();
# 7333 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern __attribute((gnu_inline)) inline int __signbitf(float) throw();
# 7492 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern double fma(double x, double y, double z) throw();
# 7650 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float fmaf(float x, float y, float z) throw();
# 7661 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern __attribute((gnu_inline)) inline int __signbitl(long double) throw();
# 7667 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __finitel(long double) throw();
# 7668 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __isinfl(long double) throw();
# 7669 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern int __isnanl(long double) throw();
# 7719 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float acosf(float x) throw();
# 7759 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float asinf(float x) throw();
# 7799 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float atanf(float x) throw();
# 7832 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float atan2f(float y, float x) throw();
# 7856 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float cosf(float x) throw();
# 7898 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float sinf(float x) throw();
# 7940 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float tanf(float x) throw();
# 7964 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float coshf(float x) throw();
# 8005 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float sinhf(float x) throw();
# 8035 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float tanhf(float x) throw();
# 8086 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float logf(float x) throw();
# 8136 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float expf(float x) throw();
# 8187 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float log10f(float x) throw();
# 8242 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float modff(float x, float * iptr) throw();
# 8550 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float powf(float x, float y) throw();
# 8619 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float sqrtf(float x) throw();
# 8678 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float ceilf(float x) throw();
# 8750 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float floorf(float x) throw();
# 8809 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern float fmodf(float x, float y) throw();
# 8823 "/usr/local/cuda-8.0/include/math_functions.h" 3
}
# 28 "/usr/include/math.h" 3
extern "C" {
# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
typedef float float_t;
# 29 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
typedef double double_t;
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acos(double __x) throw(); extern double __acos(double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asin(double __x) throw(); extern double __asin(double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan(double __x) throw(); extern double __atan(double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan2(double __y, double __x) throw(); extern double __atan2(double __y, double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cos(double __x) throw(); extern double __cos(double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sin(double __x) throw(); extern double __sin(double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tan(double __x) throw(); extern double __tan(double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cosh(double __x) throw(); extern double __cosh(double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sinh(double __x) throw(); extern double __sinh(double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tanh(double __x) throw(); extern double __tanh(double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincos(double __x, double * __sinx, double * __cosx) throw(); extern void __sincos(double __x, double * __sinx, double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acosh(double __x) throw(); extern double __acosh(double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asinh(double __x) throw(); extern double __asinh(double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atanh(double __x) throw(); extern double __atanh(double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp(double __x) throw(); extern double __exp(double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double frexp(double __x, int * __exponent) throw(); extern double __frexp(double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ldexp(double __x, int __exponent) throw(); extern double __ldexp(double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log(double __x) throw(); extern double __log(double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log10(double __x) throw(); extern double __log10(double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double modf(double __x, double * __iptr) throw(); extern double __modf(double __x, double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp10(double __x) throw(); extern double __exp10(double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow10(double __x) throw(); extern double __pow10(double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double expm1(double __x) throw(); extern double __expm1(double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log1p(double __x) throw(); extern double __log1p(double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double logb(double __x) throw(); extern double __logb(double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp2(double __x) throw(); extern double __exp2(double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log2(double __x) throw(); extern double __log2(double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow(double __x, double __y) throw(); extern double __pow(double __x, double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sqrt(double __x) throw(); extern double __sqrt(double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double hypot(double __x, double __y) throw(); extern double __hypot(double __x, double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cbrt(double __x) throw(); extern double __cbrt(double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ceil(double __x) throw() __attribute((const)); extern double __ceil(double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fabs(double __x) throw() __attribute((const)); extern double __fabs(double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double floor(double __x) throw() __attribute((const)); extern double __floor(double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmod(double __x, double __y) throw(); extern double __fmod(double __x, double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinf(double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finite(double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finite(double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double drem(double __x, double __y) throw(); extern double __drem(double __x, double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double significand(double __x) throw(); extern double __significand(double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double copysign(double __x, double __y) throw() __attribute((const)); extern double __copysign(double __x, double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nan(const char * __tagb) throw() __attribute((const)); extern double __nan(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnan(double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j0(double) throw(); extern double __j0(double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j1(double) throw(); extern double __j1(double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double jn(int, double) throw(); extern double __jn(int, double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y0(double) throw(); extern double __y0(double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y1(double) throw(); extern double __y1(double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double yn(int, double) throw(); extern double __yn(int, double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erf(double) throw(); extern double __erf(double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erfc(double) throw(); extern double __erfc(double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma(double) throw(); extern double __lgamma(double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tgamma(double) throw(); extern double __tgamma(double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double gamma(double) throw(); extern double __gamma(double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma_r(double, int * __signgamp) throw(); extern double __lgamma_r(double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double rint(double __x) throw(); extern double __rint(double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextafter(double __x, double __y) throw() __attribute((const)); extern double __nextafter(double __x, double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nexttoward(double __x, long double __y) throw() __attribute((const)); extern double __nexttoward(double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remainder(double __x, double __y) throw(); extern double __remainder(double __x, double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbn(double __x, int __n) throw(); extern double __scalbn(double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogb(double __x) throw(); extern int __ilogb(double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbln(double __x, long __n) throw(); extern double __scalbln(double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nearbyint(double __x) throw(); extern double __nearbyint(double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double round(double __x) throw() __attribute((const)); extern double __round(double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double trunc(double __x) throw() __attribute((const)); extern double __trunc(double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remquo(double __x, double __y, int * __quo) throw(); extern double __remquo(double __x, double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrint(double __x) throw(); extern long __lrint(double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrint(double __x) throw(); extern long long __llrint(double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lround(double __x) throw(); extern long __lround(double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llround(double __x) throw(); extern long long __llround(double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fdim(double __x, double __y) throw(); extern double __fdim(double __x, double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmax(double __x, double __y) throw() __attribute((const)); extern double __fmax(double __x, double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmin(double __x, double __y) throw() __attribute((const)); extern double __fmin(double __x, double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassify(double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __attribute((gnu_inline)) inline int __signbit(double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fma(double __x, double __y, double __z) throw(); extern double __fma(double __x, double __y, double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignaling(double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalb(double __x, double __n) throw(); extern double __scalb(double __x, double __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acosf(float __x) throw(); extern float __acosf(float __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinf(float __x) throw(); extern float __asinf(float __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanf(float __x) throw(); extern float __atanf(float __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atan2f(float __y, float __x) throw(); extern float __atan2f(float __y, float __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cosf(float __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinf(float __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanf(float __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float coshf(float __x) throw(); extern float __coshf(float __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinhf(float __x) throw(); extern float __sinhf(float __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanhf(float __x) throw(); extern float __tanhf(float __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf(float __x, float * __sinx, float * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acoshf(float __x) throw(); extern float __acoshf(float __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinhf(float __x) throw(); extern float __asinhf(float __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanhf(float __x) throw(); extern float __atanhf(float __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expf(float __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float frexpf(float __x, int * __exponent) throw(); extern float __frexpf(float __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ldexpf(float __x, int __exponent) throw(); extern float __ldexpf(float __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logf(float __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log10f(float __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float modff(float __x, float * __iptr) throw(); extern float __modff(float __x, float * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp10f(float __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float pow10f(float __x) throw(); extern float __pow10f(float __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expm1f(float __x) throw(); extern float __expm1f(float __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log1pf(float __x) throw(); extern float __log1pf(float __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logbf(float __x) throw(); extern float __logbf(float __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp2f(float __x) throw(); extern float __exp2f(float __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log2f(float __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float powf(float __x, float __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sqrtf(float __x) throw(); extern float __sqrtf(float __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float hypotf(float __x, float __y) throw(); extern float __hypotf(float __x, float __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cbrtf(float __x) throw(); extern float __cbrtf(float __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ceilf(float __x) throw() __attribute((const)); extern float __ceilf(float __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fabsf(float __x) throw() __attribute((const)); extern float __fabsf(float __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float floorf(float __x) throw() __attribute((const)); extern float __floorf(float __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmodf(float __x, float __y) throw(); extern float __fmodf(float __x, float __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinff(float __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finitef(float __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinff(float __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitef(float __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float dremf(float __x, float __y) throw(); extern float __dremf(float __x, float __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float significandf(float __x) throw(); extern float __significandf(float __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float copysignf(float __x, float __y) throw() __attribute((const)); extern float __copysignf(float __x, float __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nanf(const char * __tagb) throw() __attribute((const)); extern float __nanf(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnanf(float __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanf(float __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j0f(float) throw(); extern float __j0f(float) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j1f(float) throw(); extern float __j1f(float) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float jnf(int, float) throw(); extern float __jnf(int, float) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y0f(float) throw(); extern float __y0f(float) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y1f(float) throw(); extern float __y1f(float) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ynf(int, float) throw(); extern float __ynf(int, float) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erff(float) throw(); extern float __erff(float) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erfcf(float) throw(); extern float __erfcf(float) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf(float) throw(); extern float __lgammaf(float) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tgammaf(float) throw(); extern float __tgammaf(float) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float gammaf(float) throw(); extern float __gammaf(float) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf_r(float, int * __signgamp) throw(); extern float __lgammaf_r(float, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float rintf(float __x) throw(); extern float __rintf(float __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextafterf(float __x, float __y) throw() __attribute((const)); extern float __nextafterf(float __x, float __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nexttowardf(float __x, long double __y) throw() __attribute((const)); extern float __nexttowardf(float __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remainderf(float __x, float __y) throw(); extern float __remainderf(float __x, float __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbnf(float __x, int __n) throw(); extern float __scalbnf(float __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf(float __x) throw(); extern int __ilogbf(float __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalblnf(float __x, long __n) throw(); extern float __scalblnf(float __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nearbyintf(float __x) throw(); extern float __nearbyintf(float __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundf(float __x) throw() __attribute((const)); extern float __roundf(float __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float truncf(float __x) throw() __attribute((const)); extern float __truncf(float __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remquof(float __x, float __y, int * __quo) throw(); extern float __remquof(float __x, float __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf(float __x) throw(); extern long __lrintf(float __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf(float __x) throw(); extern long long __llrintf(float __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf(float __x) throw(); extern long __lroundf(float __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf(float __x) throw(); extern long long __llroundf(float __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fdimf(float __x, float __y) throw(); extern float __fdimf(float __x, float __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxf(float __x, float __y) throw() __attribute((const)); extern float __fmaxf(float __x, float __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminf(float __x, float __y) throw() __attribute((const)); extern float __fminf(float __x, float __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassifyf(float __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __attribute((gnu_inline)) inline int __signbitf(float __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaf(float __x, float __y, float __z) throw(); extern float __fmaf(float __x, float __y, float __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignalingf(float __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbf(float __x, float __n) throw(); extern float __scalbf(float __x, float __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acosl(long double __x) throw(); extern long double __acosl(long double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinl(long double __x) throw(); extern long double __asinl(long double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanl(long double __x) throw(); extern long double __atanl(long double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atan2l(long double __y, long double __x) throw(); extern long double __atan2l(long double __y, long double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cosl(long double __x) throw(); extern long double __cosl(long double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinl(long double __x) throw(); extern long double __sinl(long double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanl(long double __x) throw(); extern long double __tanl(long double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double coshl(long double __x) throw(); extern long double __coshl(long double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinhl(long double __x) throw(); extern long double __sinhl(long double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanhl(long double __x) throw(); extern long double __tanhl(long double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosl(long double __x, long double * __sinx, long double * __cosx) throw(); extern void __sincosl(long double __x, long double * __sinx, long double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acoshl(long double __x) throw(); extern long double __acoshl(long double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinhl(long double __x) throw(); extern long double __asinhl(long double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanhl(long double __x) throw(); extern long double __atanhl(long double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expl(long double __x) throw(); extern long double __expl(long double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double frexpl(long double __x, int * __exponent) throw(); extern long double __frexpl(long double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ldexpl(long double __x, int __exponent) throw(); extern long double __ldexpl(long double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logl(long double __x) throw(); extern long double __logl(long double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log10l(long double __x) throw(); extern long double __log10l(long double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double modfl(long double __x, long double * __iptr) throw(); extern long double __modfl(long double __x, long double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp10l(long double __x) throw(); extern long double __exp10l(long double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double pow10l(long double __x) throw(); extern long double __pow10l(long double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expm1l(long double __x) throw(); extern long double __expm1l(long double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log1pl(long double __x) throw(); extern long double __log1pl(long double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logbl(long double __x) throw(); extern long double __logbl(long double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp2l(long double __x) throw(); extern long double __exp2l(long double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log2l(long double __x) throw(); extern long double __log2l(long double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double powl(long double __x, long double __y) throw(); extern long double __powl(long double __x, long double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sqrtl(long double __x) throw(); extern long double __sqrtl(long double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double hypotl(long double __x, long double __y) throw(); extern long double __hypotl(long double __x, long double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cbrtl(long double __x) throw(); extern long double __cbrtl(long double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ceill(long double __x) throw() __attribute((const)); extern long double __ceill(long double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fabsl(long double __x) throw() __attribute((const)); extern long double __fabsl(long double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double floorl(long double __x) throw() __attribute((const)); extern long double __floorl(long double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmodl(long double __x, long double __y) throw(); extern long double __fmodl(long double __x, long double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinfl(long double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finitel(long double __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinfl(long double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitel(long double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double dreml(long double __x, long double __y) throw(); extern long double __dreml(long double __x, long double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double significandl(long double __x) throw(); extern long double __significandl(long double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double copysignl(long double __x, long double __y) throw() __attribute((const)); extern long double __copysignl(long double __x, long double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nanl(const char * __tagb) throw() __attribute((const)); extern long double __nanl(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnanl(long double __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanl(long double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j0l(long double) throw(); extern long double __j0l(long double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j1l(long double) throw(); extern long double __j1l(long double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double jnl(int, long double) throw(); extern long double __jnl(int, long double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y0l(long double) throw(); extern long double __y0l(long double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y1l(long double) throw(); extern long double __y1l(long double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ynl(int, long double) throw(); extern long double __ynl(int, long double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfl(long double) throw(); extern long double __erfl(long double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfcl(long double) throw(); extern long double __erfcl(long double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal(long double) throw(); extern long double __lgammal(long double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tgammal(long double) throw(); extern long double __tgammal(long double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double gammal(long double) throw(); extern long double __gammal(long double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal_r(long double, int * __signgamp) throw(); extern long double __lgammal_r(long double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double rintl(long double __x) throw(); extern long double __rintl(long double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextafterl(long double __x, long double __y) throw() __attribute((const)); extern long double __nextafterl(long double __x, long double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nexttowardl(long double __x, long double __y) throw() __attribute((const)); extern long double __nexttowardl(long double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remainderl(long double __x, long double __y) throw(); extern long double __remainderl(long double __x, long double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbnl(long double __x, int __n) throw(); extern long double __scalbnl(long double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbl(long double __x) throw(); extern int __ilogbl(long double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalblnl(long double __x, long __n) throw(); extern long double __scalblnl(long double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nearbyintl(long double __x) throw(); extern long double __nearbyintl(long double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundl(long double __x) throw() __attribute((const)); extern long double __roundl(long double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double truncl(long double __x) throw() __attribute((const)); extern long double __truncl(long double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remquol(long double __x, long double __y, int * __quo) throw(); extern long double __remquol(long double __x, long double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintl(long double __x) throw(); extern long __lrintl(long double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintl(long double __x) throw(); extern long long __llrintl(long double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundl(long double __x) throw(); extern long __lroundl(long double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundl(long double __x) throw(); extern long long __llroundl(long double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fdiml(long double __x, long double __y) throw(); extern long double __fdiml(long double __x, long double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxl(long double __x, long double __y) throw() __attribute((const)); extern long double __fmaxl(long double __x, long double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminl(long double __x, long double __y) throw() __attribute((const)); extern long double __fminl(long double __x, long double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassifyl(long double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __attribute((gnu_inline)) inline int __signbitl(long double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmal(long double __x, long double __y, long double __z) throw(); extern long double __fmal(long double __x, long double __y, long double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignalingl(long double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbl(long double __x, long double __n) throw(); extern long double __scalbl(long double __x, long double __n) throw();
# 168 "/usr/include/math.h" 3
extern int signgam;
# 210 "/usr/include/math.h" 3
enum {
# 211 "/usr/include/math.h" 3
FP_NAN,
# 214 "/usr/include/math.h" 3
FP_INFINITE,
# 217 "/usr/include/math.h" 3
FP_ZERO,
# 220 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 223 "/usr/include/math.h" 3
FP_NORMAL
# 226 "/usr/include/math.h" 3
};
# 354 "/usr/include/math.h" 3
typedef
# 348 "/usr/include/math.h" 3
enum {
# 349 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 350 "/usr/include/math.h" 3
_SVID_ = 0,
# 351 "/usr/include/math.h" 3
_XOPEN_,
# 352 "/usr/include/math.h" 3
_POSIX_,
# 353 "/usr/include/math.h" 3
_ISOC_
# 354 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE;
# 359 "/usr/include/math.h" 3
extern _LIB_VERSION_TYPE _LIB_VERSION;
# 370 "/usr/include/math.h" 3
struct __exception {
# 375 "/usr/include/math.h" 3
int type;
# 376 "/usr/include/math.h" 3
char *name;
# 377 "/usr/include/math.h" 3
double arg1;
# 378 "/usr/include/math.h" 3
double arg2;
# 379 "/usr/include/math.h" 3
double retval;
# 380 "/usr/include/math.h" 3
};
# 383 "/usr/include/math.h" 3
extern int matherr(__exception * __exc) throw();
# 126 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline int
# 127 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
 __attribute((__leaf__)) __signbitf(float __x) throw()
# 128 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
{
# 130 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
int __m;
# 131 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__asm__("pmovmskb %1, %0" : "=r" (__m) : "x" (__x));
# 132 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
return (__m & 8) != 0;
# 137 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
}
# 138 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline int
# 139 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
 __attribute((__leaf__)) __signbit(double __x) throw()
# 140 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
{
# 142 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
int __m;
# 143 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__asm__("pmovmskb %1, %0" : "=r" (__m) : "x" (__x));
# 144 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
return (__m & 128) != 0;
# 149 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
}
# 150 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) extern inline int
# 151 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
 __attribute((__leaf__)) __signbitl(long double __x) throw()
# 152 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
{
# 153 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
__extension__ union { long double __l; int __i[3]; } __u = {__l: __x};
# 154 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
return (((__u.__i)[2]) & 32768) != 0;
# 155 "/usr/include/x86_64-linux-gnu/bits/mathinline.h" 3
}
# 534 "/usr/include/math.h" 3
}
# 34 "/usr/include/stdlib.h" 3
extern "C" {
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
typedef
# 51 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline unsigned __bswap_32(unsigned __bsx)
# 46 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 48 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 109 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 110 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 111 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 112 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 66 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
union wait {
# 68 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
int w_status;
# 70 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 72 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 73 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 74 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 75 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 83 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_terminated;
# 85 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 87 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 88 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 89 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 96 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_stopped;
# 97 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
};
# 101 "/usr/include/stdlib.h" 3
typedef
# 98 "/usr/include/stdlib.h" 3
struct {
# 99 "/usr/include/stdlib.h" 3
int quot;
# 100 "/usr/include/stdlib.h" 3
int rem;
# 101 "/usr/include/stdlib.h" 3
} div_t;
# 109 "/usr/include/stdlib.h" 3
typedef
# 106 "/usr/include/stdlib.h" 3
struct {
# 107 "/usr/include/stdlib.h" 3
long quot;
# 108 "/usr/include/stdlib.h" 3
long rem;
# 109 "/usr/include/stdlib.h" 3
} ldiv_t;
# 121 "/usr/include/stdlib.h" 3
__extension__ typedef
# 118 "/usr/include/stdlib.h" 3
struct {
# 119 "/usr/include/stdlib.h" 3
long long quot;
# 120 "/usr/include/stdlib.h" 3
long long rem;
# 121 "/usr/include/stdlib.h" 3
} lldiv_t;
# 139 "/usr/include/stdlib.h" 3
extern ::size_t __ctype_get_mb_cur_max() throw() __attribute((__warn_unused_result__));
# 144 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline double atof(const char * __nptr) throw()
# 145 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 147 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline int atoi(const char * __nptr) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 150 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline long atol(const char * __nptr) throw()
# 151 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 157 "/usr/include/stdlib.h" 3
__extension__ extern __attribute((gnu_inline)) inline long long atoll(const char * __nptr) throw()
# 158 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 164 "/usr/include/stdlib.h" 3
extern double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 172 "/usr/include/stdlib.h" 3
extern float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 173 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 175 "/usr/include/stdlib.h" 3
extern long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 177 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 183 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 185 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 195 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 197 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 209 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 211 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 214 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 216 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 239 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 241 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 243 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 246 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 249 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 255 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 260 "/usr/include/stdlib.h" 3
extern double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 262 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 264 "/usr/include/stdlib.h" 3
extern float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 266 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 268 "/usr/include/stdlib.h" 3
extern long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 271 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 277 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline int
# 278 "/usr/include/stdlib.h" 3
 __attribute((__leaf__)) atoi(const char *__nptr) throw()
# 279 "/usr/include/stdlib.h" 3
{
# 280 "/usr/include/stdlib.h" 3
return (int)strtol(__nptr, (char **)__null, 10);
# 281 "/usr/include/stdlib.h" 3
}
# 282 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long
# 283 "/usr/include/stdlib.h" 3
 __attribute((__leaf__)) atol(const char *__nptr) throw()
# 284 "/usr/include/stdlib.h" 3
{
# 285 "/usr/include/stdlib.h" 3
return strtol(__nptr, (char **)__null, 10);
# 286 "/usr/include/stdlib.h" 3
}
# 292 "/usr/include/stdlib.h" 3
__extension__
# 291 "/usr/include/stdlib.h" 3
__attribute((__gnu_inline__)) extern inline long long
# 292 "/usr/include/stdlib.h" 3
 __attribute((__leaf__)) atoll(const char *__nptr) throw()
# 293 "/usr/include/stdlib.h" 3
{
# 294 "/usr/include/stdlib.h" 3
return strtoll(__nptr, (char **)__null, 10);
# 295 "/usr/include/stdlib.h" 3
}
# 305 "/usr/include/stdlib.h" 3
extern char *l64a(long __n) throw() __attribute((__warn_unused_result__));
# 308 "/usr/include/stdlib.h" 3
extern long a64l(const char * __s) throw()
# 309 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_char u_char;
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_short u_short;
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_int u_int;
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_long u_long;
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __quad_t quad_t;
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_quad_t u_quad_t;
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsid_t fsid_t;
# 44 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __loff_t loff_t;
# 48 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino_t ino_t;
# 55 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino64_t ino64_t;
# 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __dev_t dev_t;
# 65 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __gid_t gid_t;
# 70 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __mode_t mode_t;
# 75 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __nlink_t nlink_t;
# 80 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uid_t uid_t;
# 86 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off_t off_t;
# 93 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off64_t off64_t;
# 104 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __id_t id_t;
# 109 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ssize_t ssize_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __daddr_t daddr_t;
# 116 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __caddr_t caddr_t;
# 122 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __key_t key_t;
# 136 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __useconds_t useconds_t;
# 140 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __suseconds_t suseconds_t;
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long ulong;
# 151 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short ushort;
# 152 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned uint;
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef signed char int8_t __attribute((__mode__(__QI__)));
# 195 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef short int16_t __attribute((__mode__(__HI__)));
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef int int32_t __attribute((__mode__(__SI__)));
# 197 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long int64_t __attribute((__mode__(__DI__)));
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned char u_int8_t __attribute((__mode__(__QI__)));
# 201 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short u_int16_t __attribute((__mode__(__HI__)));
# 202 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned u_int32_t __attribute((__mode__(__SI__)));
# 203 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long u_int64_t __attribute((__mode__(__DI__)));
# 205 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long register_t __attribute((__mode__(__word__)));
# 22 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
typedef
# 28 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
struct {
# 29 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
} __sigset_t;
# 37 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __sigset_t sigset_t;
# 54 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef long __fd_mask;
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef
# 65 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 69 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set;
# 82 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __fd_mask fd_mask;
# 96 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" {
# 106 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 118 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern long __fdelt_chk(long __d);
# 25 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
extern long __fdelt_warn(long __d)
# 26 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3
 __attribute((__warning__("bit outside of fd_set selected")));
# 131 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
}
# 24 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern "C" {
# 27 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern __attribute((gnu_inline)) inline unsigned gnu_dev_major(unsigned long long __dev) throw()
# 28 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern __attribute((gnu_inline)) inline unsigned gnu_dev_minor(unsigned long long __dev) throw()
# 31 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern __attribute((gnu_inline)) inline unsigned long long gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 35 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__
# 38 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__attribute((__gnu_inline__)) __attribute((const)) extern inline unsigned
# 39 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((__leaf__)) gnu_dev_major(unsigned long long __dev) throw()
# 40 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
{
# 41 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
return ((__dev >> 8) & (4095)) | (((unsigned)(__dev >> 32)) & (~4095));
# 42 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 45 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__
# 44 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__attribute((__gnu_inline__)) __attribute((const)) extern inline unsigned
# 45 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((__leaf__)) gnu_dev_minor(unsigned long long __dev) throw()
# 46 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
return (__dev & (255)) | (((unsigned)(__dev >> 12)) & (~255));
# 48 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 51 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__
# 50 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__attribute((__gnu_inline__)) __attribute((const)) extern inline unsigned long long
# 51 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((__leaf__)) gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 52 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
{
# 53 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
return (((__minor & (255)) | ((__major & (4095)) << 8)) | (((unsigned long long)(__minor & (~255))) << 12)) | (((unsigned long long)(__major & (~4095))) << 32);
# 56 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 58 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blksize_t blksize_t;
# 235 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt_t blkcnt_t;
# 239 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt_t fsblkcnt_t;
# 243 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt64_t blkcnt64_t;
# 263 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt64_t fsblkcnt64_t;
# 264 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt64_t fsfilcnt64_t;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned long pthread_t;
# 63 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union pthread_attr_t {
# 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 66 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
};
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef pthread_attr_t pthread_attr_t;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 75 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __pthread_list_t;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 92 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __count;
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __owner;
# 98 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nusers;
# 102 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __kind;
# 104 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __spins;
# 105 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __elision;
# 106 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 125 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 126 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 127 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 131 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 132 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 133 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 140 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 142 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 143 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 144 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __futex;
# 145 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 146 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 147 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 148 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
void *__mutex;
# 149 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 150 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 151 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 152 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 153 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 157 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 158 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 159 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t;
# 164 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned pthread_key_t;
# 168 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef int pthread_once_t;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 175 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 178 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 179 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 180 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 181 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 182 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 183 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 184 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 185 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __writer;
# 186 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __shared;
# 187 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
signed char __rwelision;
# 192 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned char __pad1[7];
# 195 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 198 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __flags;
# 200 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 220 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 221 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 225 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 226 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 227 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t;
# 234 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef volatile int pthread_spinlock_t;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 240 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 241 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 242 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 246 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 247 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 248 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t;
# 273 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
}
# 321 "/usr/include/stdlib.h" 3
extern long random() throw();
# 324 "/usr/include/stdlib.h" 3
extern void srandom(unsigned __seed) throw();
# 330 "/usr/include/stdlib.h" 3
extern char *initstate(unsigned __seed, char * __statebuf, ::size_t __statelen) throw()
# 331 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 335 "/usr/include/stdlib.h" 3
extern char *setstate(char * __statebuf) throw() __attribute((__nonnull__(1)));
# 343 "/usr/include/stdlib.h" 3
struct random_data {
# 345 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 346 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 347 "/usr/include/stdlib.h" 3
int32_t *state;
# 348 "/usr/include/stdlib.h" 3
int rand_type;
# 349 "/usr/include/stdlib.h" 3
int rand_deg;
# 350 "/usr/include/stdlib.h" 3
int rand_sep;
# 351 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 352 "/usr/include/stdlib.h" 3
};
# 354 "/usr/include/stdlib.h" 3
extern int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) throw()
# 355 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 357 "/usr/include/stdlib.h" 3
extern int srandom_r(unsigned __seed, random_data * __buf) throw()
# 358 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 360 "/usr/include/stdlib.h" 3
extern int initstate_r(unsigned __seed, char *__restrict__ __statebuf, ::size_t __statelen, random_data *__restrict__ __buf) throw()
# 363 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 365 "/usr/include/stdlib.h" 3
extern int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) throw()
# 367 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 374 "/usr/include/stdlib.h" 3
extern int rand() throw();
# 376 "/usr/include/stdlib.h" 3
extern void srand(unsigned __seed) throw();
# 381 "/usr/include/stdlib.h" 3
extern int rand_r(unsigned * __seed) throw();
# 389 "/usr/include/stdlib.h" 3
extern double drand48() throw();
# 390 "/usr/include/stdlib.h" 3
extern double erand48(unsigned short __xsubi[3]) throw() __attribute((__nonnull__(1)));
# 393 "/usr/include/stdlib.h" 3
extern long lrand48() throw();
# 394 "/usr/include/stdlib.h" 3
extern long nrand48(unsigned short __xsubi[3]) throw()
# 395 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 398 "/usr/include/stdlib.h" 3
extern long mrand48() throw();
# 399 "/usr/include/stdlib.h" 3
extern long jrand48(unsigned short __xsubi[3]) throw()
# 400 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/stdlib.h" 3
extern void srand48(long __seedval) throw();
# 404 "/usr/include/stdlib.h" 3
extern unsigned short *seed48(unsigned short __seed16v[3]) throw()
# 405 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 406 "/usr/include/stdlib.h" 3
extern void lcong48(unsigned short __param[7]) throw() __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
struct drand48_data {
# 414 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 415 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 416 "/usr/include/stdlib.h" 3
unsigned short __c;
# 417 "/usr/include/stdlib.h" 3
unsigned short __init;
# 418 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 420 "/usr/include/stdlib.h" 3
};
# 423 "/usr/include/stdlib.h" 3
extern int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 424 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 425 "/usr/include/stdlib.h" 3
extern int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 427 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 433 "/usr/include/stdlib.h" 3
extern int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 436 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 439 "/usr/include/stdlib.h" 3
extern int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 442 "/usr/include/stdlib.h" 3
extern int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 445 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 448 "/usr/include/stdlib.h" 3
extern int srand48_r(long __seedval, drand48_data * __buffer) throw()
# 449 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/stdlib.h" 3
extern int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) throw()
# 452 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/stdlib.h" 3
extern int lcong48_r(unsigned short __param[7], drand48_data * __buffer) throw()
# 456 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 466 "/usr/include/stdlib.h" 3
extern void *malloc(::size_t __size) throw() __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 468 "/usr/include/stdlib.h" 3
extern void *calloc(::size_t __nmemb, ::size_t __size) throw()
# 469 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 480 "/usr/include/stdlib.h" 3
extern void *realloc(void * __ptr, ::size_t __size) throw()
# 481 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 483 "/usr/include/stdlib.h" 3
extern void free(void * __ptr) throw();
# 488 "/usr/include/stdlib.h" 3
extern void cfree(void * __ptr) throw();
# 26 "/usr/include/alloca.h" 3
extern "C" {
# 32 "/usr/include/alloca.h" 3
extern void *alloca(::size_t __size) throw();
# 38 "/usr/include/alloca.h" 3
}
# 498 "/usr/include/stdlib.h" 3
extern void *valloc(::size_t __size) throw() __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 503 "/usr/include/stdlib.h" 3
extern int posix_memalign(void ** __memptr, ::size_t __alignment, ::size_t __size) throw()
# 504 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 509 "/usr/include/stdlib.h" 3
extern void *aligned_alloc(::size_t __alignment, ::size_t __size) throw()
# 510 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2))) __attribute((__warn_unused_result__));
# 515 "/usr/include/stdlib.h" 3
extern void abort() throw() __attribute((__noreturn__));
# 519 "/usr/include/stdlib.h" 3
extern int atexit(void (* __func)(void)) throw() __attribute((__nonnull__(1)));
# 524 "/usr/include/stdlib.h" 3
extern "C++" int at_quick_exit(void (* __func)(void)) throw() __asm__("at_quick_exit")
# 525 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern int on_exit(void (* __func)(int __status, void * __arg), void * __arg) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
extern void exit(int __status) throw() __attribute((__noreturn__));
# 549 "/usr/include/stdlib.h" 3
extern void quick_exit(int __status) throw() __attribute((__noreturn__));
# 557 "/usr/include/stdlib.h" 3
extern void _Exit(int __status) throw() __attribute((__noreturn__));
# 564 "/usr/include/stdlib.h" 3
extern char *getenv(const char * __name) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 570 "/usr/include/stdlib.h" 3
extern char *secure_getenv(const char * __name) throw()
# 571 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 578 "/usr/include/stdlib.h" 3
extern int putenv(char * __string) throw() __attribute((__nonnull__(1)));
# 584 "/usr/include/stdlib.h" 3
extern int setenv(const char * __name, const char * __value, int __replace) throw()
# 585 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 588 "/usr/include/stdlib.h" 3
extern int unsetenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 595 "/usr/include/stdlib.h" 3
extern int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern char *mktemp(char * __template) throw() __attribute((__nonnull__(1)));
# 619 "/usr/include/stdlib.h" 3
extern int mkstemp(char * __template) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 629 "/usr/include/stdlib.h" 3
extern int mkstemp64(char * __template) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 641 "/usr/include/stdlib.h" 3
extern int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 651 "/usr/include/stdlib.h" 3
extern int mkstemps64(char * __template, int __suffixlen)
# 652 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 662 "/usr/include/stdlib.h" 3
extern char *mkdtemp(char * __template) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 673 "/usr/include/stdlib.h" 3
extern int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 683 "/usr/include/stdlib.h" 3
extern int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 693 "/usr/include/stdlib.h" 3
extern int mkostemps(char * __template, int __suffixlen, int __flags)
# 694 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 705 "/usr/include/stdlib.h" 3
extern int mkostemps64(char * __template, int __suffixlen, int __flags)
# 706 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 716 "/usr/include/stdlib.h" 3
extern int system(const char * __command) __attribute((__warn_unused_result__));
# 723 "/usr/include/stdlib.h" 3
extern char *canonicalize_file_name(const char * __name) throw()
# 724 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 733 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw()
# 734 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 741 "/usr/include/stdlib.h" 3
typedef int (*__compar_fn_t)(const void *, const void *);
# 744 "/usr/include/stdlib.h" 3
typedef __compar_fn_t comparison_fn_t;
# 748 "/usr/include/stdlib.h" 3
typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
# 754 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline void *bsearch(const void * __key, const void * __base, ::size_t __nmemb, ::size_t __size, __compar_fn_t __compar)
# 756 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5))) __attribute((__warn_unused_result__));
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__attribute((__gnu_inline__)) extern inline void *
# 20 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
bsearch(const void *__key, const void *__base, ::size_t __nmemb, ::size_t __size, __compar_fn_t
# 21 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__compar)
# 22 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
::size_t __l, __u, __idx;
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
const void *__p;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
int __comparison;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (0);
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __nmemb;
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
while (__l < __u)
# 30 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
{
# 31 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__idx = ((__l + __u) / (2));
# 32 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__p = ((void *)(((const char *)__base) + (__idx * __size)));
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__comparison = (*__compar)(__key, __p);
# 34 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison < 0) {
# 35 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__u = __idx; } else {
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
if (__comparison > 0) {
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
__l = (__idx + (1)); } else {
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return (void *)__p; } }
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
}
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
return __null;
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3
}
# 764 "/usr/include/stdlib.h" 3
extern void qsort(void * __base, ::size_t __nmemb, ::size_t __size, __compar_fn_t __compar)
# 765 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 767 "/usr/include/stdlib.h" 3
extern void qsort_r(void * __base, ::size_t __nmemb, ::size_t __size, __compar_d_fn_t __compar, void * __arg)
# 769 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 774 "/usr/include/stdlib.h" 3
extern int abs(int __x) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 775 "/usr/include/stdlib.h" 3
extern long labs(long __x) throw() __attribute((const)) __attribute((__warn_unused_result__));
# 779 "/usr/include/stdlib.h" 3
__extension__ extern long long llabs(long long __x) throw()
# 780 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 788 "/usr/include/stdlib.h" 3
extern div_t div(int __numer, int __denom) throw()
# 789 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 790 "/usr/include/stdlib.h" 3
extern ldiv_t ldiv(long __numer, long __denom) throw()
# 791 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 796 "/usr/include/stdlib.h" 3
__extension__ extern lldiv_t lldiv(long long __numer, long long __denom) throw()
# 798 "/usr/include/stdlib.h" 3
 __attribute((const)) __attribute((__warn_unused_result__));
# 811 "/usr/include/stdlib.h" 3
extern char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 812 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 817 "/usr/include/stdlib.h" 3
extern char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 818 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 823 "/usr/include/stdlib.h" 3
extern char *gcvt(double __value, int __ndigit, char * __buf) throw()
# 824 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 829 "/usr/include/stdlib.h" 3
extern char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 832 "/usr/include/stdlib.h" 3
extern char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 834 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4))) __attribute((__warn_unused_result__));
# 835 "/usr/include/stdlib.h" 3
extern char *qgcvt(long double __value, int __ndigit, char * __buf) throw()
# 836 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3))) __attribute((__warn_unused_result__));
# 841 "/usr/include/stdlib.h" 3
extern int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 843 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 844 "/usr/include/stdlib.h" 3
extern int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 846 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 848 "/usr/include/stdlib.h" 3
extern int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 851 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 852 "/usr/include/stdlib.h" 3
extern int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 855 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 862 "/usr/include/stdlib.h" 3
extern int mblen(const char * __s, ::size_t __n) throw();
# 865 "/usr/include/stdlib.h" 3
extern int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, ::size_t __n) throw();
# 869 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline int wctomb(char * __s, wchar_t __wchar) throw();
# 873 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline ::size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, ::size_t __n) throw();
# 876 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline ::size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, ::size_t __n) throw();
# 887 "/usr/include/stdlib.h" 3
extern int rpmatch(const char * __response) throw() __attribute((__nonnull__(1))) __attribute((__warn_unused_result__));
# 898 "/usr/include/stdlib.h" 3
extern int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) throw()
# 901 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3))) __attribute((__warn_unused_result__));
# 907 "/usr/include/stdlib.h" 3
extern void setkey(const char * __key) throw() __attribute((__nonnull__(1)));
# 915 "/usr/include/stdlib.h" 3
extern int posix_openpt(int __oflag) __attribute((__warn_unused_result__));
# 923 "/usr/include/stdlib.h" 3
extern int grantpt(int __fd) throw();
# 927 "/usr/include/stdlib.h" 3
extern int unlockpt(int __fd) throw();
# 932 "/usr/include/stdlib.h" 3
extern char *ptsname(int __fd) throw() __attribute((__warn_unused_result__));
# 939 "/usr/include/stdlib.h" 3
extern __attribute((gnu_inline)) inline int ptsname_r(int __fd, char * __buf, ::size_t __buflen) throw()
# 940 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 943 "/usr/include/stdlib.h" 3
extern int getpt();
# 950 "/usr/include/stdlib.h" 3
extern int getloadavg(double __loadavg[], int __nelem) throw()
# 951 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
__attribute((__gnu_inline__)) extern inline double
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
 __attribute((__leaf__)) atof(const char *__nptr) throw()
# 27 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
{
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
return strtod(__nptr, (char **)__null);
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3
}
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern char *__realpath_chk(const char *__restrict__ __name, char *__restrict__ __resolved, ::size_t __resolvedlen) throw()
# 25 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 26 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern char *__realpath_alias(const char *__restrict__ __name, char *__restrict__ __resolved) throw() __asm__("realpath")
# 28 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 29 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern char *__realpath_chk_warn(const char *__restrict__ __name, char *__restrict__ __resolved, ::size_t __resolvedlen) throw() __asm__("__realpath_chk")
# 32 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__))
# 33 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("second argument of realpath must be either NULL or at least PATH_MAX bytes long buffer")));
# 36 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__))
# 37 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__leaf__)) extern inline char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw()
# 38 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 39 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) != ((::size_t)(-1)))
# 40 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__resolved, 2 > 1) < (4096)) {
# 43 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk_warn(__name, __resolved, __builtin_object_size(__resolved, 2 > 1)); }
# 45 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_chk(__name, __resolved, __builtin_object_size(__resolved, 2 > 1));
# 46 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 48 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __realpath_alias(__name, __resolved);
# 49 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __ptsname_r_chk(int __fd, char * __buf, ::size_t __buflen, ::size_t __nreal) throw()
# 53 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 54 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __ptsname_r_alias(int __fd, char * __buf, ::size_t __buflen) throw() __asm__("ptsname_r")
# 56 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 57 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __ptsname_r_chk_warn(int __fd, char * __buf, ::size_t __buflen, ::size_t __nreal) throw() __asm__("__ptsname_r_chk")
# 60 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__nonnull__(2))) __attribute((__warning__("ptsname_r called with buflen bigger than size of buf")));
# 63 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 64 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) ptsname_r(int __fd, char *__buf, ::size_t __buflen) throw()
# 65 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 66 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__buf, 2 > 1) != ((::size_t)(-1)))
# 67 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 68 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 69 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 70 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__buflen > __builtin_object_size(__buf, 2 > 1)) {
# 71 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_chk_warn(__fd, __buf, __buflen, __builtin_object_size(__buf, 2 > 1)); }
# 72 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __ptsname_r_alias(__fd, __buf, __buflen);
# 74 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 77 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __wctomb_chk(char * __s, wchar_t __wchar, ::size_t __buflen) throw()
# 78 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 79 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern int __wctomb_alias(char * __s, wchar_t __wchar) throw() __asm__("wctomb")
# 80 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 82 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline int
# 83 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) wctomb(char *__s, wchar_t __wchar) throw()
# 84 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 92 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 93 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_chk(__s, __wchar, __builtin_object_size(__s, 2 > 1)); }
# 94 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wctomb_alias(__s, __wchar);
# 95 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 98 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern ::size_t __mbstowcs_chk(wchar_t *__restrict__ __dst, const char *__restrict__ __src, ::size_t __len, ::size_t __dstlen) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern ::size_t __mbstowcs_alias(wchar_t *__restrict__ __dst, const char *__restrict__ __src, ::size_t __len) throw() __asm__("mbstowcs");
# 105 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern ::size_t __mbstowcs_chk_warn(wchar_t *__restrict__ __dst, const char *__restrict__ __src, ::size_t __len, ::size_t __dstlen) throw() __asm__("__mbstowcs_chk")
# 109 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("mbstowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 112 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline ::size_t
# 113 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) mbstowcs(wchar_t *__restrict__ __dst, const char *__restrict__ __src, ::size_t __len) throw()
# 115 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 116 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((::size_t)(-1)))
# 117 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 118 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 119 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 122 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 123 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 125 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 126 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __mbstowcs_alias(__dst, __src, __len);
# 127 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 130 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern ::size_t __wcstombs_chk(char *__restrict__ __dst, const wchar_t *__restrict__ __src, ::size_t __len, ::size_t __dstlen) throw();
# 133 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern ::size_t __wcstombs_alias(char *__restrict__ __dst, const wchar_t *__restrict__ __src, ::size_t __len) throw() __asm__("wcstombs");
# 137 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
extern ::size_t __wcstombs_chk_warn(char *__restrict__ __dst, const wchar_t *__restrict__ __src, ::size_t __len, ::size_t __dstlen) throw() __asm__("__wcstombs_chk")
# 141 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__warning__("wcstombs called with dst buffer smaller than len")));
# 143 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline ::size_t
# 144 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
 __attribute((__leaf__)) wcstombs(char *__restrict__ __dst, const wchar_t *__restrict__ __src, ::size_t __len) throw()
# 146 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 147 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((::size_t)(-1)))
# 148 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
{
# 149 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (!(0)) {
# 150 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 151 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 152 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_chk_warn(__dst, __src, __len, __builtin_object_size(__dst, 2 > 1)); }
# 153 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 154 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
return __wcstombs_alias(__dst, __src, __len);
# 155 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3
}
# 967 "/usr/include/stdlib.h" 3
}
# 194 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 196 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef unsigned long size_t;
# 197 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef long ptrdiff_t;
# 200 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef __decltype((nullptr)) nullptr_t;
# 202 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 216 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 218 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 219 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 220 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace __gnu_cxx {
# 222 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 223 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 68 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 76 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 78 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 82 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 83 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 85 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< bool >
# 86 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 87 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 90 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 91 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 95 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 96 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __traitor {
# 98 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 99 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 100 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 103 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class , class >
# 104 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same {
# 106 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 107 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 108 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 113 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 114 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 115 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 118 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 119 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_void {
# 121 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 122 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 123 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 128 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 129 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 130 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 135 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 136 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 138 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 139 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 140 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 147 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 149 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 150 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 151 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 154 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 156 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 157 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 158 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 161 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 163 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 164 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 165 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 168 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 170 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 171 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 172 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 176 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 178 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 179 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 180 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 185 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char16_t> {
# 187 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 188 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 189 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 192 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char32_t> {
# 194 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 195 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 196 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 200 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 202 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 203 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 204 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 207 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 209 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 210 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 211 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 214 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 216 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 217 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 218 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 221 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 223 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 224 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 225 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 228 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 230 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 231 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 232 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 235 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 237 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 238 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 239 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 242 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 244 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 245 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 246 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 251 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 252 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 253 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 287 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 288 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 290 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 291 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 292 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 296 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 298 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 299 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 300 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 303 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 305 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 306 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 307 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 310 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 312 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 313 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 314 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 319 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 320 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 322 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 323 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 324 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 326 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 327 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 329 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 330 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 331 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 339 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 340 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 341 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 343 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 344 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 347 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 348 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 349 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 354 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 355 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 357 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 362 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 363 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 365 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 370 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 371 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_char {
# 373 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 374 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 375 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 378 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 380 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 381 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 382 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 386 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 388 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 389 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 390 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 393 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 394 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 396 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 397 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 398 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 401 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 403 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 404 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 405 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 408 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 410 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 411 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 412 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 417 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 418 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 419 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 424 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 425 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 427 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 428 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 429 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 432 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator> class move_iterator;
# 435 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator>
# 436 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator< move_iterator< _Iterator> > {
# 438 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 439 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 440 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 444 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool , class >
# 43 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if {
# 44 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 46 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 47 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 48 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Tp __type; };
# 52 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 53 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type {
# 54 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 56 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 57 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 58 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 62 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 63 "/usr/include/c++/5/ext/type_traits.h" 3
struct __add_unsigned {
# 66 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 69 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 70 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 73 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 74 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 77 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 78 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 81 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 82 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 85 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 86 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned __type; };
# 89 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 90 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 93 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 94 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 98 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 101 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 105 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/ext/type_traits.h" 3
struct __remove_unsigned {
# 109 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 112 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 113 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 116 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 117 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 120 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 121 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 124 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 125 "/usr/include/c++/5/ext/type_traits.h" 3
typedef short __type; };
# 128 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 129 "/usr/include/c++/5/ext/type_traits.h" 3
typedef int __type; };
# 132 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 133 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long __type; };
# 136 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 137 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long long __type; };
# 141 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 144 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 148 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 150 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 151 "/usr/include/c++/5/ext/type_traits.h" 3
{ return __ptr == 0; }
# 153 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 155 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 156 "/usr/include/c++/5/ext/type_traits.h" 3
{ return false; }
# 160 "/usr/include/c++/5/ext/type_traits.h" 3
inline bool __is_null_pointer(std::nullptr_t)
# 161 "/usr/include/c++/5/ext/type_traits.h" 3
{ return true; }
# 165 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, bool = std::__is_integer< _Tp> ::__value>
# 166 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote {
# 167 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 172 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 173 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 174 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 178 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long double __type; };
# 181 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< double> {
# 182 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 185 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< float> {
# 186 "/usr/include/c++/5/ext/type_traits.h" 3
typedef float __type; };
# 188 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class
# 189 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 190 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type>
# 191 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_2 {
# 193 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(_Tp2() + _Up2()) __type;
# 194 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 196 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class
# 197 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 198 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 199 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type>
# 200 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_3 {
# 202 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__((_Tp2() + _Up2()) + _Vp2()) __type;
# 203 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 205 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp, class
# 206 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 207 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 208 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type, class
# 209 "/usr/include/c++/5/ext/type_traits.h" 3
_Wp2 = typename __promote< _Wp> ::__type>
# 210 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_4 {
# 212 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(((_Tp2() + _Up2()) + _Vp2()) + _Wp2()) __type;
# 213 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 216 "/usr/include/c++/5/ext/type_traits.h" 3
}
# 75 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/cmath" 3
constexpr double abs(double __x)
# 82 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 87 "/usr/include/c++/5/cmath" 3
constexpr float abs(float __x)
# 88 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 91 "/usr/include/c++/5/cmath" 3
constexpr long double abs(long double __x)
# 92 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 95 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/5/cmath" 3
abs(_Tp __x)
# 100 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 102 "/usr/include/c++/5/cmath" 3
using ::acos;
# 106 "/usr/include/c++/5/cmath" 3
constexpr float acos(float __x)
# 107 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosf(__x); }
# 110 "/usr/include/c++/5/cmath" 3
constexpr long double acos(long double __x)
# 111 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosl(__x); }
# 114 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/5/cmath" 3
acos(_Tp __x)
# 119 "/usr/include/c++/5/cmath" 3
{ return __builtin_acos(__x); }
# 121 "/usr/include/c++/5/cmath" 3
using ::asin;
# 125 "/usr/include/c++/5/cmath" 3
constexpr float asin(float __x)
# 126 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinf(__x); }
# 129 "/usr/include/c++/5/cmath" 3
constexpr long double asin(long double __x)
# 130 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinl(__x); }
# 133 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/5/cmath" 3
asin(_Tp __x)
# 138 "/usr/include/c++/5/cmath" 3
{ return __builtin_asin(__x); }
# 140 "/usr/include/c++/5/cmath" 3
using ::atan;
# 144 "/usr/include/c++/5/cmath" 3
constexpr float atan(float __x)
# 145 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanf(__x); }
# 148 "/usr/include/c++/5/cmath" 3
constexpr long double atan(long double __x)
# 149 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanl(__x); }
# 152 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 156 "/usr/include/c++/5/cmath" 3
atan(_Tp __x)
# 157 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan(__x); }
# 159 "/usr/include/c++/5/cmath" 3
using ::atan2;
# 163 "/usr/include/c++/5/cmath" 3
constexpr float atan2(float __y, float __x)
# 164 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 167 "/usr/include/c++/5/cmath" 3
constexpr long double atan2(long double __y, long double __x)
# 168 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 171 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 174 "/usr/include/c++/5/cmath" 3
atan2(_Tp __y, _Up __x)
# 175 "/usr/include/c++/5/cmath" 3
{
# 176 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 177 "/usr/include/c++/5/cmath" 3
return atan2((__type)__y, (__type)__x);
# 178 "/usr/include/c++/5/cmath" 3
}
# 180 "/usr/include/c++/5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/5/cmath" 3
constexpr float ceil(float __x)
# 185 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/5/cmath" 3
constexpr long double ceil(long double __x)
# 189 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceill(__x); }
# 192 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/5/cmath" 3
ceil(_Tp __x)
# 197 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceil(__x); }
# 199 "/usr/include/c++/5/cmath" 3
using ::cos;
# 203 "/usr/include/c++/5/cmath" 3
constexpr float cos(float __x)
# 204 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosf(__x); }
# 207 "/usr/include/c++/5/cmath" 3
constexpr long double cos(long double __x)
# 208 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosl(__x); }
# 211 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/5/cmath" 3
cos(_Tp __x)
# 216 "/usr/include/c++/5/cmath" 3
{ return __builtin_cos(__x); }
# 218 "/usr/include/c++/5/cmath" 3
using ::cosh;
# 222 "/usr/include/c++/5/cmath" 3
constexpr float cosh(float __x)
# 223 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshf(__x); }
# 226 "/usr/include/c++/5/cmath" 3
constexpr long double cosh(long double __x)
# 227 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshl(__x); }
# 230 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/5/cmath" 3
cosh(_Tp __x)
# 235 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosh(__x); }
# 237 "/usr/include/c++/5/cmath" 3
using ::exp;
# 241 "/usr/include/c++/5/cmath" 3
constexpr float exp(float __x)
# 242 "/usr/include/c++/5/cmath" 3
{ return __builtin_expf(__x); }
# 245 "/usr/include/c++/5/cmath" 3
constexpr long double exp(long double __x)
# 246 "/usr/include/c++/5/cmath" 3
{ return __builtin_expl(__x); }
# 249 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/5/cmath" 3
exp(_Tp __x)
# 254 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp(__x); }
# 256 "/usr/include/c++/5/cmath" 3
using ::fabs;
# 260 "/usr/include/c++/5/cmath" 3
constexpr float fabs(float __x)
# 261 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 264 "/usr/include/c++/5/cmath" 3
constexpr long double fabs(long double __x)
# 265 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 268 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/5/cmath" 3
fabs(_Tp __x)
# 273 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 275 "/usr/include/c++/5/cmath" 3
using ::floor;
# 279 "/usr/include/c++/5/cmath" 3
constexpr float floor(float __x)
# 280 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorf(__x); }
# 283 "/usr/include/c++/5/cmath" 3
constexpr long double floor(long double __x)
# 284 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorl(__x); }
# 287 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 291 "/usr/include/c++/5/cmath" 3
floor(_Tp __x)
# 292 "/usr/include/c++/5/cmath" 3
{ return __builtin_floor(__x); }
# 294 "/usr/include/c++/5/cmath" 3
using ::fmod;
# 298 "/usr/include/c++/5/cmath" 3
constexpr float fmod(float __x, float __y)
# 299 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 302 "/usr/include/c++/5/cmath" 3
constexpr long double fmod(long double __x, long double __y)
# 303 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 306 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 309 "/usr/include/c++/5/cmath" 3
fmod(_Tp __x, _Up __y)
# 310 "/usr/include/c++/5/cmath" 3
{
# 311 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 312 "/usr/include/c++/5/cmath" 3
return fmod((__type)__x, (__type)__y);
# 313 "/usr/include/c++/5/cmath" 3
}
# 315 "/usr/include/c++/5/cmath" 3
using ::frexp;
# 319 "/usr/include/c++/5/cmath" 3
inline float frexp(float __x, int *__exp)
# 320 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 323 "/usr/include/c++/5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 324 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 327 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/5/cmath" 3
frexp(_Tp __x, int *__exp)
# 332 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 334 "/usr/include/c++/5/cmath" 3
using ::ldexp;
# 338 "/usr/include/c++/5/cmath" 3
constexpr float ldexp(float __x, int __exp)
# 339 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 342 "/usr/include/c++/5/cmath" 3
constexpr long double ldexp(long double __x, int __exp)
# 343 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 346 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/5/cmath" 3
ldexp(_Tp __x, int __exp)
# 351 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 353 "/usr/include/c++/5/cmath" 3
using ::log;
# 357 "/usr/include/c++/5/cmath" 3
constexpr float log(float __x)
# 358 "/usr/include/c++/5/cmath" 3
{ return __builtin_logf(__x); }
# 361 "/usr/include/c++/5/cmath" 3
constexpr long double log(long double __x)
# 362 "/usr/include/c++/5/cmath" 3
{ return __builtin_logl(__x); }
# 365 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/5/cmath" 3
log(_Tp __x)
# 370 "/usr/include/c++/5/cmath" 3
{ return __builtin_log(__x); }
# 372 "/usr/include/c++/5/cmath" 3
using ::log10;
# 376 "/usr/include/c++/5/cmath" 3
constexpr float log10(float __x)
# 377 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10f(__x); }
# 380 "/usr/include/c++/5/cmath" 3
constexpr long double log10(long double __x)
# 381 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10l(__x); }
# 384 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 388 "/usr/include/c++/5/cmath" 3
log10(_Tp __x)
# 389 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10(__x); }
# 391 "/usr/include/c++/5/cmath" 3
using ::modf;
# 395 "/usr/include/c++/5/cmath" 3
inline float modf(float __x, float *__iptr)
# 396 "/usr/include/c++/5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 399 "/usr/include/c++/5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 400 "/usr/include/c++/5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 403 "/usr/include/c++/5/cmath" 3
using ::pow;
# 407 "/usr/include/c++/5/cmath" 3
constexpr float pow(float __x, float __y)
# 408 "/usr/include/c++/5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 411 "/usr/include/c++/5/cmath" 3
constexpr long double pow(long double __x, long double __y)
# 412 "/usr/include/c++/5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 431 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 434 "/usr/include/c++/5/cmath" 3
pow(_Tp __x, _Up __y)
# 435 "/usr/include/c++/5/cmath" 3
{
# 436 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 437 "/usr/include/c++/5/cmath" 3
return pow((__type)__x, (__type)__y);
# 438 "/usr/include/c++/5/cmath" 3
}
# 440 "/usr/include/c++/5/cmath" 3
using ::sin;
# 444 "/usr/include/c++/5/cmath" 3
constexpr float sin(float __x)
# 445 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinf(__x); }
# 448 "/usr/include/c++/5/cmath" 3
constexpr long double sin(long double __x)
# 449 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinl(__x); }
# 452 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/5/cmath" 3
sin(_Tp __x)
# 457 "/usr/include/c++/5/cmath" 3
{ return __builtin_sin(__x); }
# 459 "/usr/include/c++/5/cmath" 3
using ::sinh;
# 463 "/usr/include/c++/5/cmath" 3
constexpr float sinh(float __x)
# 464 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhf(__x); }
# 467 "/usr/include/c++/5/cmath" 3
constexpr long double sinh(long double __x)
# 468 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhl(__x); }
# 471 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/5/cmath" 3
sinh(_Tp __x)
# 476 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinh(__x); }
# 478 "/usr/include/c++/5/cmath" 3
using ::sqrt;
# 482 "/usr/include/c++/5/cmath" 3
constexpr float sqrt(float __x)
# 483 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 486 "/usr/include/c++/5/cmath" 3
constexpr long double sqrt(long double __x)
# 487 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 490 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/5/cmath" 3
sqrt(_Tp __x)
# 495 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrt(__x); }
# 497 "/usr/include/c++/5/cmath" 3
using ::tan;
# 501 "/usr/include/c++/5/cmath" 3
constexpr float tan(float __x)
# 502 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanf(__x); }
# 505 "/usr/include/c++/5/cmath" 3
constexpr long double tan(long double __x)
# 506 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanl(__x); }
# 509 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/5/cmath" 3
tan(_Tp __x)
# 514 "/usr/include/c++/5/cmath" 3
{ return __builtin_tan(__x); }
# 516 "/usr/include/c++/5/cmath" 3
using ::tanh;
# 520 "/usr/include/c++/5/cmath" 3
constexpr float tanh(float __x)
# 521 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhf(__x); }
# 524 "/usr/include/c++/5/cmath" 3
constexpr long double tanh(long double __x)
# 525 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhl(__x); }
# 528 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 532 "/usr/include/c++/5/cmath" 3
tanh(_Tp __x)
# 533 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanh(__x); }
# 536 "/usr/include/c++/5/cmath" 3
}
# 555 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 563 "/usr/include/c++/5/cmath" 3
constexpr int fpclassify(float __x)
# 564 "/usr/include/c++/5/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 565 "/usr/include/c++/5/cmath" 3
}
# 568 "/usr/include/c++/5/cmath" 3
constexpr int fpclassify(double __x)
# 569 "/usr/include/c++/5/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 570 "/usr/include/c++/5/cmath" 3
}
# 573 "/usr/include/c++/5/cmath" 3
constexpr int fpclassify(long double __x)
# 574 "/usr/include/c++/5/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 575 "/usr/include/c++/5/cmath" 3
}
# 578 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, int> ::__type
# 581 "/usr/include/c++/5/cmath" 3
fpclassify(_Tp __x)
# 582 "/usr/include/c++/5/cmath" 3
{ return (__x != 0) ? 4 : 2; }
# 586 "/usr/include/c++/5/cmath" 3
constexpr bool isfinite(float __x)
# 587 "/usr/include/c++/5/cmath" 3
{ return __builtin_isfinite(__x); }
# 590 "/usr/include/c++/5/cmath" 3
constexpr bool isfinite(double __x)
# 591 "/usr/include/c++/5/cmath" 3
{ return __builtin_isfinite(__x); }
# 594 "/usr/include/c++/5/cmath" 3
constexpr bool isfinite(long double __x)
# 595 "/usr/include/c++/5/cmath" 3
{ return __builtin_isfinite(__x); }
# 598 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 601 "/usr/include/c++/5/cmath" 3
isfinite(_Tp __x)
# 602 "/usr/include/c++/5/cmath" 3
{ return true; }
# 606 "/usr/include/c++/5/cmath" 3
constexpr bool isinf(float __x)
# 607 "/usr/include/c++/5/cmath" 3
{ return __builtin_isinf(__x); }
# 610 "/usr/include/c++/5/cmath" 3
constexpr bool isinf(double __x)
# 611 "/usr/include/c++/5/cmath" 3
{ return __builtin_isinf(__x); }
# 614 "/usr/include/c++/5/cmath" 3
constexpr bool isinf(long double __x)
# 615 "/usr/include/c++/5/cmath" 3
{ return __builtin_isinf(__x); }
# 618 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 621 "/usr/include/c++/5/cmath" 3
isinf(_Tp __x)
# 622 "/usr/include/c++/5/cmath" 3
{ return false; }
# 626 "/usr/include/c++/5/cmath" 3
constexpr bool isnan(float __x)
# 627 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnan(__x); }
# 630 "/usr/include/c++/5/cmath" 3
constexpr bool isnan(double __x)
# 631 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnan(__x); }
# 634 "/usr/include/c++/5/cmath" 3
constexpr bool isnan(long double __x)
# 635 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnan(__x); }
# 638 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 641 "/usr/include/c++/5/cmath" 3
isnan(_Tp __x)
# 642 "/usr/include/c++/5/cmath" 3
{ return false; }
# 646 "/usr/include/c++/5/cmath" 3
constexpr bool isnormal(float __x)
# 647 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnormal(__x); }
# 650 "/usr/include/c++/5/cmath" 3
constexpr bool isnormal(double __x)
# 651 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnormal(__x); }
# 654 "/usr/include/c++/5/cmath" 3
constexpr bool isnormal(long double __x)
# 655 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnormal(__x); }
# 658 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 661 "/usr/include/c++/5/cmath" 3
isnormal(_Tp __x)
# 662 "/usr/include/c++/5/cmath" 3
{ return (__x != 0) ? true : false; }
# 667 "/usr/include/c++/5/cmath" 3
constexpr bool signbit(float __x)
# 668 "/usr/include/c++/5/cmath" 3
{ return __builtin_signbitf(__x); }
# 671 "/usr/include/c++/5/cmath" 3
constexpr bool signbit(double __x)
# 672 "/usr/include/c++/5/cmath" 3
{ return __builtin_signbit(__x); }
# 675 "/usr/include/c++/5/cmath" 3
constexpr bool signbit(long double __x)
# 676 "/usr/include/c++/5/cmath" 3
{ return __builtin_signbitl(__x); }
# 679 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 682 "/usr/include/c++/5/cmath" 3
signbit(_Tp __x)
# 683 "/usr/include/c++/5/cmath" 3
{ return (__x < 0) ? true : false; }
# 687 "/usr/include/c++/5/cmath" 3
constexpr bool isgreater(float __x, float __y)
# 688 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 691 "/usr/include/c++/5/cmath" 3
constexpr bool isgreater(double __x, double __y)
# 692 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 695 "/usr/include/c++/5/cmath" 3
constexpr bool isgreater(long double __x, long double __y)
# 696 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 699 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 703 "/usr/include/c++/5/cmath" 3
isgreater(_Tp __x, _Up __y)
# 704 "/usr/include/c++/5/cmath" 3
{
# 705 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 706 "/usr/include/c++/5/cmath" 3
return __builtin_isgreater((__type)__x, (__type)__y);
# 707 "/usr/include/c++/5/cmath" 3
}
# 711 "/usr/include/c++/5/cmath" 3
constexpr bool isgreaterequal(float __x, float __y)
# 712 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 715 "/usr/include/c++/5/cmath" 3
constexpr bool isgreaterequal(double __x, double __y)
# 716 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 719 "/usr/include/c++/5/cmath" 3
constexpr bool isgreaterequal(long double __x, long double __y)
# 720 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 723 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 727 "/usr/include/c++/5/cmath" 3
isgreaterequal(_Tp __x, _Up __y)
# 728 "/usr/include/c++/5/cmath" 3
{
# 729 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 730 "/usr/include/c++/5/cmath" 3
return __builtin_isgreaterequal((__type)__x, (__type)__y);
# 731 "/usr/include/c++/5/cmath" 3
}
# 735 "/usr/include/c++/5/cmath" 3
constexpr bool isless(float __x, float __y)
# 736 "/usr/include/c++/5/cmath" 3
{ return __builtin_isless(__x, __y); }
# 739 "/usr/include/c++/5/cmath" 3
constexpr bool isless(double __x, double __y)
# 740 "/usr/include/c++/5/cmath" 3
{ return __builtin_isless(__x, __y); }
# 743 "/usr/include/c++/5/cmath" 3
constexpr bool isless(long double __x, long double __y)
# 744 "/usr/include/c++/5/cmath" 3
{ return __builtin_isless(__x, __y); }
# 747 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 751 "/usr/include/c++/5/cmath" 3
isless(_Tp __x, _Up __y)
# 752 "/usr/include/c++/5/cmath" 3
{
# 753 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 754 "/usr/include/c++/5/cmath" 3
return __builtin_isless((__type)__x, (__type)__y);
# 755 "/usr/include/c++/5/cmath" 3
}
# 759 "/usr/include/c++/5/cmath" 3
constexpr bool islessequal(float __x, float __y)
# 760 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 763 "/usr/include/c++/5/cmath" 3
constexpr bool islessequal(double __x, double __y)
# 764 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 767 "/usr/include/c++/5/cmath" 3
constexpr bool islessequal(long double __x, long double __y)
# 768 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 771 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 775 "/usr/include/c++/5/cmath" 3
islessequal(_Tp __x, _Up __y)
# 776 "/usr/include/c++/5/cmath" 3
{
# 777 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 778 "/usr/include/c++/5/cmath" 3
return __builtin_islessequal((__type)__x, (__type)__y);
# 779 "/usr/include/c++/5/cmath" 3
}
# 783 "/usr/include/c++/5/cmath" 3
constexpr bool islessgreater(float __x, float __y)
# 784 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 787 "/usr/include/c++/5/cmath" 3
constexpr bool islessgreater(double __x, double __y)
# 788 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 791 "/usr/include/c++/5/cmath" 3
constexpr bool islessgreater(long double __x, long double __y)
# 792 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 795 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 799 "/usr/include/c++/5/cmath" 3
islessgreater(_Tp __x, _Up __y)
# 800 "/usr/include/c++/5/cmath" 3
{
# 801 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 802 "/usr/include/c++/5/cmath" 3
return __builtin_islessgreater((__type)__x, (__type)__y);
# 803 "/usr/include/c++/5/cmath" 3
}
# 807 "/usr/include/c++/5/cmath" 3
constexpr bool isunordered(float __x, float __y)
# 808 "/usr/include/c++/5/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 811 "/usr/include/c++/5/cmath" 3
constexpr bool isunordered(double __x, double __y)
# 812 "/usr/include/c++/5/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 815 "/usr/include/c++/5/cmath" 3
constexpr bool isunordered(long double __x, long double __y)
# 816 "/usr/include/c++/5/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 819 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 823 "/usr/include/c++/5/cmath" 3
isunordered(_Tp __x, _Up __y)
# 824 "/usr/include/c++/5/cmath" 3
{
# 825 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 826 "/usr/include/c++/5/cmath" 3
return __builtin_isunordered((__type)__x, (__type)__y);
# 827 "/usr/include/c++/5/cmath" 3
}
# 947 "/usr/include/c++/5/cmath" 3
}
# 1062 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 1067 "/usr/include/c++/5/cmath" 3
using ::double_t;
# 1068 "/usr/include/c++/5/cmath" 3
using ::float_t;
# 1071 "/usr/include/c++/5/cmath" 3
using ::acosh;
# 1072 "/usr/include/c++/5/cmath" 3
using ::acoshf;
# 1073 "/usr/include/c++/5/cmath" 3
using ::acoshl;
# 1075 "/usr/include/c++/5/cmath" 3
using ::asinh;
# 1076 "/usr/include/c++/5/cmath" 3
using ::asinhf;
# 1077 "/usr/include/c++/5/cmath" 3
using ::asinhl;
# 1079 "/usr/include/c++/5/cmath" 3
using ::atanh;
# 1080 "/usr/include/c++/5/cmath" 3
using ::atanhf;
# 1081 "/usr/include/c++/5/cmath" 3
using ::atanhl;
# 1083 "/usr/include/c++/5/cmath" 3
using ::cbrt;
# 1084 "/usr/include/c++/5/cmath" 3
using ::cbrtf;
# 1085 "/usr/include/c++/5/cmath" 3
using ::cbrtl;
# 1087 "/usr/include/c++/5/cmath" 3
using ::copysign;
# 1088 "/usr/include/c++/5/cmath" 3
using ::copysignf;
# 1089 "/usr/include/c++/5/cmath" 3
using ::copysignl;
# 1091 "/usr/include/c++/5/cmath" 3
using ::erf;
# 1092 "/usr/include/c++/5/cmath" 3
using ::erff;
# 1093 "/usr/include/c++/5/cmath" 3
using ::erfl;
# 1095 "/usr/include/c++/5/cmath" 3
using ::erfc;
# 1096 "/usr/include/c++/5/cmath" 3
using ::erfcf;
# 1097 "/usr/include/c++/5/cmath" 3
using ::erfcl;
# 1099 "/usr/include/c++/5/cmath" 3
using ::exp2;
# 1100 "/usr/include/c++/5/cmath" 3
using ::exp2f;
# 1101 "/usr/include/c++/5/cmath" 3
using ::exp2l;
# 1103 "/usr/include/c++/5/cmath" 3
using ::expm1;
# 1104 "/usr/include/c++/5/cmath" 3
using ::expm1f;
# 1105 "/usr/include/c++/5/cmath" 3
using ::expm1l;
# 1107 "/usr/include/c++/5/cmath" 3
using ::fdim;
# 1108 "/usr/include/c++/5/cmath" 3
using ::fdimf;
# 1109 "/usr/include/c++/5/cmath" 3
using ::fdiml;
# 1111 "/usr/include/c++/5/cmath" 3
using ::fma;
# 1112 "/usr/include/c++/5/cmath" 3
using ::fmaf;
# 1113 "/usr/include/c++/5/cmath" 3
using ::fmal;
# 1115 "/usr/include/c++/5/cmath" 3
using ::fmax;
# 1116 "/usr/include/c++/5/cmath" 3
using ::fmaxf;
# 1117 "/usr/include/c++/5/cmath" 3
using ::fmaxl;
# 1119 "/usr/include/c++/5/cmath" 3
using ::fmin;
# 1120 "/usr/include/c++/5/cmath" 3
using ::fminf;
# 1121 "/usr/include/c++/5/cmath" 3
using ::fminl;
# 1123 "/usr/include/c++/5/cmath" 3
using ::hypot;
# 1124 "/usr/include/c++/5/cmath" 3
using ::hypotf;
# 1125 "/usr/include/c++/5/cmath" 3
using ::hypotl;
# 1127 "/usr/include/c++/5/cmath" 3
using ::ilogb;
# 1128 "/usr/include/c++/5/cmath" 3
using ::ilogbf;
# 1129 "/usr/include/c++/5/cmath" 3
using ::ilogbl;
# 1131 "/usr/include/c++/5/cmath" 3
using ::lgamma;
# 1132 "/usr/include/c++/5/cmath" 3
using ::lgammaf;
# 1133 "/usr/include/c++/5/cmath" 3
using ::lgammal;
# 1135 "/usr/include/c++/5/cmath" 3
using ::llrint;
# 1136 "/usr/include/c++/5/cmath" 3
using ::llrintf;
# 1137 "/usr/include/c++/5/cmath" 3
using ::llrintl;
# 1139 "/usr/include/c++/5/cmath" 3
using ::llround;
# 1140 "/usr/include/c++/5/cmath" 3
using ::llroundf;
# 1141 "/usr/include/c++/5/cmath" 3
using ::llroundl;
# 1143 "/usr/include/c++/5/cmath" 3
using ::log1p;
# 1144 "/usr/include/c++/5/cmath" 3
using ::log1pf;
# 1145 "/usr/include/c++/5/cmath" 3
using ::log1pl;
# 1147 "/usr/include/c++/5/cmath" 3
using ::log2;
# 1148 "/usr/include/c++/5/cmath" 3
using ::log2f;
# 1149 "/usr/include/c++/5/cmath" 3
using ::log2l;
# 1151 "/usr/include/c++/5/cmath" 3
using ::logb;
# 1152 "/usr/include/c++/5/cmath" 3
using ::logbf;
# 1153 "/usr/include/c++/5/cmath" 3
using ::logbl;
# 1155 "/usr/include/c++/5/cmath" 3
using ::lrint;
# 1156 "/usr/include/c++/5/cmath" 3
using ::lrintf;
# 1157 "/usr/include/c++/5/cmath" 3
using ::lrintl;
# 1159 "/usr/include/c++/5/cmath" 3
using ::lround;
# 1160 "/usr/include/c++/5/cmath" 3
using ::lroundf;
# 1161 "/usr/include/c++/5/cmath" 3
using ::lroundl;
# 1163 "/usr/include/c++/5/cmath" 3
using ::nan;
# 1164 "/usr/include/c++/5/cmath" 3
using ::nanf;
# 1165 "/usr/include/c++/5/cmath" 3
using ::nanl;
# 1167 "/usr/include/c++/5/cmath" 3
using ::nearbyint;
# 1168 "/usr/include/c++/5/cmath" 3
using ::nearbyintf;
# 1169 "/usr/include/c++/5/cmath" 3
using ::nearbyintl;
# 1171 "/usr/include/c++/5/cmath" 3
using ::nextafter;
# 1172 "/usr/include/c++/5/cmath" 3
using ::nextafterf;
# 1173 "/usr/include/c++/5/cmath" 3
using ::nextafterl;
# 1175 "/usr/include/c++/5/cmath" 3
using ::nexttoward;
# 1176 "/usr/include/c++/5/cmath" 3
using ::nexttowardf;
# 1177 "/usr/include/c++/5/cmath" 3
using ::nexttowardl;
# 1179 "/usr/include/c++/5/cmath" 3
using ::remainder;
# 1180 "/usr/include/c++/5/cmath" 3
using ::remainderf;
# 1181 "/usr/include/c++/5/cmath" 3
using ::remainderl;
# 1183 "/usr/include/c++/5/cmath" 3
using ::remquo;
# 1184 "/usr/include/c++/5/cmath" 3
using ::remquof;
# 1185 "/usr/include/c++/5/cmath" 3
using ::remquol;
# 1187 "/usr/include/c++/5/cmath" 3
using ::rint;
# 1188 "/usr/include/c++/5/cmath" 3
using ::rintf;
# 1189 "/usr/include/c++/5/cmath" 3
using ::rintl;
# 1191 "/usr/include/c++/5/cmath" 3
using ::round;
# 1192 "/usr/include/c++/5/cmath" 3
using ::roundf;
# 1193 "/usr/include/c++/5/cmath" 3
using ::roundl;
# 1195 "/usr/include/c++/5/cmath" 3
using ::scalbln;
# 1196 "/usr/include/c++/5/cmath" 3
using ::scalblnf;
# 1197 "/usr/include/c++/5/cmath" 3
using ::scalblnl;
# 1199 "/usr/include/c++/5/cmath" 3
using ::scalbn;
# 1200 "/usr/include/c++/5/cmath" 3
using ::scalbnf;
# 1201 "/usr/include/c++/5/cmath" 3
using ::scalbnl;
# 1203 "/usr/include/c++/5/cmath" 3
using ::tgamma;
# 1204 "/usr/include/c++/5/cmath" 3
using ::tgammaf;
# 1205 "/usr/include/c++/5/cmath" 3
using ::tgammal;
# 1207 "/usr/include/c++/5/cmath" 3
using ::trunc;
# 1208 "/usr/include/c++/5/cmath" 3
using ::truncf;
# 1209 "/usr/include/c++/5/cmath" 3
using ::truncl;
# 1214 "/usr/include/c++/5/cmath" 3
constexpr float acosh(float __x)
# 1215 "/usr/include/c++/5/cmath" 3
{ return __builtin_acoshf(__x); }
# 1218 "/usr/include/c++/5/cmath" 3
constexpr long double acosh(long double __x)
# 1219 "/usr/include/c++/5/cmath" 3
{ return __builtin_acoshl(__x); }
# 1222 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1225 "/usr/include/c++/5/cmath" 3
acosh(_Tp __x)
# 1226 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosh(__x); }
# 1230 "/usr/include/c++/5/cmath" 3
constexpr float asinh(float __x)
# 1231 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinhf(__x); }
# 1234 "/usr/include/c++/5/cmath" 3
constexpr long double asinh(long double __x)
# 1235 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinhl(__x); }
# 1238 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1241 "/usr/include/c++/5/cmath" 3
asinh(_Tp __x)
# 1242 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinh(__x); }
# 1246 "/usr/include/c++/5/cmath" 3
constexpr float atanh(float __x)
# 1247 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanhf(__x); }
# 1250 "/usr/include/c++/5/cmath" 3
constexpr long double atanh(long double __x)
# 1251 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanhl(__x); }
# 1254 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1257 "/usr/include/c++/5/cmath" 3
atanh(_Tp __x)
# 1258 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanh(__x); }
# 1262 "/usr/include/c++/5/cmath" 3
constexpr float cbrt(float __x)
# 1263 "/usr/include/c++/5/cmath" 3
{ return __builtin_cbrtf(__x); }
# 1266 "/usr/include/c++/5/cmath" 3
constexpr long double cbrt(long double __x)
# 1267 "/usr/include/c++/5/cmath" 3
{ return __builtin_cbrtl(__x); }
# 1270 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1273 "/usr/include/c++/5/cmath" 3
cbrt(_Tp __x)
# 1274 "/usr/include/c++/5/cmath" 3
{ return __builtin_cbrt(__x); }
# 1278 "/usr/include/c++/5/cmath" 3
constexpr float copysign(float __x, float __y)
# 1279 "/usr/include/c++/5/cmath" 3
{ return __builtin_copysignf(__x, __y); }
# 1282 "/usr/include/c++/5/cmath" 3
constexpr long double copysign(long double __x, long double __y)
# 1283 "/usr/include/c++/5/cmath" 3
{ return __builtin_copysignl(__x, __y); }
# 1286 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1288 "/usr/include/c++/5/cmath" 3
copysign(_Tp __x, _Up __y)
# 1289 "/usr/include/c++/5/cmath" 3
{
# 1290 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1291 "/usr/include/c++/5/cmath" 3
return copysign((__type)__x, (__type)__y);
# 1292 "/usr/include/c++/5/cmath" 3
}
# 1296 "/usr/include/c++/5/cmath" 3
constexpr float erf(float __x)
# 1297 "/usr/include/c++/5/cmath" 3
{ return __builtin_erff(__x); }
# 1300 "/usr/include/c++/5/cmath" 3
constexpr long double erf(long double __x)
# 1301 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfl(__x); }
# 1304 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1307 "/usr/include/c++/5/cmath" 3
erf(_Tp __x)
# 1308 "/usr/include/c++/5/cmath" 3
{ return __builtin_erf(__x); }
# 1312 "/usr/include/c++/5/cmath" 3
constexpr float erfc(float __x)
# 1313 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfcf(__x); }
# 1316 "/usr/include/c++/5/cmath" 3
constexpr long double erfc(long double __x)
# 1317 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfcl(__x); }
# 1320 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1323 "/usr/include/c++/5/cmath" 3
erfc(_Tp __x)
# 1324 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfc(__x); }
# 1328 "/usr/include/c++/5/cmath" 3
constexpr float exp2(float __x)
# 1329 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp2f(__x); }
# 1332 "/usr/include/c++/5/cmath" 3
constexpr long double exp2(long double __x)
# 1333 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp2l(__x); }
# 1336 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1339 "/usr/include/c++/5/cmath" 3
exp2(_Tp __x)
# 1340 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp2(__x); }
# 1344 "/usr/include/c++/5/cmath" 3
constexpr float expm1(float __x)
# 1345 "/usr/include/c++/5/cmath" 3
{ return __builtin_expm1f(__x); }
# 1348 "/usr/include/c++/5/cmath" 3
constexpr long double expm1(long double __x)
# 1349 "/usr/include/c++/5/cmath" 3
{ return __builtin_expm1l(__x); }
# 1352 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1355 "/usr/include/c++/5/cmath" 3
expm1(_Tp __x)
# 1356 "/usr/include/c++/5/cmath" 3
{ return __builtin_expm1(__x); }
# 1360 "/usr/include/c++/5/cmath" 3
constexpr float fdim(float __x, float __y)
# 1361 "/usr/include/c++/5/cmath" 3
{ return __builtin_fdimf(__x, __y); }
# 1364 "/usr/include/c++/5/cmath" 3
constexpr long double fdim(long double __x, long double __y)
# 1365 "/usr/include/c++/5/cmath" 3
{ return __builtin_fdiml(__x, __y); }
# 1368 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1370 "/usr/include/c++/5/cmath" 3
fdim(_Tp __x, _Up __y)
# 1371 "/usr/include/c++/5/cmath" 3
{
# 1372 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1373 "/usr/include/c++/5/cmath" 3
return fdim((__type)__x, (__type)__y);
# 1374 "/usr/include/c++/5/cmath" 3
}
# 1378 "/usr/include/c++/5/cmath" 3
constexpr float fma(float __x, float __y, float __z)
# 1379 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmaf(__x, __y, __z); }
# 1382 "/usr/include/c++/5/cmath" 3
constexpr long double fma(long double __x, long double __y, long double __z)
# 1383 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmal(__x, __y, __z); }
# 1386 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up, class _Vp> constexpr typename __gnu_cxx::__promote_3< _Tp, _Up, _Vp> ::__type
# 1388 "/usr/include/c++/5/cmath" 3
fma(_Tp __x, _Up __y, _Vp __z)
# 1389 "/usr/include/c++/5/cmath" 3
{
# 1390 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_3< _Tp, _Up, _Vp> ::__type __type;
# 1391 "/usr/include/c++/5/cmath" 3
return fma((__type)__x, (__type)__y, (__type)__z);
# 1392 "/usr/include/c++/5/cmath" 3
}
# 1396 "/usr/include/c++/5/cmath" 3
constexpr float fmax(float __x, float __y)
# 1397 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmaxf(__x, __y); }
# 1400 "/usr/include/c++/5/cmath" 3
constexpr long double fmax(long double __x, long double __y)
# 1401 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmaxl(__x, __y); }
# 1404 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1406 "/usr/include/c++/5/cmath" 3
fmax(_Tp __x, _Up __y)
# 1407 "/usr/include/c++/5/cmath" 3
{
# 1408 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1409 "/usr/include/c++/5/cmath" 3
return fmax((__type)__x, (__type)__y);
# 1410 "/usr/include/c++/5/cmath" 3
}
# 1414 "/usr/include/c++/5/cmath" 3
constexpr float fmin(float __x, float __y)
# 1415 "/usr/include/c++/5/cmath" 3
{ return __builtin_fminf(__x, __y); }
# 1418 "/usr/include/c++/5/cmath" 3
constexpr long double fmin(long double __x, long double __y)
# 1419 "/usr/include/c++/5/cmath" 3
{ return __builtin_fminl(__x, __y); }
# 1422 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1424 "/usr/include/c++/5/cmath" 3
fmin(_Tp __x, _Up __y)
# 1425 "/usr/include/c++/5/cmath" 3
{
# 1426 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1427 "/usr/include/c++/5/cmath" 3
return fmin((__type)__x, (__type)__y);
# 1428 "/usr/include/c++/5/cmath" 3
}
# 1432 "/usr/include/c++/5/cmath" 3
constexpr float hypot(float __x, float __y)
# 1433 "/usr/include/c++/5/cmath" 3
{ return __builtin_hypotf(__x, __y); }
# 1436 "/usr/include/c++/5/cmath" 3
constexpr long double hypot(long double __x, long double __y)
# 1437 "/usr/include/c++/5/cmath" 3
{ return __builtin_hypotl(__x, __y); }
# 1440 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1442 "/usr/include/c++/5/cmath" 3
hypot(_Tp __x, _Up __y)
# 1443 "/usr/include/c++/5/cmath" 3
{
# 1444 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1445 "/usr/include/c++/5/cmath" 3
return hypot((__type)__x, (__type)__y);
# 1446 "/usr/include/c++/5/cmath" 3
}
# 1450 "/usr/include/c++/5/cmath" 3
constexpr int ilogb(float __x)
# 1451 "/usr/include/c++/5/cmath" 3
{ return __builtin_ilogbf(__x); }
# 1454 "/usr/include/c++/5/cmath" 3
constexpr int ilogb(long double __x)
# 1455 "/usr/include/c++/5/cmath" 3
{ return __builtin_ilogbl(__x); }
# 1458 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, int> ::__type
# 1462 "/usr/include/c++/5/cmath" 3
ilogb(_Tp __x)
# 1463 "/usr/include/c++/5/cmath" 3
{ return __builtin_ilogb(__x); }
# 1467 "/usr/include/c++/5/cmath" 3
constexpr float lgamma(float __x)
# 1468 "/usr/include/c++/5/cmath" 3
{ return __builtin_lgammaf(__x); }
# 1471 "/usr/include/c++/5/cmath" 3
constexpr long double lgamma(long double __x)
# 1472 "/usr/include/c++/5/cmath" 3
{ return __builtin_lgammal(__x); }
# 1475 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1478 "/usr/include/c++/5/cmath" 3
lgamma(_Tp __x)
# 1479 "/usr/include/c++/5/cmath" 3
{ return __builtin_lgamma(__x); }
# 1483 "/usr/include/c++/5/cmath" 3
constexpr long long llrint(float __x)
# 1484 "/usr/include/c++/5/cmath" 3
{ return __builtin_llrintf(__x); }
# 1487 "/usr/include/c++/5/cmath" 3
constexpr long long llrint(long double __x)
# 1488 "/usr/include/c++/5/cmath" 3
{ return __builtin_llrintl(__x); }
# 1491 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long long> ::__type
# 1494 "/usr/include/c++/5/cmath" 3
llrint(_Tp __x)
# 1495 "/usr/include/c++/5/cmath" 3
{ return __builtin_llrint(__x); }
# 1499 "/usr/include/c++/5/cmath" 3
constexpr long long llround(float __x)
# 1500 "/usr/include/c++/5/cmath" 3
{ return __builtin_llroundf(__x); }
# 1503 "/usr/include/c++/5/cmath" 3
constexpr long long llround(long double __x)
# 1504 "/usr/include/c++/5/cmath" 3
{ return __builtin_llroundl(__x); }
# 1507 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long long> ::__type
# 1510 "/usr/include/c++/5/cmath" 3
llround(_Tp __x)
# 1511 "/usr/include/c++/5/cmath" 3
{ return __builtin_llround(__x); }
# 1515 "/usr/include/c++/5/cmath" 3
constexpr float log1p(float __x)
# 1516 "/usr/include/c++/5/cmath" 3
{ return __builtin_log1pf(__x); }
# 1519 "/usr/include/c++/5/cmath" 3
constexpr long double log1p(long double __x)
# 1520 "/usr/include/c++/5/cmath" 3
{ return __builtin_log1pl(__x); }
# 1523 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1526 "/usr/include/c++/5/cmath" 3
log1p(_Tp __x)
# 1527 "/usr/include/c++/5/cmath" 3
{ return __builtin_log1p(__x); }
# 1532 "/usr/include/c++/5/cmath" 3
constexpr float log2(float __x)
# 1533 "/usr/include/c++/5/cmath" 3
{ return __builtin_log2f(__x); }
# 1536 "/usr/include/c++/5/cmath" 3
constexpr long double log2(long double __x)
# 1537 "/usr/include/c++/5/cmath" 3
{ return __builtin_log2l(__x); }
# 1540 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1543 "/usr/include/c++/5/cmath" 3
log2(_Tp __x)
# 1544 "/usr/include/c++/5/cmath" 3
{ return __builtin_log2(__x); }
# 1548 "/usr/include/c++/5/cmath" 3
constexpr float logb(float __x)
# 1549 "/usr/include/c++/5/cmath" 3
{ return __builtin_logbf(__x); }
# 1552 "/usr/include/c++/5/cmath" 3
constexpr long double logb(long double __x)
# 1553 "/usr/include/c++/5/cmath" 3
{ return __builtin_logbl(__x); }
# 1556 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1559 "/usr/include/c++/5/cmath" 3
logb(_Tp __x)
# 1560 "/usr/include/c++/5/cmath" 3
{ return __builtin_logb(__x); }
# 1564 "/usr/include/c++/5/cmath" 3
constexpr long lrint(float __x)
# 1565 "/usr/include/c++/5/cmath" 3
{ return __builtin_lrintf(__x); }
# 1568 "/usr/include/c++/5/cmath" 3
constexpr long lrint(long double __x)
# 1569 "/usr/include/c++/5/cmath" 3
{ return __builtin_lrintl(__x); }
# 1572 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long> ::__type
# 1575 "/usr/include/c++/5/cmath" 3
lrint(_Tp __x)
# 1576 "/usr/include/c++/5/cmath" 3
{ return __builtin_lrint(__x); }
# 1580 "/usr/include/c++/5/cmath" 3
constexpr long lround(float __x)
# 1581 "/usr/include/c++/5/cmath" 3
{ return __builtin_lroundf(__x); }
# 1584 "/usr/include/c++/5/cmath" 3
constexpr long lround(long double __x)
# 1585 "/usr/include/c++/5/cmath" 3
{ return __builtin_lroundl(__x); }
# 1588 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long> ::__type
# 1591 "/usr/include/c++/5/cmath" 3
lround(_Tp __x)
# 1592 "/usr/include/c++/5/cmath" 3
{ return __builtin_lround(__x); }
# 1596 "/usr/include/c++/5/cmath" 3
constexpr float nearbyint(float __x)
# 1597 "/usr/include/c++/5/cmath" 3
{ return __builtin_nearbyintf(__x); }
# 1600 "/usr/include/c++/5/cmath" 3
constexpr long double nearbyint(long double __x)
# 1601 "/usr/include/c++/5/cmath" 3
{ return __builtin_nearbyintl(__x); }
# 1604 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1607 "/usr/include/c++/5/cmath" 3
nearbyint(_Tp __x)
# 1608 "/usr/include/c++/5/cmath" 3
{ return __builtin_nearbyint(__x); }
# 1612 "/usr/include/c++/5/cmath" 3
constexpr float nextafter(float __x, float __y)
# 1613 "/usr/include/c++/5/cmath" 3
{ return __builtin_nextafterf(__x, __y); }
# 1616 "/usr/include/c++/5/cmath" 3
constexpr long double nextafter(long double __x, long double __y)
# 1617 "/usr/include/c++/5/cmath" 3
{ return __builtin_nextafterl(__x, __y); }
# 1620 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1622 "/usr/include/c++/5/cmath" 3
nextafter(_Tp __x, _Up __y)
# 1623 "/usr/include/c++/5/cmath" 3
{
# 1624 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1625 "/usr/include/c++/5/cmath" 3
return nextafter((__type)__x, (__type)__y);
# 1626 "/usr/include/c++/5/cmath" 3
}
# 1630 "/usr/include/c++/5/cmath" 3
constexpr float nexttoward(float __x, long double __y)
# 1631 "/usr/include/c++/5/cmath" 3
{ return __builtin_nexttowardf(__x, __y); }
# 1634 "/usr/include/c++/5/cmath" 3
constexpr long double nexttoward(long double __x, long double __y)
# 1635 "/usr/include/c++/5/cmath" 3
{ return __builtin_nexttowardl(__x, __y); }
# 1638 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1641 "/usr/include/c++/5/cmath" 3
nexttoward(_Tp __x, long double __y)
# 1642 "/usr/include/c++/5/cmath" 3
{ return __builtin_nexttoward(__x, __y); }
# 1646 "/usr/include/c++/5/cmath" 3
constexpr float remainder(float __x, float __y)
# 1647 "/usr/include/c++/5/cmath" 3
{ return __builtin_remainderf(__x, __y); }
# 1650 "/usr/include/c++/5/cmath" 3
constexpr long double remainder(long double __x, long double __y)
# 1651 "/usr/include/c++/5/cmath" 3
{ return __builtin_remainderl(__x, __y); }
# 1654 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1656 "/usr/include/c++/5/cmath" 3
remainder(_Tp __x, _Up __y)
# 1657 "/usr/include/c++/5/cmath" 3
{
# 1658 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1659 "/usr/include/c++/5/cmath" 3
return remainder((__type)__x, (__type)__y);
# 1660 "/usr/include/c++/5/cmath" 3
}
# 1664 "/usr/include/c++/5/cmath" 3
inline float remquo(float __x, float __y, int *__pquo)
# 1665 "/usr/include/c++/5/cmath" 3
{ return __builtin_remquof(__x, __y, __pquo); }
# 1668 "/usr/include/c++/5/cmath" 3
inline long double remquo(long double __x, long double __y, int *__pquo)
# 1669 "/usr/include/c++/5/cmath" 3
{ return __builtin_remquol(__x, __y, __pquo); }
# 1672 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1674 "/usr/include/c++/5/cmath" 3
remquo(_Tp __x, _Up __y, int *__pquo)
# 1675 "/usr/include/c++/5/cmath" 3
{
# 1676 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1677 "/usr/include/c++/5/cmath" 3
return remquo((__type)__x, (__type)__y, __pquo);
# 1678 "/usr/include/c++/5/cmath" 3
}
# 1682 "/usr/include/c++/5/cmath" 3
constexpr float rint(float __x)
# 1683 "/usr/include/c++/5/cmath" 3
{ return __builtin_rintf(__x); }
# 1686 "/usr/include/c++/5/cmath" 3
constexpr long double rint(long double __x)
# 1687 "/usr/include/c++/5/cmath" 3
{ return __builtin_rintl(__x); }
# 1690 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1693 "/usr/include/c++/5/cmath" 3
rint(_Tp __x)
# 1694 "/usr/include/c++/5/cmath" 3
{ return __builtin_rint(__x); }
# 1698 "/usr/include/c++/5/cmath" 3
constexpr float round(float __x)
# 1699 "/usr/include/c++/5/cmath" 3
{ return __builtin_roundf(__x); }
# 1702 "/usr/include/c++/5/cmath" 3
constexpr long double round(long double __x)
# 1703 "/usr/include/c++/5/cmath" 3
{ return __builtin_roundl(__x); }
# 1706 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1709 "/usr/include/c++/5/cmath" 3
round(_Tp __x)
# 1710 "/usr/include/c++/5/cmath" 3
{ return __builtin_round(__x); }
# 1714 "/usr/include/c++/5/cmath" 3
constexpr float scalbln(float __x, long __ex)
# 1715 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalblnf(__x, __ex); }
# 1718 "/usr/include/c++/5/cmath" 3
constexpr long double scalbln(long double __x, long __ex)
# 1719 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalblnl(__x, __ex); }
# 1722 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1725 "/usr/include/c++/5/cmath" 3
scalbln(_Tp __x, long __ex)
# 1726 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbln(__x, __ex); }
# 1730 "/usr/include/c++/5/cmath" 3
constexpr float scalbn(float __x, int __ex)
# 1731 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbnf(__x, __ex); }
# 1734 "/usr/include/c++/5/cmath" 3
constexpr long double scalbn(long double __x, int __ex)
# 1735 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbnl(__x, __ex); }
# 1738 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1741 "/usr/include/c++/5/cmath" 3
scalbn(_Tp __x, int __ex)
# 1742 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbn(__x, __ex); }
# 1746 "/usr/include/c++/5/cmath" 3
constexpr float tgamma(float __x)
# 1747 "/usr/include/c++/5/cmath" 3
{ return __builtin_tgammaf(__x); }
# 1750 "/usr/include/c++/5/cmath" 3
constexpr long double tgamma(long double __x)
# 1751 "/usr/include/c++/5/cmath" 3
{ return __builtin_tgammal(__x); }
# 1754 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1757 "/usr/include/c++/5/cmath" 3
tgamma(_Tp __x)
# 1758 "/usr/include/c++/5/cmath" 3
{ return __builtin_tgamma(__x); }
# 1762 "/usr/include/c++/5/cmath" 3
constexpr float trunc(float __x)
# 1763 "/usr/include/c++/5/cmath" 3
{ return __builtin_truncf(__x); }
# 1766 "/usr/include/c++/5/cmath" 3
constexpr long double trunc(long double __x)
# 1767 "/usr/include/c++/5/cmath" 3
{ return __builtin_truncl(__x); }
# 1770 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1773 "/usr/include/c++/5/cmath" 3
trunc(_Tp __x)
# 1774 "/usr/include/c++/5/cmath" 3
{ return __builtin_trunc(__x); }
# 1777 "/usr/include/c++/5/cmath" 3
}
# 114 "/usr/include/c++/5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/cstdlib" 3
using ::div_t;
# 119 "/usr/include/c++/5/cstdlib" 3
using ::ldiv_t;
# 121 "/usr/include/c++/5/cstdlib" 3
using ::abort;
# 122 "/usr/include/c++/5/cstdlib" 3
using ::abs;
# 123 "/usr/include/c++/5/cstdlib" 3
using ::atexit;
# 126 "/usr/include/c++/5/cstdlib" 3
using ::at_quick_exit;
# 129 "/usr/include/c++/5/cstdlib" 3
using ::atof;
# 130 "/usr/include/c++/5/cstdlib" 3
using ::atoi;
# 131 "/usr/include/c++/5/cstdlib" 3
using ::atol;
# 132 "/usr/include/c++/5/cstdlib" 3
using ::bsearch;
# 133 "/usr/include/c++/5/cstdlib" 3
using ::calloc;
# 134 "/usr/include/c++/5/cstdlib" 3
using ::div;
# 135 "/usr/include/c++/5/cstdlib" 3
using ::exit;
# 136 "/usr/include/c++/5/cstdlib" 3
using ::free;
# 137 "/usr/include/c++/5/cstdlib" 3
using ::getenv;
# 138 "/usr/include/c++/5/cstdlib" 3
using ::labs;
# 139 "/usr/include/c++/5/cstdlib" 3
using ::ldiv;
# 140 "/usr/include/c++/5/cstdlib" 3
using ::malloc;
# 142 "/usr/include/c++/5/cstdlib" 3
using ::mblen;
# 143 "/usr/include/c++/5/cstdlib" 3
using ::mbstowcs;
# 144 "/usr/include/c++/5/cstdlib" 3
using ::mbtowc;
# 146 "/usr/include/c++/5/cstdlib" 3
using ::qsort;
# 149 "/usr/include/c++/5/cstdlib" 3
using ::quick_exit;
# 152 "/usr/include/c++/5/cstdlib" 3
using ::rand;
# 153 "/usr/include/c++/5/cstdlib" 3
using ::realloc;
# 154 "/usr/include/c++/5/cstdlib" 3
using ::srand;
# 155 "/usr/include/c++/5/cstdlib" 3
using ::strtod;
# 156 "/usr/include/c++/5/cstdlib" 3
using ::strtol;
# 157 "/usr/include/c++/5/cstdlib" 3
using ::strtoul;
# 158 "/usr/include/c++/5/cstdlib" 3
using ::system;
# 160 "/usr/include/c++/5/cstdlib" 3
using ::wcstombs;
# 161 "/usr/include/c++/5/cstdlib" 3
using ::wctomb;
# 166 "/usr/include/c++/5/cstdlib" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 169 "/usr/include/c++/5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 174 "/usr/include/c++/5/cstdlib" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 196 "/usr/include/c++/5/cstdlib" 3
}
# 209 "/usr/include/c++/5/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 214 "/usr/include/c++/5/cstdlib" 3
using ::lldiv_t;
# 220 "/usr/include/c++/5/cstdlib" 3
using ::_Exit;
# 224 "/usr/include/c++/5/cstdlib" 3
using ::llabs;
# 227 "/usr/include/c++/5/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 228 "/usr/include/c++/5/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 230 "/usr/include/c++/5/cstdlib" 3
using ::lldiv;
# 241 "/usr/include/c++/5/cstdlib" 3
using ::atoll;
# 242 "/usr/include/c++/5/cstdlib" 3
using ::strtoll;
# 243 "/usr/include/c++/5/cstdlib" 3
using ::strtoull;
# 245 "/usr/include/c++/5/cstdlib" 3
using ::strtof;
# 246 "/usr/include/c++/5/cstdlib" 3
using ::strtold;
# 249 "/usr/include/c++/5/cstdlib" 3
}
# 251 "/usr/include/c++/5/cstdlib" 3
namespace std {
# 254 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 256 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::_Exit;
# 258 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::llabs;
# 259 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::div;
# 260 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv;
# 262 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::atoll;
# 263 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtof;
# 264 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoll;
# 265 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoull;
# 266 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtold;
# 267 "/usr/include/c++/5/cstdlib" 3
}
# 8925 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(float x);
# 8929 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(double x);
# 8931 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(long double x);
# 8933 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(float x);
# 8937 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(double x);
# 8939 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(long double x);
# 8941 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(float x);
# 8945 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(double x) throw();
# 8947 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(long double x);
# 8949 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(float x);
# 8953 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(double x) throw();
# 8955 "/usr/local/cuda-8.0/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(long double x);
# 9002 "/usr/local/cuda-8.0/include/math_functions.h" 3
namespace std {
# 9004 "/usr/local/cuda-8.0/include/math_functions.h" 3
template< class T> extern T __pow_helper(T, int);
# 9005 "/usr/local/cuda-8.0/include/math_functions.h" 3
template< class T> extern T __cmath_power(T, unsigned);
# 9006 "/usr/local/cuda-8.0/include/math_functions.h" 3
}
# 9008 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::abs;
# 9009 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::fabs;
# 9010 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::ceil;
# 9011 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::floor;
# 9012 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::sqrt;
# 9013 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::pow;
# 9014 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::log;
# 9015 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::log10;
# 9016 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::fmod;
# 9017 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::modf;
# 9018 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::exp;
# 9019 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::frexp;
# 9020 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::ldexp;
# 9021 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::asin;
# 9022 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::sin;
# 9023 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::sinh;
# 9024 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::acos;
# 9025 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::cos;
# 9026 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::cosh;
# 9027 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::atan;
# 9028 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::atan2;
# 9029 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::tan;
# 9030 "/usr/local/cuda-8.0/include/math_functions.h" 3
using std::tanh;
# 9393 "/usr/local/cuda-8.0/include/math_functions.h" 3
namespace std {
# 9406 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline long long abs(long long);
# 9412 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline long abs(long);
# 9413 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float abs(float);
# 9414 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr double abs(double);
# 9415 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float fabs(float);
# 9416 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float ceil(float);
# 9417 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float floor(float);
# 9418 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float sqrt(float);
# 9419 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float pow(float, float);
# 9424 "/usr/local/cuda-8.0/include/math_functions.h" 3
template< class _Tp, class _Up> extern constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type pow(_Tp, _Up);
# 9434 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float log(float);
# 9435 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float log10(float);
# 9436 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float fmod(float, float);
# 9437 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline float modf(float, float *);
# 9438 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float exp(float);
# 9439 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern inline float frexp(float, int *);
# 9440 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float ldexp(float, int);
# 9441 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float asin(float);
# 9442 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float sin(float);
# 9443 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float sinh(float);
# 9444 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float acos(float);
# 9445 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float cos(float);
# 9446 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float cosh(float);
# 9447 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float atan(float);
# 9448 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float atan2(float, float);
# 9449 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float tan(float);
# 9450 "/usr/local/cuda-8.0/include/math_functions.h" 3
extern constexpr float tanh(float);
# 9518 "/usr/local/cuda-8.0/include/math_functions.h" 3
}
# 9609 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float logb(float a);
# 9611 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline int ilogb(float a);
# 9613 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float scalbn(float a, int b);
# 9615 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float scalbln(float a, long b);
# 9617 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float exp2(float a);
# 9619 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float expm1(float a);
# 9621 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float log2(float a);
# 9623 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float log1p(float a);
# 9625 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float acosh(float a);
# 9627 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float asinh(float a);
# 9629 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float atanh(float a);
# 9631 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float hypot(float a, float b);
# 9633 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float norm3d(float a, float b, float c);
# 9635 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float norm4d(float a, float b, float c, float d);
# 9637 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float cbrt(float a);
# 9639 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float erf(float a);
# 9641 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float erfc(float a);
# 9643 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float lgamma(float a);
# 9645 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float tgamma(float a);
# 9647 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float copysign(float a, float b);
# 9649 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float nextafter(float a, float b);
# 9651 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float remainder(float a, float b);
# 9653 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float remquo(float a, float b, int * quo);
# 9655 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float round(float a);
# 9657 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long lround(float a);
# 9659 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long long llround(float a);
# 9661 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float trunc(float a);
# 9663 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float rint(float a);
# 9665 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long lrint(float a);
# 9667 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long long llrint(float a);
# 9669 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float nearbyint(float a);
# 9671 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float fdim(float a, float b);
# 9673 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float fma(float a, float b, float c);
# 9675 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float fmax(float a, float b);
# 9677 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float fmin(float a, float b);
# 9718 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float exp10(float a);
# 9720 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float rsqrt(float a);
# 9722 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float rcbrt(float a);
# 9724 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float sinpi(float a);
# 9726 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float cospi(float a);
# 9728 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline void sincospi(float a, float * sptr, float * cptr);
# 9730 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline void sincos(float a, float * sptr, float * cptr);
# 9732 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float j0(float a);
# 9734 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float j1(float a);
# 9736 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float jn(int n, float a);
# 9738 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float y0(float a);
# 9740 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float y1(float a);
# 9742 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float yn(int n, float a);
# 9744 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float cyl_bessel_i0(float a);
# 9746 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float cyl_bessel_i1(float a);
# 9748 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float erfinv(float a);
# 9750 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float erfcinv(float a);
# 9752 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float normcdfinv(float a);
# 9754 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float normcdf(float a);
# 9756 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float erfcx(float a);
# 9758 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double copysign(double a, float b);
# 9760 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float copysign(float a, double b);
# 9762 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned min(unsigned a, unsigned b);
# 9764 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned min(int a, unsigned b);
# 9766 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned min(unsigned a, int b);
# 9768 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long min(long a, long b);
# 9770 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long min(unsigned long a, unsigned long b);
# 9772 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long min(long a, unsigned long b);
# 9774 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long min(unsigned long a, long b);
# 9776 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long long min(long long a, long long b);
# 9778 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long long min(unsigned long long a, unsigned long long b);
# 9780 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long long min(long long a, unsigned long long b);
# 9782 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long long min(unsigned long long a, long long b);
# 9784 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float min(float a, float b);
# 9786 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double min(double a, double b);
# 9788 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double min(float a, double b);
# 9790 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double min(double a, float b);
# 9792 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned max(unsigned a, unsigned b);
# 9794 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned max(int a, unsigned b);
# 9796 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned max(unsigned a, int b);
# 9798 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long max(long a, long b);
# 9800 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long max(unsigned long a, unsigned long b);
# 9802 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long max(long a, unsigned long b);
# 9804 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long max(unsigned long a, long b);
# 9806 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline long long max(long long a, long long b);
# 9808 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long long max(unsigned long long a, unsigned long long b);
# 9810 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long long max(long long a, unsigned long long b);
# 9812 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline unsigned long long max(unsigned long long a, long long b);
# 9814 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline float max(float a, float b);
# 9816 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double max(double a, double b);
# 9818 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double max(float a, double b);
# 9820 "/usr/local/cuda-8.0/include/math_functions.h" 3
static inline double max(double a, float b);
# 248 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(float x) { return __signbitf(x); }
# 252 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(double x) { return __signbit(x); }
# 254 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(long double x) { return __signbitl(x); }
# 265 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(float x) { return __finitef(x); }
# 280 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(double x) { return __finite(x); }
# 293 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(long double x) { return __finitel(x); }
# 296 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(float x) { return __isnanf(x); }
# 300 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(double x) throw() { return __isnan(x); }
# 302 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(long double x) { return __isnanl(x); }
# 304 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(float x) { return __isinff(x); }
# 308 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(double x) throw() { return __isinf(x); }
# 310 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(long double x) { return __isinfl(x); }
# 503 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float logb(float a)
# 504 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 505 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return logbf(a);
# 506 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 508 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline int ilogb(float a)
# 509 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 510 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ilogbf(a);
# 511 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 513 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float scalbn(float a, int b)
# 514 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 515 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return scalbnf(a, b);
# 516 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 518 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float scalbln(float a, long b)
# 519 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 520 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return scalblnf(a, b);
# 521 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 523 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float exp2(float a)
# 524 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 525 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return exp2f(a);
# 526 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 528 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float expm1(float a)
# 529 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 530 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return expm1f(a);
# 531 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 533 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float log2(float a)
# 534 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 535 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return log2f(a);
# 536 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 538 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float log1p(float a)
# 539 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 540 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return log1pf(a);
# 541 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 543 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float acosh(float a)
# 544 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 545 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return acoshf(a);
# 546 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 548 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float asinh(float a)
# 549 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 550 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return asinhf(a);
# 551 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 553 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float atanh(float a)
# 554 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 555 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return atanhf(a);
# 556 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 558 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float hypot(float a, float b)
# 559 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 560 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return hypotf(a, b);
# 561 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 563 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float norm3d(float a, float b, float c)
# 564 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 565 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return norm3df(a, b, c);
# 566 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 568 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float norm4d(float a, float b, float c, float d)
# 569 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 570 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return norm4df(a, b, c, d);
# 571 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 573 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float cbrt(float a)
# 574 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 575 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return cbrtf(a);
# 576 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 578 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float erf(float a)
# 579 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 580 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return erff(a);
# 581 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 583 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float erfc(float a)
# 584 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 585 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return erfcf(a);
# 586 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 588 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float lgamma(float a)
# 589 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 590 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return lgammaf(a);
# 591 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 593 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float tgamma(float a)
# 594 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 595 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return tgammaf(a);
# 596 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 598 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float copysign(float a, float b)
# 599 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 600 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return copysignf(a, b);
# 601 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 603 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float nextafter(float a, float b)
# 604 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 605 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return nextafterf(a, b);
# 606 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 608 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float remainder(float a, float b)
# 609 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 610 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return remainderf(a, b);
# 611 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 613 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float remquo(float a, float b, int *quo)
# 614 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 615 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return remquof(a, b, quo);
# 616 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 618 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float round(float a)
# 619 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 620 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return roundf(a);
# 621 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 623 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long lround(float a)
# 624 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 625 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return lroundf(a);
# 626 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 628 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long long llround(float a)
# 629 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 630 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return llroundf(a);
# 631 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 633 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float trunc(float a)
# 634 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 635 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return truncf(a);
# 636 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 638 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float rint(float a)
# 639 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 640 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return rintf(a);
# 641 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 643 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long lrint(float a)
# 644 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 645 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return lrintf(a);
# 646 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 648 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long long llrint(float a)
# 649 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 650 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return llrintf(a);
# 651 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 653 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float nearbyint(float a)
# 654 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 655 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return nearbyintf(a);
# 656 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 658 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float fdim(float a, float b)
# 659 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 660 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fdimf(a, b);
# 661 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 663 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float fma(float a, float b, float c)
# 664 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 665 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmaf(a, b, c);
# 666 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 668 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float fmax(float a, float b)
# 669 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 670 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmaxf(a, b);
# 671 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 673 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float fmin(float a, float b)
# 674 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 675 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fminf(a, b);
# 676 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 681 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float exp10(float a)
# 682 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 683 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return exp10f(a);
# 684 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 686 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float rsqrt(float a)
# 687 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 688 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return rsqrtf(a);
# 689 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 691 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float rcbrt(float a)
# 692 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 693 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return rcbrtf(a);
# 694 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 696 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float sinpi(float a)
# 697 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 698 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return sinpif(a);
# 699 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 701 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float cospi(float a)
# 702 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 703 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return cospif(a);
# 704 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 706 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline void sincospi(float a, float *sptr, float *cptr)
# 707 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 708 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
sincospif(a, sptr, cptr);
# 709 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 711 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline void sincos(float a, float *sptr, float *cptr)
# 712 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 713 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
sincosf(a, sptr, cptr);
# 714 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 716 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float j0(float a)
# 717 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 718 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return j0f(a);
# 719 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 721 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float j1(float a)
# 722 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 723 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return j1f(a);
# 724 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 726 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float jn(int n, float a)
# 727 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 728 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return jnf(n, a);
# 729 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 731 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float y0(float a)
# 732 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 733 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return y0f(a);
# 734 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 736 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float y1(float a)
# 737 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 738 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return y1f(a);
# 739 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 741 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float yn(int n, float a)
# 742 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 743 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ynf(n, a);
# 744 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 746 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float cyl_bessel_i0(float a)
# 747 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 748 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return cyl_bessel_i0f(a);
# 749 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 751 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float cyl_bessel_i1(float a)
# 752 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 753 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return cyl_bessel_i1f(a);
# 754 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 756 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float erfinv(float a)
# 757 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 758 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return erfinvf(a);
# 759 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 761 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float erfcinv(float a)
# 762 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 763 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return erfcinvf(a);
# 764 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 766 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float normcdfinv(float a)
# 767 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 768 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return normcdfinvf(a);
# 769 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 771 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float normcdf(float a)
# 772 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 773 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return normcdff(a);
# 774 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 776 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float erfcx(float a)
# 777 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 778 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return erfcxf(a);
# 779 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 781 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double copysign(double a, float b)
# 782 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 783 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return copysign(a, (double)b);
# 784 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 786 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float copysign(float a, double b)
# 787 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 788 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return copysignf(a, (float)b);
# 789 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 791 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned min(unsigned a, unsigned b)
# 792 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 793 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return umin(a, b);
# 794 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 796 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned min(int a, unsigned b)
# 797 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 798 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return umin((unsigned)a, b);
# 799 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 801 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned min(unsigned a, int b)
# 802 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 803 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return umin(a, (unsigned)b);
# 804 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 806 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long min(long a, long b)
# 807 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 813 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 817 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (long)min((int)a, (int)b);
# 818 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 819 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (long)llmin((long long)a, (long long)b);
# 820 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 821 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 823 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long min(unsigned long a, unsigned long b)
# 824 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 828 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 832 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 833 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 834 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 835 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 836 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 838 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long min(long a, unsigned long b)
# 839 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 843 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 847 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 848 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 849 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 850 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 851 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 853 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long min(unsigned long a, long b)
# 854 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 858 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 862 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 863 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 864 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 865 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 866 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 868 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long long min(long long a, long long b)
# 869 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 870 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return llmin(a, b);
# 871 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 873 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 874 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 875 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ullmin(a, b);
# 876 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 878 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long long min(long long a, unsigned long long b)
# 879 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 880 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ullmin((unsigned long long)a, b);
# 881 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 883 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long long min(unsigned long long a, long long b)
# 884 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 885 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ullmin(a, (unsigned long long)b);
# 886 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 888 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float min(float a, float b)
# 889 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 890 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fminf(a, b);
# 891 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 893 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double min(double a, double b)
# 894 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 895 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmin(a, b);
# 896 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 898 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double min(float a, double b)
# 899 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 900 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmin((double)a, b);
# 901 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 903 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double min(double a, float b)
# 904 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 905 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmin(a, (double)b);
# 906 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 908 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned max(unsigned a, unsigned b)
# 909 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 910 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return umax(a, b);
# 911 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 913 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned max(int a, unsigned b)
# 914 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 915 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return umax((unsigned)a, b);
# 916 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 918 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned max(unsigned a, int b)
# 919 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 920 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return umax(a, (unsigned)b);
# 921 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 923 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long max(long a, long b)
# 924 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 929 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 933 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (long)max((int)a, (int)b);
# 934 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 935 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (long)llmax((long long)a, (long long)b);
# 936 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 937 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 939 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long max(unsigned long a, unsigned long b)
# 940 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 944 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 948 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 949 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 950 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 951 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 952 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 954 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long max(long a, unsigned long b)
# 955 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 959 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 963 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 964 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 965 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 966 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 967 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 969 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long max(unsigned long a, long b)
# 970 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 974 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 978 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 979 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
} else {
# 980 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 981 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 982 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 984 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline long long max(long long a, long long b)
# 985 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 986 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return llmax(a, b);
# 987 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 989 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 990 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 991 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ullmax(a, b);
# 992 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 994 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long long max(long long a, unsigned long long b)
# 995 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 996 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ullmax((unsigned long long)a, b);
# 997 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 999 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline unsigned long long max(unsigned long long a, long long b)
# 1000 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1001 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return ullmax(a, (unsigned long long)b);
# 1002 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1004 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline float max(float a, float b)
# 1005 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1006 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmaxf(a, b);
# 1007 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1009 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double max(double a, double b)
# 1010 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1011 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmax(a, b);
# 1012 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1014 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double max(float a, double b)
# 1015 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1016 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmax((double)a, b);
# 1017 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1019 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
static inline double max(double a, float b)
# 1020 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1021 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return fmax(a, (double)b);
# 1022 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1033 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline int min(int a, int b)
# 1034 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1035 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1036 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1038 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline unsigned umin(unsigned a, unsigned b)
# 1039 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1040 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1041 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1043 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline long long llmin(long long a, long long b)
# 1044 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1045 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1046 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1048 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline unsigned long long ullmin(unsigned long long a, unsigned long long
# 1049 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
b)
# 1050 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1051 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1052 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1054 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline int max(int a, int b)
# 1055 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1056 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1057 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1059 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline unsigned umax(unsigned a, unsigned b)
# 1060 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1061 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1062 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1064 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline long long llmax(long long a, long long b)
# 1065 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1066 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1067 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 1069 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
extern "C" inline unsigned long long ullmax(unsigned long long a, unsigned long long
# 1070 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
b)
# 1071 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
{
# 1072 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1073 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
}
# 77 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
template< class T, int dim = 1>
# 78 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
struct surface : public surfaceReference {
# 81 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
surface()
# 82 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
{
# 83 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 84 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
}
# 86 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
surface(cudaChannelFormatDesc desc)
# 87 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
{
# 88 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = desc;
# 89 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
}
# 91 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
};
# 93 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
template< int dim>
# 94 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
struct surface< void, dim> : public surfaceReference {
# 97 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
surface()
# 98 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
{
# 99 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = cudaCreateChannelDesc< void> ();
# 100 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
}
# 102 "/usr/local/cuda-8.0/include/cuda_surface_types.h" 3
};
# 77 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 78 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
struct texture : public textureReference {
# 81 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
texture(int norm = 0, cudaTextureFilterMode
# 82 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 83 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
aMode = cudaAddressModeClamp)
# 84 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
{
# 85 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::normalized) = norm;
# 86 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::filterMode) = fMode;
# 87 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
((textureReference::addressMode)[0]) = aMode;
# 88 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
((textureReference::addressMode)[1]) = aMode;
# 89 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
((textureReference::addressMode)[2]) = aMode;
# 90 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 91 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::sRGB) = 0;
# 92 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
}
# 94 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
texture(int norm, cudaTextureFilterMode
# 95 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
fMode, cudaTextureAddressMode
# 96 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
aMode, cudaChannelFormatDesc
# 97 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
desc)
# 98 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
{
# 99 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::normalized) = norm;
# 100 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::filterMode) = fMode;
# 101 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
((textureReference::addressMode)[0]) = aMode;
# 102 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
((textureReference::addressMode)[1]) = aMode;
# 103 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
((textureReference::addressMode)[2]) = aMode;
# 104 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::channelDesc) = desc;
# 105 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
(textureReference::sRGB) = 0;
# 106 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
}
# 108 "/usr/local/cuda-8.0/include/cuda_texture_types.h" 3
};
# 90 "/usr/local/cuda-8.0/include/device_functions.h" 3
extern "C" {
# 3230 "/usr/local/cuda-8.0/include/device_functions.h" 3
}
# 3238 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline int mulhi(int a, int b);
# 3240 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b);
# 3242 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b);
# 3244 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b);
# 3246 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline long long mul64hi(long long a, long long b);
# 3248 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b);
# 3250 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b);
# 3252 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b);
# 3254 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline int float_as_int(float a);
# 3256 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline float int_as_float(int a);
# 3258 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned float_as_uint(float a);
# 3260 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline float uint_as_float(unsigned a);
# 3262 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline float saturate(float a);
# 3264 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline int mul24(int a, int b);
# 3266 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b);
# 3268 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute((deprecated("Please use __trap() instead."))) __attribute__((unused)) static inline void trap();
# 3271 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute((deprecated("Please use __brkpt() instead."))) __attribute__((unused)) static inline void brkpt(int c = 0);
# 3273 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute((deprecated("Please use __syncthreads() instead."))) __attribute__((unused)) static inline void syncthreads();
# 3275 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute((deprecated("Please use __prof_trigger() instead."))) __attribute__((unused)) static inline void prof_trigger(int e);
# 3277 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute((deprecated("Please use __threadfence() instead."))) __attribute__((unused)) static inline void threadfence(bool global = true);
# 3279 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero);
# 3281 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero);
# 3283 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest);
# 3285 "/usr/local/cuda-8.0/include/device_functions.h" 3
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 83 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline int mulhi(int a, int b)
# 84 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 86 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 88 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 89 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 91 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 93 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 94 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 96 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 98 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 99 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 101 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 103 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 104 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 106 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 108 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 109 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 111 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 113 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 114 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 116 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 118 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 119 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 121 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 123 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline int float_as_int(float a)
# 124 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 126 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 128 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline float int_as_float(int a)
# 129 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 131 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 133 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned float_as_uint(float a)
# 134 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 136 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 138 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline float uint_as_float(unsigned a)
# 139 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 141 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 142 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline float saturate(float a)
# 143 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 145 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 147 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline int mul24(int a, int b)
# 148 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 150 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 152 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 153 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 155 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 157 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline void trap()
# 158 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;
# 160 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 163 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline void brkpt(int c)
# 164 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)c;
# 166 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 168 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline void syncthreads()
# 169 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;
# 171 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 173 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline void prof_trigger(int e)
# 174 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)e;
# 191 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 193 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline void threadfence(bool global)
# 194 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)global;
# 196 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 198 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode)
# 199 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 204 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 206 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode)
# 207 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 212 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 214 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode)
# 215 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 220 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 222 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode)
# 223 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 228 "/usr/local/cuda-8.0/include/device_functions.hpp" 3
::exit(___);}
# 111 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 113 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 115 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 117 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 119 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 121 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 123 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 125 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 127 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 129 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 131 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 133 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 135 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 137 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 139 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 141 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 143 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 145 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 147 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 149 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 151 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 164 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
extern "C" {
# 175 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
}
# 185 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 187 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 189 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 191 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 193 "/usr/local/cuda-8.0/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 80 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
extern "C" {
# 1134 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
}
# 1143 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1145 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1147 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1149 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1153 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1155 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1161 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1163 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/local/cuda-8.0/include/device_double_functions.h" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 85 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 86 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 91 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 93 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 94 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 99 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 101 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 102 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 109 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 110 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 117 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 118 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 123 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 125 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 126 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 133 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 134 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 141 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 142 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 149 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 150 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 157 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 158 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 165 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 166 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 168 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 170 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 171 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 173 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 175 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 176 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 178 "/usr/local/cuda-8.0/include/device_double_functions.hpp" 3
::exit(___);}
# 94 "/usr/local/cuda-8.0/include/sm_20_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 102 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 104 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 106 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 108 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/local/cuda-8.0/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 308 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 311 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 314 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 317 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 320 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 323 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 326 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 329 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 332 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 335 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 338 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 341 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 344 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 347 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 350 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 353 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 356 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 359 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 362 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 365 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 368 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 371 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 374 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 377 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 380 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 383 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 386 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 389 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 392 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 395 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 398 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 401 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 404 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 407 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 410 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 413 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 416 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 419 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 422 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 425 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 428 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 431 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned
# 432 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 435 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned
# 436 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 439 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long
# 440 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
compare, unsigned long long
# 441 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 444 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long
# 445 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
compare, unsigned long long
# 446 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 449 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 452 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 455 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 458 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 461 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 464 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 467 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 470 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 473 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 476 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 479 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 482 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 485 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 488 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 491 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 494 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 497 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 500 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 503 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 506 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 509 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 512 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 515 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 518 "/usr/local/cuda-8.0/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 79 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
extern "C" {
# 1466 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
}
# 1475 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1477 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1479 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1481 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1486 "/usr/local/cuda-8.0/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 100 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 102 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 103 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 105 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 107 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 109 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 111 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 113 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 115 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 117 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 119 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 122 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 124 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 126 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 128 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 130 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 132 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 134 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 136 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 138 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 140 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 142 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 144 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 148 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 150 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 152 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 154 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 156 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 158 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 160 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 162 "/usr/local/cuda-8.0/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 89 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 102 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 114 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 119 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 120 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 121 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 125 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 131 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 137 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 138 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 139 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 141 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 142 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 143 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 144 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 146 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 147 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 148 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 149 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 150 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 151 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 153 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 154 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 155 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 156 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 157 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 161 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 162 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 164 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 165 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 166 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 167 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 168 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 169 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 170 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 171 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 172 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 173 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 174 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 175 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 177 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 178 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 179 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 180 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 181 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 182 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 183 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 184 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 185 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 186 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 187 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 189 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 190 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 191 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 192 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 193 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 197 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 198 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 200 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 201 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 202 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 203 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 204 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 205 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 206 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 207 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 208 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 209 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 210 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 211 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 213 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 214 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 215 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 216 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 217 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 218 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 219 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 220 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 221 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 222 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 223 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 225 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 226 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 227 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 228 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 229 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 236 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 237 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 240 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 241 "/usr/local/cuda-8.0/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 91 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 92 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 94 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 95 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 97 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 98 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 101 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 108 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 109 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 111 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 112 "/usr/local/cuda-8.0/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 101 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 102 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 111 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 113 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 114 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 115 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 123 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 125 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 126 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 127 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 131 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 260 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 261 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 262 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 271 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 273 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 274 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 275 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 283 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 285 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 286 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 287 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 291 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 422 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 423 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 424 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 433 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 435 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 436 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 437 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 445 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 447 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 448 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 453 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 582 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 583 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 584 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 593 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 595 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 596 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 597 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 605 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 607 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 608 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 609 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 613 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 768 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 769 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 770 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 779 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 781 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 782 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 783 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 791 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 793 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 794 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 795 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 799 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 919 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 920 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 921 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 930 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 932 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 933 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 934 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 942 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 944 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 945 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 946 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 950 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1070 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1071 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1072 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 1081 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1083 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1084 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1085 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1093 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1095 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1096 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1097 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1101 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1232 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1233 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1234 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 1254 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1256 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1257 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1258 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 1262 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1377 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1378 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1379 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 1399 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1401 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1402 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1403 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 1407 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1520 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1521 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1522 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 1542 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1544 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1545 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1546 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1550 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1666 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1667 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1668 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1688 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1690 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1691 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1692 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1696 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1822 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1823 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1824 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1844 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1846 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1847 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1848 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1852 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1958 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1959 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1960 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1980 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 1982 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 1983 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1984 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1988 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 2093 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 2094 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2095 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2115 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 2117 "/usr/local/cuda-8.0/include/surface_functions.h" 3
template< class T>
# 2118 "/usr/local/cuda-8.0/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2119 "/usr/local/cuda-8.0/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2123 "/usr/local/cuda-8.0/include/surface_functions.h" 3
::exit(___);}
# 70 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 71 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1Dfetch(texture< T, 1, cudaReadModeElementType> , int) {int volatile ___ = 1;::exit(___);}
# 73 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T>
# 74 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
struct __nv_tex_rmnf_ret { };
# 76 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char> { typedef float type; };
# 77 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< signed char> { typedef float type; };
# 78 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< unsigned char> { typedef float type; };
# 79 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short> { typedef float type; };
# 80 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< unsigned short> { typedef float type; };
# 81 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char1> { typedef float1 type; };
# 82 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< uchar1> { typedef float1 type; };
# 83 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short1> { typedef float1 type; };
# 84 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< ushort1> { typedef float1 type; };
# 85 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char2> { typedef float2 type; };
# 86 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< uchar2> { typedef float2 type; };
# 87 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short2> { typedef float2 type; };
# 88 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< ushort2> { typedef float2 type; };
# 89 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char4> { typedef float4 type; };
# 90 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< uchar4> { typedef float4 type; };
# 91 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short4> { typedef float4 type; };
# 92 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< ushort4> { typedef float4 type; };
# 94 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 95 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1Dfetch(texture< T, 1, cudaReadModeNormalizedFloat> , int) {int volatile ___ = 1;::exit(___);}
# 215 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 216 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1D(texture< T, 1, cudaReadModeElementType> , float) {int volatile ___ = 1;::exit(___);}
# 218 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 219 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1D(texture< T, 1, cudaReadModeNormalizedFloat> , float) {int volatile ___ = 1;::exit(___);}
# 345 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 346 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2D(texture< T, 2, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 349 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2D(texture< T, 2, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 475 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 476 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLayered(texture< T, 241, cudaReadModeElementType> , float, int) {int volatile ___ = 1;::exit(___);}
# 478 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 479 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLayered(texture< T, 241, cudaReadModeNormalizedFloat> , float, int) {int volatile ___ = 1;::exit(___);}
# 603 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 604 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLayered(texture< T, 242, cudaReadModeElementType> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 606 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 607 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLayered(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 735 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 736 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex3D(texture< T, 3, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 738 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 739 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex3D(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 864 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 865 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemap(texture< T, 12, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 867 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 868 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemap(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 992 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 993 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemapLayered(texture< T, 252, cudaReadModeElementType> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 995 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 996 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemapLayered(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 1121 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T>
# 1122 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
struct __nv_tex2dgather_ret { };
# 1123 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char> { typedef char4 type; };
# 1124 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< signed char> { typedef char4 type; };
# 1125 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char1> { typedef char4 type; };
# 1126 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char2> { typedef char4 type; };
# 1127 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char3> { typedef char4 type; };
# 1128 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char4> { typedef char4 type; };
# 1129 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< unsigned char> { typedef uchar4 type; };
# 1130 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar1> { typedef uchar4 type; };
# 1131 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar2> { typedef uchar4 type; };
# 1132 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar3> { typedef uchar4 type; };
# 1133 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar4> { typedef uchar4 type; };
# 1135 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short> { typedef short4 type; };
# 1136 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short1> { typedef short4 type; };
# 1137 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short2> { typedef short4 type; };
# 1138 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short3> { typedef short4 type; };
# 1139 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short4> { typedef short4 type; };
# 1140 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< unsigned short> { typedef ushort4 type; };
# 1141 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort1> { typedef ushort4 type; };
# 1142 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort2> { typedef ushort4 type; };
# 1143 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort3> { typedef ushort4 type; };
# 1144 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort4> { typedef ushort4 type; };
# 1146 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int> { typedef int4 type; };
# 1147 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int1> { typedef int4 type; };
# 1148 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int2> { typedef int4 type; };
# 1149 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int3> { typedef int4 type; };
# 1150 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int4> { typedef int4 type; };
# 1151 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< unsigned> { typedef uint4 type; };
# 1152 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint1> { typedef uint4 type; };
# 1153 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint2> { typedef uint4 type; };
# 1154 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint3> { typedef uint4 type; };
# 1155 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint4> { typedef uint4 type; };
# 1157 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float> { typedef float4 type; };
# 1158 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float1> { typedef float4 type; };
# 1159 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float2> { typedef float4 type; };
# 1160 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float3> { typedef float4 type; };
# 1161 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float4> { typedef float4 type; };
# 1163 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex2dgather_ret< T> ::type
# 1164 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2Dgather(texture< T, 2, cudaReadModeElementType> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1166 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static float4
# 1167 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2Dgather(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1232 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1233 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLod(texture< T, 1, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 1235 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1236 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLod(texture< T, 1, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 1360 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1361 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLod(texture< T, 2, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1363 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1364 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLod(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1484 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1485 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLayeredLod(texture< T, 241, cudaReadModeElementType> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1487 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1488 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLayeredLod(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1612 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1613 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLayeredLod(texture< T, 242, cudaReadModeElementType> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1615 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1616 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLayeredLod(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1740 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1741 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex3DLod(texture< T, 3, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1743 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1744 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex3DLod(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1868 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1869 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemapLod(texture< T, 12, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1871 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1872 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemapLod(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1996 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1997 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemapLayeredLod(texture< T, 252, cudaReadModeElementType> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1999 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2000 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
texCubemapLayeredLod(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 2124 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2125 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DGrad(texture< T, 1, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2127 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2128 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DGrad(texture< T, 1, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2252 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2253 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DGrad(texture< T, 2, cudaReadModeElementType> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2255 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2256 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DGrad(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2380 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2381 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLayeredGrad(texture< T, 241, cudaReadModeElementType> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2383 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2384 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex1DLayeredGrad(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2509 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2510 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLayeredGrad(texture< T, 242, cudaReadModeElementType> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2512 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2513 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex2DLayeredGrad(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2637 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2638 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex3DGrad(texture< T, 3, cudaReadModeElementType> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 2640 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2641 "/usr/local/cuda-8.0/include/texture_fetch_functions.h" 3
tex3DGrad(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 67 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 68 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1Dfetch(T *, cudaTextureObject_t, int) {int volatile ___ = 1;::exit(___);}
# 121 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 122 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1Dfetch(cudaTextureObject_t texObject, int x)
# 123 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 127 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 135 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 136 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1D(T *, cudaTextureObject_t, float) {int volatile ___ = 1;::exit(___);}
# 190 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 191 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1D(cudaTextureObject_t texObject, float x)
# 192 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 196 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 205 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 206 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2D(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 258 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 259 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2D(cudaTextureObject_t texObject, float x, float y)
# 260 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 264 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 272 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 273 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex3D(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 325 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 326 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 327 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 331 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 340 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 341 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLayered(T *, cudaTextureObject_t, float, int) {int volatile ___ = 1;::exit(___);}
# 393 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 394 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 395 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 399 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 408 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 409 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLayered(T *, cudaTextureObject_t, float, float, int) {int volatile ___ = 1;::exit(___);}
# 461 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 462 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 463 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 467 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 476 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 477 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemap(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 529 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 530 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 531 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 535 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 544 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 545 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemapLayered(T *, cudaTextureObject_t, float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 598 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 599 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 600 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 604 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 613 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 614 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2Dgather(T *, cudaTextureObject_t, float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 660 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 661 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 662 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 666 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 675 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 676 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLod(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 728 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 729 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 730 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 734 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 743 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 744 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLod(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 797 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 798 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 799 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 803 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 812 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 813 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex3DLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 865 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 866 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 867 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 871 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 879 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 880 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLayeredLod(T *, cudaTextureObject_t, float, int, float) {int volatile ___ = 1;::exit(___);}
# 932 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 933 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 934 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 938 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 947 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 948 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLayeredLod(T *, cudaTextureObject_t, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1000 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1001 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 1002 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 1006 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1014 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1015 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemapLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1067 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1068 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 1069 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 1073 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1081 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1082 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemapLayeredLod(T *, cudaTextureObject_t, float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1134 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1135 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 1136 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 1140 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1148 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1149 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DGrad(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1202 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1203 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 1204 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 1208 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1216 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1217 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DGrad(T *, cudaTextureObject_t, float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1269 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1270 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 1271 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 1275 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1283 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1284 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex3DGrad(T *, cudaTextureObject_t, float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 1336 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1337 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 1338 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 1342 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1350 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1351 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLayeredGrad(T *, cudaTextureObject_t, float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 1404 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1405 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 1406 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 1410 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 1418 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1419 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(T *, cudaTextureObject_t, float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1471 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1472 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 1473 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 1477 "/usr/local/cuda-8.0/include/texture_indirect_functions.h" 3
::exit(___);}
# 68 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 69 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf1Dread(T *, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 111 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 112 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 113 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 119 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 128 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 129 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf2Dread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 172 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 173 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 174 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 180 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 189 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 190 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf3Dread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 231 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 232 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 233 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 239 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 247 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 248 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf1DLayeredread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 290 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 291 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 292 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 298 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 306 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 307 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf2DLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 349 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 350 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 356 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 364 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 365 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surfCubemapread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 406 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 407 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 408 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 414 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 422 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 423 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surfCubemapLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 464 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 465 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 466 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 472 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
::exit(___);}
# 480 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 481 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf1Dwrite(T, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 528 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 529 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf2Dwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 576 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 577 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf3Dwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 626 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 627 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf1DLayeredwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 675 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 676 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surf2DLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 723 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 724 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surfCubemapwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 771 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 772 "/usr/local/cuda-8.0/include/surface_indirect_functions.h" 3
surfCubemapLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 68 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
extern "C" {
# 71 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
extern const uint3 __device_builtin_variable_threadIdx;
# 72 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
extern const uint3 __device_builtin_variable_blockIdx;
# 73 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
extern const dim3 __device_builtin_variable_blockDim;
# 74 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
extern const dim3 __device_builtin_variable_gridDim;
# 75 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
extern const int __device_builtin_variable_warpSize;
# 80 "/usr/local/cuda-8.0/include/device_launch_parameters.h" 3
}
# 183 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 184 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaLaunchKernel(const T *
# 185 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, dim3
# 186 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
gridDim, dim3
# 187 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockDim, void **
# 188 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
args, ::size_t
# 189 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
sharedMem = 0, cudaStream_t
# 190 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
stream = 0)
# 192 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 193 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 194 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 221 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 222 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaSetupArgument(T
# 223 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
arg, ::size_t
# 224 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset)
# 226 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 227 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 228 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 260 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 261 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
event, unsigned
# 262 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags)
# 264 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 265 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaEventCreateWithFlags(event, flags);
# 266 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 323 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
static inline cudaError_t cudaMallocHost(void **
# 324 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
ptr, ::size_t
# 325 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size, unsigned
# 326 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags)
# 328 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 329 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaHostAlloc(ptr, size, flags);
# 330 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 332 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 333 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaHostAlloc(T **
# 334 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
ptr, ::size_t
# 335 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size, unsigned
# 336 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags)
# 338 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 339 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 340 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 342 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 343 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaHostGetDevicePointer(T **
# 344 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
pDevice, void *
# 345 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
pHost, unsigned
# 346 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags)
# 348 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 349 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 350 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 449 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 450 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMallocManaged(T **
# 451 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, ::size_t
# 452 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size, unsigned
# 453 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags = 1)
# 455 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 456 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 457 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 528 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 529 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaStreamAttachMemAsync(cudaStream_t
# 530 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
stream, T *
# 531 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, ::size_t
# 532 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
length = 0, unsigned
# 533 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags = 4)
# 535 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 536 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 537 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 539 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 540 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMalloc(T **
# 541 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, ::size_t
# 542 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size)
# 544 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 545 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMalloc((void **)((void *)devPtr), size);
# 546 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 548 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 549 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMallocHost(T **
# 550 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
ptr, ::size_t
# 551 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size, unsigned
# 552 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags = 0)
# 554 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 555 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 556 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 558 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 559 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMallocPitch(T **
# 560 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, ::size_t *
# 561 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
pitch, ::size_t
# 562 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
width, ::size_t
# 563 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
height)
# 565 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 566 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 567 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 604 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 605 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMemcpyToSymbol(const T &
# 606 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
symbol, const void *
# 607 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
src, ::size_t
# 608 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
count, ::size_t
# 609 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 610 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice)
# 612 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 613 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 614 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 656 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 657 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMemcpyToSymbolAsync(const T &
# 658 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
symbol, const void *
# 659 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
src, ::size_t
# 660 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
count, ::size_t
# 661 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 662 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice, cudaStream_t
# 663 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
stream = 0)
# 665 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 666 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 667 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 702 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 703 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMemcpyFromSymbol(void *
# 704 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dst, const T &
# 705 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
symbol, ::size_t
# 706 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
count, ::size_t
# 707 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 708 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost)
# 710 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 711 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 712 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 754 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 755 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaMemcpyFromSymbolAsync(void *
# 756 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dst, const T &
# 757 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
symbol, ::size_t
# 758 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
count, ::size_t
# 759 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 760 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 761 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
stream = 0)
# 763 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 764 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 765 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 787 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 788 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaGetSymbolAddress(void **
# 789 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, const T &
# 790 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
symbol)
# 792 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 793 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 794 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 816 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 817 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaGetSymbolSize(::size_t *
# 818 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size, const T &
# 819 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
symbol)
# 821 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 822 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 823 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 859 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 860 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTexture(::size_t *
# 861 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 862 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, const void *
# 863 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, const cudaChannelFormatDesc &
# 864 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
desc, ::size_t
# 865 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size = ((2147483647) * 2U) + 1U)
# 867 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 868 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 869 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 904 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 905 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTexture(::size_t *
# 906 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 907 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, const void *
# 908 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, ::size_t
# 909 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
size = ((2147483647) * 2U) + 1U)
# 911 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 912 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 913 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 960 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 961 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTexture2D(::size_t *
# 962 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 963 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, const void *
# 964 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, const cudaChannelFormatDesc &
# 965 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
desc, ::size_t
# 966 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
width, ::size_t
# 967 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
height, ::size_t
# 968 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
pitch)
# 970 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 971 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 972 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1018 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1019 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTexture2D(::size_t *
# 1020 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 1021 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, const void *
# 1022 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
devPtr, ::size_t
# 1023 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
width, ::size_t
# 1024 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
height, ::size_t
# 1025 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
pitch)
# 1027 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1028 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch);
# 1029 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1060 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1061 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1062 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, cudaArray_const_t
# 1063 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
array, const cudaChannelFormatDesc &
# 1064 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
desc)
# 1066 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1067 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaBindTextureToArray(&tex, array, &desc);
# 1068 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1098 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1099 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1100 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, cudaArray_const_t
# 1101 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
array)
# 1103 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1104 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1105 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1107 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 1108 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1139 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1140 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1141 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, cudaMipmappedArray_const_t
# 1142 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
mipmappedArray, const cudaChannelFormatDesc &
# 1143 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
desc)
# 1145 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1146 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 1147 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1177 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1178 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1179 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex, cudaMipmappedArray_const_t
# 1180 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
mipmappedArray)
# 1182 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1183 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1184 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaArray_t levelArray;
# 1185 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 1187 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (err != (cudaSuccess)) {
# 1188 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return err;
# 1189 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1190 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
err = ::cudaGetChannelDesc(&desc, levelArray);
# 1192 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 1193 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1216 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1217 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaUnbindTexture(const texture< T, dim, readMode> &
# 1218 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex)
# 1220 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1221 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaUnbindTexture(&tex);
# 1222 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1250 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1251 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaGetTextureAlignmentOffset(::size_t *
# 1252 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 1253 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
tex)
# 1255 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1256 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaGetTextureAlignmentOffset(offset, &tex);
# 1257 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1302 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1303 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaFuncSetCacheConfig(T *
# 1304 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, cudaFuncCache
# 1305 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cacheConfig)
# 1307 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1308 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1309 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1311 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1312 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaFuncSetSharedMemConfig(T *
# 1313 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, cudaSharedMemConfig
# 1314 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
config)
# 1316 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1317 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1318 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1347 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1348 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1349 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
numBlocks, T
# 1350 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, int
# 1351 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSize, ::size_t
# 1352 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dynamicSMemSize)
# 1353 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1354 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1355 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1398 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1399 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1400 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
numBlocks, T
# 1401 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, int
# 1402 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSize, ::size_t
# 1403 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dynamicSMemSize, unsigned
# 1404 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags)
# 1405 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1406 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1407 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1412 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
class __cudaOccupancyB2DHelper {
# 1413 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
::size_t n;
# 1415 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
public: __cudaOccupancyB2DHelper(::size_t n_) : n(n_) { }
# 1416 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
::size_t operator()(int)
# 1417 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1418 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return n;
# 1419 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1420 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
};
# 1467 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1468 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1469 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
minGridSize, int *
# 1470 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSize, T
# 1471 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, UnaryFunction
# 1472 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1473 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1474 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags = 0)
# 1475 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1476 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaError_t status;
# 1479 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int device;
# 1480 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaFuncAttributes attr;
# 1483 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int maxThreadsPerMultiProcessor;
# 1484 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int warpSize;
# 1485 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int devMaxThreadsPerBlock;
# 1486 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int multiProcessorCount;
# 1487 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int funcMaxThreadsPerBlock;
# 1488 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int occupancyLimit;
# 1489 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int granularity;
# 1492 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int maxBlockSize = 0;
# 1493 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int numBlocks = 0;
# 1494 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int maxOccupancy = 0;
# 1497 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int blockSizeToTryAligned;
# 1498 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int blockSizeToTry;
# 1499 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int blockSizeLimitAligned;
# 1500 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int occupancyInBlocks;
# 1501 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
int occupancyInThreads;
# 1502 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
::size_t dynamicSMemSize;
# 1508 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1509 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return cudaErrorInvalidValue;
# 1510 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1516 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = ::cudaGetDevice(&device);
# 1517 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1518 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1519 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1521 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1525 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1526 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1527 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1529 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1533 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1534 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1535 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1537 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1541 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1542 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1543 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1545 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1549 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1550 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1551 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1553 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = cudaFuncGetAttributes(&attr, func);
# 1554 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1555 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1556 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1558 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1564 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
occupancyLimit = maxThreadsPerMultiProcessor;
# 1565 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
granularity = warpSize;
# 1567 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (blockSizeLimit == 0) {
# 1568 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1569 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1571 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1572 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1573 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1575 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1576 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = funcMaxThreadsPerBlock;
# 1577 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1579 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1581 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1585 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (blockSizeLimit < blockSizeToTryAligned) {
# 1586 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeLimit;
# 1587 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
} else {
# 1588 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeToTryAligned;
# 1589 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1591 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1593 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1600 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1601 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1602 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1604 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1606 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (occupancyInThreads > maxOccupancy) {
# 1607 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
maxBlockSize = blockSizeToTry;
# 1608 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
numBlocks = occupancyInBlocks;
# 1609 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
maxOccupancy = occupancyInThreads;
# 1610 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1614 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
if (occupancyLimit == maxOccupancy) {
# 1615 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
break;
# 1616 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1617 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1625 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1626 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
(*blockSize) = maxBlockSize;
# 1628 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return status;
# 1629 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1662 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1663 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1664 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
minGridSize, int *
# 1665 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSize, T
# 1666 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, UnaryFunction
# 1667 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1668 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1669 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1670 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1671 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1707 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1708 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSize(int *
# 1709 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
minGridSize, int *
# 1710 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSize, T
# 1711 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, ::size_t
# 1712 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1713 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1714 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1715 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1716 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1766 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1767 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 1768 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
minGridSize, int *
# 1769 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSize, T
# 1770 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func, ::size_t
# 1771 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1772 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1773 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
flags = 0)
# 1774 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1775 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 1776 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1814 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1815 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaLaunch(T *
# 1816 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
func)
# 1818 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1819 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaLaunch((const void *)func);
# 1820 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1851 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1852 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaFuncGetAttributes(cudaFuncAttributes *
# 1853 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
attr, T *
# 1854 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
entry)
# 1856 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1857 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 1858 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1880 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim> static inline cudaError_t
# 1881 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindSurfaceToArray(const surface< T, dim> &
# 1882 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
surf, cudaArray_const_t
# 1883 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
array, const cudaChannelFormatDesc &
# 1884 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
desc)
# 1886 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1887 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return ::cudaBindSurfaceToArray(&surf, array, &desc);
# 1888 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1909 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
template< class T, int dim> static inline cudaError_t
# 1910 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaBindSurfaceToArray(const surface< T, dim> &
# 1911 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
surf, cudaArray_const_t
# 1912 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
array)
# 1914 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
{
# 1915 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1916 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1918 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1919 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
}
# 1930 "/usr/local/cuda-8.0/include/cuda_runtime.h" 3
#pragma GCC diagnostic pop
# 50 "/usr/include/c++/5/bits/memoryfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/memoryfwd.h" 3
template< class > class allocator;
# 67 "/usr/include/c++/5/bits/memoryfwd.h" 3
template<> class allocator< void> ;
# 70 "/usr/include/c++/5/bits/memoryfwd.h" 3
template< class , class > struct uses_allocator;
# 76 "/usr/include/c++/5/bits/memoryfwd.h" 3
}
# 42 "/usr/include/c++/5/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/5/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 55 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 58 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 63 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char16_t> ;
# 64 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char32_t> ;
# 67 "/usr/include/c++/5/bits/stringfwd.h" 3
inline namespace __cxx11 {
# 69 "/usr/include/c++/5/bits/stringfwd.h" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/5/bits/stringfwd.h" 3
_Alloc = allocator< _CharT> > class basic_string;
# 74 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char> string;
# 78 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< wchar_t> wstring;
# 84 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char16_t> u16string;
# 87 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char32_t> u32string;
# 90 "/usr/include/c++/5/bits/stringfwd.h" 3
}
# 95 "/usr/include/c++/5/bits/stringfwd.h" 3
}
# 42 "/usr/include/c++/5/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 52 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 56 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 59 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 63 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 66 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 69 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 72 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 75 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 78 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_out_of_range_fmt(const char *, ...) __attribute((__noreturn__))
# 79 "/usr/include/c++/5/bits/functexcept.h" 3
 __attribute((__format__(__gnu_printf__, 1, 2)));
# 82 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 85 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 88 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 91 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 95 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 98 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 101 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_future_error(int) __attribute((__noreturn__));
# 105 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_function_call() __attribute((__noreturn__));
# 108 "/usr/include/c++/5/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/5/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 55 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 58 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? ((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) : ((_Value)0));
# 59 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? (((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((_Value)0)));
# 63 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 64 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 65 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 67 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 68 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 70 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 71 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 73 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 74 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 76 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 77 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 99 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 100 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 103 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __max_digits10 = ((2) + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 643L) / (2136)));
# 106 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 107 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 108 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 109 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 111 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 112 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 114 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 115 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 117 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 118 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 120 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 121 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 123 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 124 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 128 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 131 "/usr/include/c++/5/ext/numeric_traits.h" 3
}
# 36 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline _Tp *
# 47 "/usr/include/c++/5/bits/move.h" 3
__addressof(_Tp &__r) noexcept
# 48 "/usr/include/c++/5/bits/move.h" 3
{
# 49 "/usr/include/c++/5/bits/move.h" 3
return reinterpret_cast< _Tp *>(&(const_cast< char &>(reinterpret_cast< const volatile char &>(__r))));
# 51 "/usr/include/c++/5/bits/move.h" 3
}
# 54 "/usr/include/c++/5/bits/move.h" 3
}
# 42 "/usr/include/c++/5/type_traits" 3
namespace std {
# 44 "/usr/include/c++/5/type_traits" 3
typedef unsigned short uint_least16_t;
# 45 "/usr/include/c++/5/type_traits" 3
typedef unsigned uint_least32_t;
# 46 "/usr/include/c++/5/type_traits" 3
}
# 52 "/usr/include/c++/5/type_traits" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/5/type_traits" 3
template< class _Tp, _Tp __v>
# 69 "/usr/include/c++/5/type_traits" 3
struct integral_constant {
# 71 "/usr/include/c++/5/type_traits" 3
static constexpr _Tp value = (__v);
# 72 "/usr/include/c++/5/type_traits" 3
typedef _Tp value_type;
# 73 "/usr/include/c++/5/type_traits" 3
typedef integral_constant type;
# 74 "/usr/include/c++/5/type_traits" 3
constexpr operator value_type() const { return value; }
# 81 "/usr/include/c++/5/type_traits" 3
};
# 83 "/usr/include/c++/5/type_traits" 3
template< class _Tp, _Tp __v> constexpr _Tp
# 84 "/usr/include/c++/5/type_traits" 3
integral_constant< _Tp, __v> ::value;
# 87 "/usr/include/c++/5/type_traits" 3
typedef integral_constant< bool, true> true_type;
# 90 "/usr/include/c++/5/type_traits" 3
typedef integral_constant< bool, false> false_type;
# 92 "/usr/include/c++/5/type_traits" 3
template< bool __v> using __bool_constant = integral_constant< bool, __v> ;
# 97 "/usr/include/c++/5/type_traits" 3
template< bool , class , class > struct conditional;
# 100 "/usr/include/c++/5/type_traits" 3
template< class ...> struct __or_;
# 104 "/usr/include/c++/5/type_traits" 3
template<> struct __or_< > : public false_type {
# 106 "/usr/include/c++/5/type_traits" 3
};
# 108 "/usr/include/c++/5/type_traits" 3
template< class _B1>
# 109 "/usr/include/c++/5/type_traits" 3
struct __or_< _B1> : public _B1 {
# 111 "/usr/include/c++/5/type_traits" 3
};
# 113 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2>
# 114 "/usr/include/c++/5/type_traits" 3
struct __or_< _B1, _B2> : public conditional< _B1::value, _B1, _B2> ::type {
# 116 "/usr/include/c++/5/type_traits" 3
};
# 118 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2, class _B3, class ..._Bn>
# 119 "/usr/include/c++/5/type_traits" 3
struct __or_< _B1, _B2, _B3, _Bn...> : public conditional< _B1::value, _B1, __or_< _B2, _B3, _Bn...> > ::type {
# 121 "/usr/include/c++/5/type_traits" 3
};
# 123 "/usr/include/c++/5/type_traits" 3
template< class ...> struct __and_;
# 127 "/usr/include/c++/5/type_traits" 3
template<> struct __and_< > : public true_type {
# 129 "/usr/include/c++/5/type_traits" 3
};
# 131 "/usr/include/c++/5/type_traits" 3
template< class _B1>
# 132 "/usr/include/c++/5/type_traits" 3
struct __and_< _B1> : public _B1 {
# 134 "/usr/include/c++/5/type_traits" 3
};
# 136 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2>
# 137 "/usr/include/c++/5/type_traits" 3
struct __and_< _B1, _B2> : public conditional< _B1::value, _B2, _B1> ::type {
# 139 "/usr/include/c++/5/type_traits" 3
};
# 141 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2, class _B3, class ..._Bn>
# 142 "/usr/include/c++/5/type_traits" 3
struct __and_< _B1, _B2, _B3, _Bn...> : public conditional< _B1::value, __and_< _B2, _B3, _Bn...> , _B1> ::type {
# 144 "/usr/include/c++/5/type_traits" 3
};
# 146 "/usr/include/c++/5/type_traits" 3
template< class _Pp>
# 147 "/usr/include/c++/5/type_traits" 3
struct __not_ : public integral_constant< bool, !_Pp::value> {
# 149 "/usr/include/c++/5/type_traits" 3
};
# 156 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 157 "/usr/include/c++/5/type_traits" 3
struct __success_type {
# 158 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 160 "/usr/include/c++/5/type_traits" 3
struct __failure_type {
# 161 "/usr/include/c++/5/type_traits" 3
};
# 165 "/usr/include/c++/5/type_traits" 3
template< class > struct remove_cv;
# 168 "/usr/include/c++/5/type_traits" 3
template< class >
# 169 "/usr/include/c++/5/type_traits" 3
struct __is_void_helper : public false_type {
# 170 "/usr/include/c++/5/type_traits" 3
};
# 173 "/usr/include/c++/5/type_traits" 3
template<> struct __is_void_helper< void> : public true_type {
# 174 "/usr/include/c++/5/type_traits" 3
};
# 177 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 178 "/usr/include/c++/5/type_traits" 3
struct is_void : public __is_void_helper< typename remove_cv< _Tp> ::type> ::type {
# 180 "/usr/include/c++/5/type_traits" 3
};
# 182 "/usr/include/c++/5/type_traits" 3
template< class >
# 183 "/usr/include/c++/5/type_traits" 3
struct __is_integral_helper : public false_type {
# 184 "/usr/include/c++/5/type_traits" 3
};
# 187 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< bool> : public true_type {
# 188 "/usr/include/c++/5/type_traits" 3
};
# 191 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< char> : public true_type {
# 192 "/usr/include/c++/5/type_traits" 3
};
# 195 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< signed char> : public true_type {
# 196 "/usr/include/c++/5/type_traits" 3
};
# 199 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned char> : public true_type {
# 200 "/usr/include/c++/5/type_traits" 3
};
# 204 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< wchar_t> : public true_type {
# 205 "/usr/include/c++/5/type_traits" 3
};
# 209 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< char16_t> : public true_type {
# 210 "/usr/include/c++/5/type_traits" 3
};
# 213 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< char32_t> : public true_type {
# 214 "/usr/include/c++/5/type_traits" 3
};
# 217 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< short> : public true_type {
# 218 "/usr/include/c++/5/type_traits" 3
};
# 221 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned short> : public true_type {
# 222 "/usr/include/c++/5/type_traits" 3
};
# 225 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< int> : public true_type {
# 226 "/usr/include/c++/5/type_traits" 3
};
# 229 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned> : public true_type {
# 230 "/usr/include/c++/5/type_traits" 3
};
# 233 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< long> : public true_type {
# 234 "/usr/include/c++/5/type_traits" 3
};
# 237 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned long> : public true_type {
# 238 "/usr/include/c++/5/type_traits" 3
};
# 241 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< long long> : public true_type {
# 242 "/usr/include/c++/5/type_traits" 3
};
# 245 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned long long> : public true_type {
# 246 "/usr/include/c++/5/type_traits" 3
};
# 288 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 289 "/usr/include/c++/5/type_traits" 3
struct is_integral : public __is_integral_helper< typename remove_cv< _Tp> ::type> ::type {
# 291 "/usr/include/c++/5/type_traits" 3
};
# 293 "/usr/include/c++/5/type_traits" 3
template< class >
# 294 "/usr/include/c++/5/type_traits" 3
struct __is_floating_point_helper : public false_type {
# 295 "/usr/include/c++/5/type_traits" 3
};
# 298 "/usr/include/c++/5/type_traits" 3
template<> struct __is_floating_point_helper< float> : public true_type {
# 299 "/usr/include/c++/5/type_traits" 3
};
# 302 "/usr/include/c++/5/type_traits" 3
template<> struct __is_floating_point_helper< double> : public true_type {
# 303 "/usr/include/c++/5/type_traits" 3
};
# 306 "/usr/include/c++/5/type_traits" 3
template<> struct __is_floating_point_helper< long double> : public true_type {
# 307 "/usr/include/c++/5/type_traits" 3
};
# 316 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 317 "/usr/include/c++/5/type_traits" 3
struct is_floating_point : public __is_floating_point_helper< typename remove_cv< _Tp> ::type> ::type {
# 319 "/usr/include/c++/5/type_traits" 3
};
# 322 "/usr/include/c++/5/type_traits" 3
template< class >
# 323 "/usr/include/c++/5/type_traits" 3
struct is_array : public false_type {
# 324 "/usr/include/c++/5/type_traits" 3
};
# 326 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 327 "/usr/include/c++/5/type_traits" 3
struct is_array< _Tp [_Size]> : public true_type {
# 328 "/usr/include/c++/5/type_traits" 3
};
# 330 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 331 "/usr/include/c++/5/type_traits" 3
struct is_array< _Tp []> : public true_type {
# 332 "/usr/include/c++/5/type_traits" 3
};
# 334 "/usr/include/c++/5/type_traits" 3
template< class >
# 335 "/usr/include/c++/5/type_traits" 3
struct __is_pointer_helper : public false_type {
# 336 "/usr/include/c++/5/type_traits" 3
};
# 338 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 339 "/usr/include/c++/5/type_traits" 3
struct __is_pointer_helper< _Tp *> : public true_type {
# 340 "/usr/include/c++/5/type_traits" 3
};
# 343 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 344 "/usr/include/c++/5/type_traits" 3
struct is_pointer : public __is_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 346 "/usr/include/c++/5/type_traits" 3
};
# 349 "/usr/include/c++/5/type_traits" 3
template< class >
# 350 "/usr/include/c++/5/type_traits" 3
struct is_lvalue_reference : public false_type {
# 351 "/usr/include/c++/5/type_traits" 3
};
# 353 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 354 "/usr/include/c++/5/type_traits" 3
struct is_lvalue_reference< _Tp &> : public true_type {
# 355 "/usr/include/c++/5/type_traits" 3
};
# 358 "/usr/include/c++/5/type_traits" 3
template< class >
# 359 "/usr/include/c++/5/type_traits" 3
struct is_rvalue_reference : public false_type {
# 360 "/usr/include/c++/5/type_traits" 3
};
# 362 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 363 "/usr/include/c++/5/type_traits" 3
struct is_rvalue_reference< _Tp &&> : public true_type {
# 364 "/usr/include/c++/5/type_traits" 3
};
# 366 "/usr/include/c++/5/type_traits" 3
template< class > struct is_function;
# 369 "/usr/include/c++/5/type_traits" 3
template< class >
# 370 "/usr/include/c++/5/type_traits" 3
struct __is_member_object_pointer_helper : public false_type {
# 371 "/usr/include/c++/5/type_traits" 3
};
# 373 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Cp>
# 374 "/usr/include/c++/5/type_traits" 3
struct __is_member_object_pointer_helper< _Tp (_Cp::*)> : public integral_constant< bool, !is_function< _Tp> ::value> {
# 375 "/usr/include/c++/5/type_traits" 3
};
# 378 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 379 "/usr/include/c++/5/type_traits" 3
struct is_member_object_pointer : public __is_member_object_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 382 "/usr/include/c++/5/type_traits" 3
};
# 384 "/usr/include/c++/5/type_traits" 3
template< class >
# 385 "/usr/include/c++/5/type_traits" 3
struct __is_member_function_pointer_helper : public false_type {
# 386 "/usr/include/c++/5/type_traits" 3
};
# 388 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Cp>
# 389 "/usr/include/c++/5/type_traits" 3
struct __is_member_function_pointer_helper< _Tp (_Cp::*)> : public integral_constant< bool, is_function< _Tp> ::value> {
# 390 "/usr/include/c++/5/type_traits" 3
};
# 393 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 394 "/usr/include/c++/5/type_traits" 3
struct is_member_function_pointer : public __is_member_function_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 397 "/usr/include/c++/5/type_traits" 3
};
# 400 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 401 "/usr/include/c++/5/type_traits" 3
struct is_enum : public integral_constant< bool, __is_enum(_Tp)> {
# 403 "/usr/include/c++/5/type_traits" 3
};
# 406 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 407 "/usr/include/c++/5/type_traits" 3
struct is_union : public integral_constant< bool, __is_union(_Tp)> {
# 409 "/usr/include/c++/5/type_traits" 3
};
# 412 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 413 "/usr/include/c++/5/type_traits" 3
struct is_class : public integral_constant< bool, __is_class(_Tp)> {
# 415 "/usr/include/c++/5/type_traits" 3
};
# 418 "/usr/include/c++/5/type_traits" 3
template< class >
# 419 "/usr/include/c++/5/type_traits" 3
struct is_function : public false_type {
# 420 "/usr/include/c++/5/type_traits" 3
};
# 422 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 423 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...)> : public true_type {
# 424 "/usr/include/c++/5/type_traits" 3
};
# 426 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 427 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) &> : public true_type {
# 428 "/usr/include/c++/5/type_traits" 3
};
# 430 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 431 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) &&> : public true_type {
# 432 "/usr/include/c++/5/type_traits" 3
};
# 434 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 435 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...)> : public true_type {
# 436 "/usr/include/c++/5/type_traits" 3
};
# 438 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 439 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) &> : public true_type {
# 440 "/usr/include/c++/5/type_traits" 3
};
# 442 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 443 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) &&> : public true_type {
# 444 "/usr/include/c++/5/type_traits" 3
};
# 446 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 447 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const> : public true_type {
# 448 "/usr/include/c++/5/type_traits" 3
};
# 450 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 451 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const &> : public true_type {
# 452 "/usr/include/c++/5/type_traits" 3
};
# 454 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 455 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const &&> : public true_type {
# 456 "/usr/include/c++/5/type_traits" 3
};
# 458 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 459 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const> : public true_type {
# 460 "/usr/include/c++/5/type_traits" 3
};
# 462 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 463 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const &> : public true_type {
# 464 "/usr/include/c++/5/type_traits" 3
};
# 466 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 467 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const &&> : public true_type {
# 468 "/usr/include/c++/5/type_traits" 3
};
# 470 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 471 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) volatile> : public true_type {
# 472 "/usr/include/c++/5/type_traits" 3
};
# 474 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 475 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) volatile &> : public true_type {
# 476 "/usr/include/c++/5/type_traits" 3
};
# 478 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 479 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) volatile &&> : public true_type {
# 480 "/usr/include/c++/5/type_traits" 3
};
# 482 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 483 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) volatile> : public true_type {
# 484 "/usr/include/c++/5/type_traits" 3
};
# 486 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 487 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) volatile &> : public true_type {
# 488 "/usr/include/c++/5/type_traits" 3
};
# 490 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 491 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) volatile &&> : public true_type {
# 492 "/usr/include/c++/5/type_traits" 3
};
# 494 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 495 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const volatile> : public true_type {
# 496 "/usr/include/c++/5/type_traits" 3
};
# 498 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 499 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const volatile &> : public true_type {
# 500 "/usr/include/c++/5/type_traits" 3
};
# 502 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 503 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const volatile &&> : public true_type {
# 504 "/usr/include/c++/5/type_traits" 3
};
# 506 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 507 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const volatile> : public true_type {
# 508 "/usr/include/c++/5/type_traits" 3
};
# 510 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 511 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const volatile &> : public true_type {
# 512 "/usr/include/c++/5/type_traits" 3
};
# 514 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 515 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const volatile &&> : public true_type {
# 516 "/usr/include/c++/5/type_traits" 3
};
# 520 "/usr/include/c++/5/type_traits" 3
template< class >
# 521 "/usr/include/c++/5/type_traits" 3
struct __is_null_pointer_helper : public false_type {
# 522 "/usr/include/c++/5/type_traits" 3
};
# 525 "/usr/include/c++/5/type_traits" 3
template<> struct __is_null_pointer_helper< nullptr_t> : public true_type {
# 526 "/usr/include/c++/5/type_traits" 3
};
# 529 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 530 "/usr/include/c++/5/type_traits" 3
struct is_null_pointer : public __is_null_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 532 "/usr/include/c++/5/type_traits" 3
};
# 535 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 536 "/usr/include/c++/5/type_traits" 3
struct __is_nullptr_t : public is_null_pointer< _Tp> {
# 538 "/usr/include/c++/5/type_traits" 3
};
# 543 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 544 "/usr/include/c++/5/type_traits" 3
struct is_reference : public __or_< is_lvalue_reference< _Tp> , is_rvalue_reference< _Tp> > ::type {
# 547 "/usr/include/c++/5/type_traits" 3
};
# 550 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 551 "/usr/include/c++/5/type_traits" 3
struct is_arithmetic : public __or_< is_integral< _Tp> , is_floating_point< _Tp> > ::type {
# 553 "/usr/include/c++/5/type_traits" 3
};
# 556 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 557 "/usr/include/c++/5/type_traits" 3
struct is_fundamental : public __or_< is_arithmetic< _Tp> , is_void< _Tp> , is_null_pointer< _Tp> > ::type {
# 560 "/usr/include/c++/5/type_traits" 3
};
# 563 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 564 "/usr/include/c++/5/type_traits" 3
struct is_object : public __not_< __or_< is_function< _Tp> , is_reference< _Tp> , is_void< _Tp> > > ::type {
# 567 "/usr/include/c++/5/type_traits" 3
};
# 569 "/usr/include/c++/5/type_traits" 3
template< class > struct is_member_pointer;
# 573 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 574 "/usr/include/c++/5/type_traits" 3
struct is_scalar : public __or_< is_arithmetic< _Tp> , is_enum< _Tp> , is_pointer< _Tp> , is_member_pointer< _Tp> , is_null_pointer< _Tp> > ::type {
# 577 "/usr/include/c++/5/type_traits" 3
};
# 580 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 581 "/usr/include/c++/5/type_traits" 3
struct is_compound : public integral_constant< bool, !is_fundamental< _Tp> ::value> {
# 582 "/usr/include/c++/5/type_traits" 3
};
# 584 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 585 "/usr/include/c++/5/type_traits" 3
struct __is_member_pointer_helper : public false_type {
# 586 "/usr/include/c++/5/type_traits" 3
};
# 588 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Cp>
# 589 "/usr/include/c++/5/type_traits" 3
struct __is_member_pointer_helper< _Tp (_Cp::*)> : public true_type {
# 590 "/usr/include/c++/5/type_traits" 3
};
# 593 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 594 "/usr/include/c++/5/type_traits" 3
struct is_member_pointer : public __is_member_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 596 "/usr/include/c++/5/type_traits" 3
};
# 600 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 601 "/usr/include/c++/5/type_traits" 3
struct __is_referenceable : public __or_< is_object< _Tp> , is_reference< _Tp> > ::type {
# 603 "/usr/include/c++/5/type_traits" 3
};
# 605 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._Args>
# 606 "/usr/include/c++/5/type_traits" 3
struct __is_referenceable< _Res (_Args ...)> : public true_type {
# 608 "/usr/include/c++/5/type_traits" 3
};
# 610 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._Args>
# 611 "/usr/include/c++/5/type_traits" 3
struct __is_referenceable< _Res (_Args ..., ...)> : public true_type {
# 613 "/usr/include/c++/5/type_traits" 3
};
# 618 "/usr/include/c++/5/type_traits" 3
template< class >
# 619 "/usr/include/c++/5/type_traits" 3
struct is_const : public false_type {
# 620 "/usr/include/c++/5/type_traits" 3
};
# 622 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 623 "/usr/include/c++/5/type_traits" 3
struct is_const< const _Tp> : public true_type {
# 624 "/usr/include/c++/5/type_traits" 3
};
# 627 "/usr/include/c++/5/type_traits" 3
template< class >
# 628 "/usr/include/c++/5/type_traits" 3
struct is_volatile : public false_type {
# 629 "/usr/include/c++/5/type_traits" 3
};
# 631 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 632 "/usr/include/c++/5/type_traits" 3
struct is_volatile< volatile _Tp> : public true_type {
# 633 "/usr/include/c++/5/type_traits" 3
};
# 636 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 637 "/usr/include/c++/5/type_traits" 3
struct is_trivial : public integral_constant< bool, __is_trivial(_Tp)> {
# 639 "/usr/include/c++/5/type_traits" 3
};
# 642 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 643 "/usr/include/c++/5/type_traits" 3
struct is_trivially_copyable : public integral_constant< bool, __is_trivially_copyable(_Tp)> {
# 645 "/usr/include/c++/5/type_traits" 3
};
# 648 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 649 "/usr/include/c++/5/type_traits" 3
struct is_standard_layout : public integral_constant< bool, __is_standard_layout(_Tp)> {
# 651 "/usr/include/c++/5/type_traits" 3
};
# 655 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 656 "/usr/include/c++/5/type_traits" 3
struct is_pod : public integral_constant< bool, __is_pod(_Tp)> {
# 658 "/usr/include/c++/5/type_traits" 3
};
# 661 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 662 "/usr/include/c++/5/type_traits" 3
struct is_literal_type : public integral_constant< bool, __is_literal_type(_Tp)> {
# 664 "/usr/include/c++/5/type_traits" 3
};
# 667 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 668 "/usr/include/c++/5/type_traits" 3
struct is_empty : public integral_constant< bool, __is_empty(_Tp)> {
# 670 "/usr/include/c++/5/type_traits" 3
};
# 673 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 674 "/usr/include/c++/5/type_traits" 3
struct is_polymorphic : public integral_constant< bool, __is_polymorphic(_Tp)> {
# 676 "/usr/include/c++/5/type_traits" 3
};
# 688 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 689 "/usr/include/c++/5/type_traits" 3
struct is_abstract : public integral_constant< bool, __is_abstract(_Tp)> {
# 691 "/usr/include/c++/5/type_traits" 3
};
# 693 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 694 "/usr/include/c++/5/type_traits" 3
 = is_arithmetic< _Tp> ::value>
# 695 "/usr/include/c++/5/type_traits" 3
struct __is_signed_helper : public false_type {
# 696 "/usr/include/c++/5/type_traits" 3
};
# 698 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 699 "/usr/include/c++/5/type_traits" 3
struct __is_signed_helper< _Tp, true> : public integral_constant< bool, ((_Tp)(-1)) < ((_Tp)0)> {
# 701 "/usr/include/c++/5/type_traits" 3
};
# 704 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 705 "/usr/include/c++/5/type_traits" 3
struct is_signed : public __is_signed_helper< _Tp> ::type {
# 707 "/usr/include/c++/5/type_traits" 3
};
# 710 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 711 "/usr/include/c++/5/type_traits" 3
struct is_unsigned : public __and_< is_arithmetic< _Tp> , __not_< is_signed< _Tp> > > ::type {
# 713 "/usr/include/c++/5/type_traits" 3
};
# 718 "/usr/include/c++/5/type_traits" 3
template< class > struct add_rvalue_reference;
# 725 "/usr/include/c++/5/type_traits" 3
template< class _Tp> inline typename add_rvalue_reference< _Tp> ::type declval() noexcept;
# 728 "/usr/include/c++/5/type_traits" 3
template< class , unsigned = 0U> struct extent;
# 731 "/usr/include/c++/5/type_traits" 3
template< class > struct remove_all_extents;
# 734 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 735 "/usr/include/c++/5/type_traits" 3
struct __is_array_known_bounds : public integral_constant< bool, (extent< _Tp> ::value > 0)> {
# 737 "/usr/include/c++/5/type_traits" 3
};
# 739 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 740 "/usr/include/c++/5/type_traits" 3
struct __is_array_unknown_bounds : public __and_< is_array< _Tp> , __not_< extent< _Tp> > > ::type {
# 742 "/usr/include/c++/5/type_traits" 3
};
# 749 "/usr/include/c++/5/type_traits" 3
struct __do_is_destructible_impl {
# 751 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class = __decltype(((declval< _Tp &> ().~_Tp())))> static true_type __test(int);
# 754 "/usr/include/c++/5/type_traits" 3
template< class > static false_type __test(...);
# 756 "/usr/include/c++/5/type_traits" 3
};
# 758 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 759 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_impl : public __do_is_destructible_impl {
# 762 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 763 "/usr/include/c++/5/type_traits" 3
};
# 765 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 766 "/usr/include/c++/5/type_traits" 3
 = __or_< is_void< _Tp> , __is_array_unknown_bounds< _Tp> , is_function< _Tp> > ::value, bool
# 769 "/usr/include/c++/5/type_traits" 3
 = __or_< is_reference< _Tp> , is_scalar< _Tp> > ::value> struct __is_destructible_safe;
# 772 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 773 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_safe< _Tp, false, false> : public __is_destructible_impl< typename remove_all_extents< _Tp> ::type> ::type {
# 776 "/usr/include/c++/5/type_traits" 3
};
# 778 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 779 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_safe< _Tp, true, false> : public false_type {
# 780 "/usr/include/c++/5/type_traits" 3
};
# 782 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 783 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_safe< _Tp, false, true> : public true_type {
# 784 "/usr/include/c++/5/type_traits" 3
};
# 787 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 788 "/usr/include/c++/5/type_traits" 3
struct is_destructible : public __is_destructible_safe< _Tp> ::type {
# 790 "/usr/include/c++/5/type_traits" 3
};
# 796 "/usr/include/c++/5/type_traits" 3
struct __do_is_nt_destructible_impl {
# 798 "/usr/include/c++/5/type_traits" 3
template< class _Tp> static integral_constant< bool, noexcept((declval< _Tp &> ().~_Tp()))> __test(int);
# 802 "/usr/include/c++/5/type_traits" 3
template< class > static false_type __test(...);
# 804 "/usr/include/c++/5/type_traits" 3
};
# 806 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 807 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_impl : public __do_is_nt_destructible_impl {
# 810 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 811 "/usr/include/c++/5/type_traits" 3
};
# 813 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 814 "/usr/include/c++/5/type_traits" 3
 = __or_< is_void< _Tp> , __is_array_unknown_bounds< _Tp> , is_function< _Tp> > ::value, bool
# 817 "/usr/include/c++/5/type_traits" 3
 = __or_< is_reference< _Tp> , is_scalar< _Tp> > ::value> struct __is_nt_destructible_safe;
# 820 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 821 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_safe< _Tp, false, false> : public __is_nt_destructible_impl< typename remove_all_extents< _Tp> ::type> ::type {
# 824 "/usr/include/c++/5/type_traits" 3
};
# 826 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 827 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_safe< _Tp, true, false> : public false_type {
# 828 "/usr/include/c++/5/type_traits" 3
};
# 830 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 831 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_safe< _Tp, false, true> : public true_type {
# 832 "/usr/include/c++/5/type_traits" 3
};
# 835 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 836 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_destructible : public __is_nt_destructible_safe< _Tp> ::type {
# 838 "/usr/include/c++/5/type_traits" 3
};
# 840 "/usr/include/c++/5/type_traits" 3
struct __do_is_default_constructible_impl {
# 842 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class = __decltype((_Tp()))> static true_type __test(int);
# 845 "/usr/include/c++/5/type_traits" 3
template< class > static false_type __test(...);
# 847 "/usr/include/c++/5/type_traits" 3
};
# 849 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 850 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_impl : public __do_is_default_constructible_impl {
# 853 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 854 "/usr/include/c++/5/type_traits" 3
};
# 856 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 857 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_atom : public __and_< __not_< is_void< _Tp> > , __is_default_constructible_impl< _Tp> > ::type {
# 860 "/usr/include/c++/5/type_traits" 3
};
# 862 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = is_array< _Tp> ::value> struct __is_default_constructible_safe;
# 870 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 871 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_safe< _Tp, true> : public __and_< __is_array_known_bounds< _Tp> , __is_default_constructible_atom< typename remove_all_extents< _Tp> ::type> > ::type {
# 875 "/usr/include/c++/5/type_traits" 3
};
# 877 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 878 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_safe< _Tp, false> : public __is_default_constructible_atom< _Tp> ::type {
# 880 "/usr/include/c++/5/type_traits" 3
};
# 883 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 884 "/usr/include/c++/5/type_traits" 3
struct is_default_constructible : public __is_default_constructible_safe< _Tp> ::type {
# 886 "/usr/include/c++/5/type_traits" 3
};
# 900 "/usr/include/c++/5/type_traits" 3
struct __do_is_static_castable_impl {
# 902 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, class
# 903 "/usr/include/c++/5/type_traits" 3
 = __decltype((static_cast< _To>(declval< _From> ())))> static true_type
# 902 "/usr/include/c++/5/type_traits" 3
__test(int);
# 906 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 908 "/usr/include/c++/5/type_traits" 3
};
# 910 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 911 "/usr/include/c++/5/type_traits" 3
struct __is_static_castable_impl : public __do_is_static_castable_impl {
# 914 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _From, _To> (0))) type;
# 915 "/usr/include/c++/5/type_traits" 3
};
# 917 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 918 "/usr/include/c++/5/type_traits" 3
struct __is_static_castable_safe : public __is_static_castable_impl< _From, _To> ::type {
# 920 "/usr/include/c++/5/type_traits" 3
};
# 923 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 924 "/usr/include/c++/5/type_traits" 3
struct __is_static_castable : public integral_constant< bool, __is_static_castable_safe< _From, _To> ::value> {
# 927 "/usr/include/c++/5/type_traits" 3
};
# 934 "/usr/include/c++/5/type_traits" 3
struct __do_is_direct_constructible_impl {
# 936 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg, class
# 937 "/usr/include/c++/5/type_traits" 3
 = __decltype((::new (_Tp)(declval< _Arg> ())))> static true_type
# 936 "/usr/include/c++/5/type_traits" 3
__test(int);
# 940 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 942 "/usr/include/c++/5/type_traits" 3
};
# 944 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 945 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_impl : public __do_is_direct_constructible_impl {
# 948 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp, _Arg> (0))) type;
# 949 "/usr/include/c++/5/type_traits" 3
};
# 951 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 952 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_new_safe : public __and_< is_destructible< _Tp> , __is_direct_constructible_impl< _Tp, _Arg> > ::type {
# 955 "/usr/include/c++/5/type_traits" 3
};
# 957 "/usr/include/c++/5/type_traits" 3
template< class , class > struct is_same;
# 960 "/usr/include/c++/5/type_traits" 3
template< class , class > struct is_base_of;
# 963 "/usr/include/c++/5/type_traits" 3
template< class > struct remove_reference;
# 966 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, bool
# 967 "/usr/include/c++/5/type_traits" 3
 = __not_< __or_< is_void< _From> , is_function< _From> > > ::value> struct __is_base_to_derived_ref;
# 973 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 974 "/usr/include/c++/5/type_traits" 3
struct __is_base_to_derived_ref< _From, _To, true> {
# 977 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _From> ::type> ::type __src_t;
# 979 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _To> ::type> ::type __dst_t;
# 981 "/usr/include/c++/5/type_traits" 3
typedef __and_< __not_< is_same< typename remove_cv< typename remove_reference< _From> ::type> ::type, typename remove_cv< typename remove_reference< _To> ::type> ::type> > , is_base_of< typename remove_cv< typename remove_reference< _From> ::type> ::type, typename remove_cv< typename remove_reference< _To> ::type> ::type> > type;
# 982 "/usr/include/c++/5/type_traits" 3
static constexpr bool value = (type::value);
# 983 "/usr/include/c++/5/type_traits" 3
};
# 985 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 986 "/usr/include/c++/5/type_traits" 3
struct __is_base_to_derived_ref< _From, _To, false> : public false_type {
# 988 "/usr/include/c++/5/type_traits" 3
};
# 990 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, bool
# 991 "/usr/include/c++/5/type_traits" 3
 = __and_< is_lvalue_reference< _From> , is_rvalue_reference< _To> > ::value> struct __is_lvalue_to_rvalue_ref;
# 997 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 998 "/usr/include/c++/5/type_traits" 3
struct __is_lvalue_to_rvalue_ref< _From, _To, true> {
# 1001 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _From> ::type> ::type __src_t;
# 1003 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _To> ::type> ::type __dst_t;
# 1006 "/usr/include/c++/5/type_traits" 3
typedef __and_< __not_< is_function< typename remove_cv< typename remove_reference< _From> ::type> ::type> > , __or_< is_same< typename remove_cv< typename remove_reference< _From> ::type> ::type, typename remove_cv< typename remove_reference< _To> ::type> ::type> , is_base_of< typename remove_cv< typename remove_reference< _To> ::type> ::type, typename remove_cv< typename remove_reference< _From> ::type> ::type> > > type;
# 1007 "/usr/include/c++/5/type_traits" 3
static constexpr bool value = (type::value);
# 1008 "/usr/include/c++/5/type_traits" 3
};
# 1010 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 1011 "/usr/include/c++/5/type_traits" 3
struct __is_lvalue_to_rvalue_ref< _From, _To, false> : public false_type {
# 1013 "/usr/include/c++/5/type_traits" 3
};
# 1021 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1022 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_ref_cast : public __and_< __is_static_castable< _Arg, _Tp> , __not_< __or_< __is_base_to_derived_ref< _Arg, _Tp> , __is_lvalue_to_rvalue_ref< _Arg, _Tp> > > > ::type {
# 1027 "/usr/include/c++/5/type_traits" 3
};
# 1029 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1030 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_new : public conditional< is_reference< _Tp> ::value, __is_direct_constructible_ref_cast< _Tp, _Arg> , __is_direct_constructible_new_safe< _Tp, _Arg> > ::type {
# 1035 "/usr/include/c++/5/type_traits" 3
};
# 1037 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1038 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible : public __is_direct_constructible_new< _Tp, _Arg> ::type {
# 1040 "/usr/include/c++/5/type_traits" 3
};
# 1047 "/usr/include/c++/5/type_traits" 3
struct __do_is_nary_constructible_impl {
# 1049 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args, class
# 1050 "/usr/include/c++/5/type_traits" 3
 = __decltype((_Tp(declval< _Args> ()...)))> static true_type
# 1049 "/usr/include/c++/5/type_traits" 3
__test(int);
# 1053 "/usr/include/c++/5/type_traits" 3
template< class , class ...> static false_type __test(...);
# 1055 "/usr/include/c++/5/type_traits" 3
};
# 1057 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1058 "/usr/include/c++/5/type_traits" 3
struct __is_nary_constructible_impl : public __do_is_nary_constructible_impl {
# 1061 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp, _Args...> (0))) type;
# 1062 "/usr/include/c++/5/type_traits" 3
};
# 1064 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1065 "/usr/include/c++/5/type_traits" 3
struct __is_nary_constructible : public __is_nary_constructible_impl< _Tp, _Args...> ::type {
# 1068 "/usr/include/c++/5/type_traits" 3
static_assert((sizeof...(_Args) > (1)), "Only useful for > 1 arguments");
# 1070 "/usr/include/c++/5/type_traits" 3
};
# 1072 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1073 "/usr/include/c++/5/type_traits" 3
struct __is_constructible_impl : public __is_nary_constructible< _Tp, _Args...> {
# 1075 "/usr/include/c++/5/type_traits" 3
};
# 1077 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1078 "/usr/include/c++/5/type_traits" 3
struct __is_constructible_impl< _Tp, _Arg> : public __is_direct_constructible< _Tp, _Arg> {
# 1080 "/usr/include/c++/5/type_traits" 3
};
# 1082 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1083 "/usr/include/c++/5/type_traits" 3
struct __is_constructible_impl< _Tp> : public is_default_constructible< _Tp> {
# 1085 "/usr/include/c++/5/type_traits" 3
};
# 1088 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1089 "/usr/include/c++/5/type_traits" 3
struct is_constructible : public __is_constructible_impl< _Tp, _Args...> ::type {
# 1091 "/usr/include/c++/5/type_traits" 3
};
# 1093 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_copy_constructible_impl;
# 1096 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1097 "/usr/include/c++/5/type_traits" 3
struct __is_copy_constructible_impl< _Tp, false> : public false_type {
# 1098 "/usr/include/c++/5/type_traits" 3
};
# 1100 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1101 "/usr/include/c++/5/type_traits" 3
struct __is_copy_constructible_impl< _Tp, true> : public is_constructible< _Tp, const _Tp &> {
# 1103 "/usr/include/c++/5/type_traits" 3
};
# 1106 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1107 "/usr/include/c++/5/type_traits" 3
struct is_copy_constructible : public __is_copy_constructible_impl< _Tp> {
# 1109 "/usr/include/c++/5/type_traits" 3
};
# 1111 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_move_constructible_impl;
# 1114 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1115 "/usr/include/c++/5/type_traits" 3
struct __is_move_constructible_impl< _Tp, false> : public false_type {
# 1116 "/usr/include/c++/5/type_traits" 3
};
# 1118 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1119 "/usr/include/c++/5/type_traits" 3
struct __is_move_constructible_impl< _Tp, true> : public is_constructible< _Tp, _Tp &&> {
# 1121 "/usr/include/c++/5/type_traits" 3
};
# 1124 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1125 "/usr/include/c++/5/type_traits" 3
struct is_move_constructible : public __is_move_constructible_impl< _Tp> {
# 1127 "/usr/include/c++/5/type_traits" 3
};
# 1129 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1130 "/usr/include/c++/5/type_traits" 3
struct __is_nt_default_constructible_atom : public integral_constant< bool, noexcept((_Tp()))> {
# 1132 "/usr/include/c++/5/type_traits" 3
};
# 1134 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = is_array< _Tp> ::value> struct __is_nt_default_constructible_impl;
# 1137 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1138 "/usr/include/c++/5/type_traits" 3
struct __is_nt_default_constructible_impl< _Tp, true> : public __and_< __is_array_known_bounds< _Tp> , __is_nt_default_constructible_atom< typename remove_all_extents< _Tp> ::type> > ::type {
# 1142 "/usr/include/c++/5/type_traits" 3
};
# 1144 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1145 "/usr/include/c++/5/type_traits" 3
struct __is_nt_default_constructible_impl< _Tp, false> : public __is_nt_default_constructible_atom< _Tp> {
# 1147 "/usr/include/c++/5/type_traits" 3
};
# 1150 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1151 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_default_constructible : public __and_< is_default_constructible< _Tp> , __is_nt_default_constructible_impl< _Tp> > ::type {
# 1154 "/usr/include/c++/5/type_traits" 3
};
# 1156 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1157 "/usr/include/c++/5/type_traits" 3
struct __is_nt_constructible_impl : public integral_constant< bool, noexcept((_Tp(declval< _Args> ()...)))> {
# 1159 "/usr/include/c++/5/type_traits" 3
};
# 1161 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1162 "/usr/include/c++/5/type_traits" 3
struct __is_nt_constructible_impl< _Tp, _Arg> : public integral_constant< bool, noexcept((static_cast< _Tp>(declval< _Arg> ())))> {
# 1165 "/usr/include/c++/5/type_traits" 3
};
# 1167 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1168 "/usr/include/c++/5/type_traits" 3
struct __is_nt_constructible_impl< _Tp> : public is_nothrow_default_constructible< _Tp> {
# 1170 "/usr/include/c++/5/type_traits" 3
};
# 1173 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1174 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_constructible : public __and_< is_constructible< _Tp, _Args...> , __is_nt_constructible_impl< _Tp, _Args...> > ::type {
# 1177 "/usr/include/c++/5/type_traits" 3
};
# 1179 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nothrow_copy_constructible_impl;
# 1182 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1183 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_copy_constructible_impl< _Tp, false> : public false_type {
# 1184 "/usr/include/c++/5/type_traits" 3
};
# 1186 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1187 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_copy_constructible_impl< _Tp, true> : public is_nothrow_constructible< _Tp, const _Tp &> {
# 1189 "/usr/include/c++/5/type_traits" 3
};
# 1192 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1193 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_copy_constructible : public __is_nothrow_copy_constructible_impl< _Tp> {
# 1195 "/usr/include/c++/5/type_traits" 3
};
# 1197 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nothrow_move_constructible_impl;
# 1200 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1201 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_move_constructible_impl< _Tp, false> : public false_type {
# 1202 "/usr/include/c++/5/type_traits" 3
};
# 1204 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1205 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_move_constructible_impl< _Tp, true> : public is_nothrow_constructible< _Tp, _Tp &&> {
# 1207 "/usr/include/c++/5/type_traits" 3
};
# 1210 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1211 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_move_constructible : public __is_nothrow_move_constructible_impl< _Tp> {
# 1213 "/usr/include/c++/5/type_traits" 3
};
# 1215 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1216 "/usr/include/c++/5/type_traits" 3
class __is_assignable_helper {
# 1218 "/usr/include/c++/5/type_traits" 3
template< class _Tp1, class _Up1, class
# 1219 "/usr/include/c++/5/type_traits" 3
 = __decltype((declval< _Tp1> () = declval< _Up1> ()))> static true_type
# 1218 "/usr/include/c++/5/type_traits" 3
__test(int);
# 1223 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 1228 "/usr/include/c++/5/type_traits" 3
public: typedef __decltype((__test< _Tp, _Up> (0))) type;
# 1229 "/usr/include/c++/5/type_traits" 3
};
# 1232 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1233 "/usr/include/c++/5/type_traits" 3
struct is_assignable : public __is_assignable_helper< _Tp, _Up> ::type {
# 1235 "/usr/include/c++/5/type_traits" 3
};
# 1237 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_copy_assignable_impl;
# 1240 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1241 "/usr/include/c++/5/type_traits" 3
struct __is_copy_assignable_impl< _Tp, false> : public false_type {
# 1242 "/usr/include/c++/5/type_traits" 3
};
# 1244 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1245 "/usr/include/c++/5/type_traits" 3
struct __is_copy_assignable_impl< _Tp, true> : public is_assignable< _Tp &, const _Tp &> {
# 1247 "/usr/include/c++/5/type_traits" 3
};
# 1250 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1251 "/usr/include/c++/5/type_traits" 3
struct is_copy_assignable : public __is_copy_assignable_impl< _Tp> {
# 1253 "/usr/include/c++/5/type_traits" 3
};
# 1255 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_move_assignable_impl;
# 1258 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1259 "/usr/include/c++/5/type_traits" 3
struct __is_move_assignable_impl< _Tp, false> : public false_type {
# 1260 "/usr/include/c++/5/type_traits" 3
};
# 1262 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1263 "/usr/include/c++/5/type_traits" 3
struct __is_move_assignable_impl< _Tp, true> : public is_assignable< _Tp &, _Tp &&> {
# 1265 "/usr/include/c++/5/type_traits" 3
};
# 1268 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1269 "/usr/include/c++/5/type_traits" 3
struct is_move_assignable : public __is_move_assignable_impl< _Tp> {
# 1271 "/usr/include/c++/5/type_traits" 3
};
# 1273 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1274 "/usr/include/c++/5/type_traits" 3
struct __is_nt_assignable_impl : public integral_constant< bool, noexcept((declval< _Tp> () = declval< _Up> ()))> {
# 1276 "/usr/include/c++/5/type_traits" 3
};
# 1279 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1280 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_assignable : public __and_< is_assignable< _Tp, _Up> , __is_nt_assignable_impl< _Tp, _Up> > ::type {
# 1283 "/usr/include/c++/5/type_traits" 3
};
# 1285 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nt_copy_assignable_impl;
# 1288 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1289 "/usr/include/c++/5/type_traits" 3
struct __is_nt_copy_assignable_impl< _Tp, false> : public false_type {
# 1290 "/usr/include/c++/5/type_traits" 3
};
# 1292 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1293 "/usr/include/c++/5/type_traits" 3
struct __is_nt_copy_assignable_impl< _Tp, true> : public is_nothrow_assignable< _Tp &, const _Tp &> {
# 1295 "/usr/include/c++/5/type_traits" 3
};
# 1298 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1299 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_copy_assignable : public __is_nt_copy_assignable_impl< _Tp> {
# 1301 "/usr/include/c++/5/type_traits" 3
};
# 1303 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nt_move_assignable_impl;
# 1306 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1307 "/usr/include/c++/5/type_traits" 3
struct __is_nt_move_assignable_impl< _Tp, false> : public false_type {
# 1308 "/usr/include/c++/5/type_traits" 3
};
# 1310 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1311 "/usr/include/c++/5/type_traits" 3
struct __is_nt_move_assignable_impl< _Tp, true> : public is_nothrow_assignable< _Tp &, _Tp &&> {
# 1313 "/usr/include/c++/5/type_traits" 3
};
# 1316 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1317 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_move_assignable : public __is_nt_move_assignable_impl< _Tp> {
# 1319 "/usr/include/c++/5/type_traits" 3
};
# 1322 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1323 "/usr/include/c++/5/type_traits" 3
struct is_trivially_constructible : public __and_< is_constructible< _Tp, _Args...> , integral_constant< bool, __is_trivially_constructible(_Tp, _Args...)> > ::type {
# 1326 "/usr/include/c++/5/type_traits" 3
};
# 1329 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1330 "/usr/include/c++/5/type_traits" 3
struct is_trivially_default_constructible : public is_trivially_constructible< _Tp> ::type {
# 1332 "/usr/include/c++/5/type_traits" 3
};
# 1335 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1336 "/usr/include/c++/5/type_traits" 3
struct is_trivially_copy_constructible : public __and_< is_copy_constructible< _Tp> , integral_constant< bool, __is_trivially_constructible(_Tp, const _Tp &)> > ::type {
# 1340 "/usr/include/c++/5/type_traits" 3
};
# 1343 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1344 "/usr/include/c++/5/type_traits" 3
struct is_trivially_move_constructible : public __and_< is_move_constructible< _Tp> , integral_constant< bool, __is_trivially_constructible(_Tp, _Tp &&)> > ::type {
# 1348 "/usr/include/c++/5/type_traits" 3
};
# 1351 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1352 "/usr/include/c++/5/type_traits" 3
struct is_trivially_assignable : public __and_< is_assignable< _Tp, _Up> , integral_constant< bool, __is_trivially_assignable(_Tp, _Up)> > ::type {
# 1356 "/usr/include/c++/5/type_traits" 3
};
# 1359 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1360 "/usr/include/c++/5/type_traits" 3
struct is_trivially_copy_assignable : public __and_< is_copy_assignable< _Tp> , integral_constant< bool, __is_trivially_assignable(_Tp &, const _Tp &)> > ::type {
# 1364 "/usr/include/c++/5/type_traits" 3
};
# 1367 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1368 "/usr/include/c++/5/type_traits" 3
struct is_trivially_move_assignable : public __and_< is_move_assignable< _Tp> , integral_constant< bool, __is_trivially_assignable(_Tp &, _Tp &&)> > ::type {
# 1372 "/usr/include/c++/5/type_traits" 3
};
# 1375 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1376 "/usr/include/c++/5/type_traits" 3
struct is_trivially_destructible : public __and_< is_destructible< _Tp> , integral_constant< bool, __has_trivial_destructor(_Tp)> > ::type {
# 1379 "/usr/include/c++/5/type_traits" 3
};
# 1382 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1383 "/usr/include/c++/5/type_traits" 3
struct has_trivial_default_constructor : public integral_constant< bool, __has_trivial_constructor(_Tp)> {
# 1385 "/usr/include/c++/5/type_traits" 3
} __attribute((__deprecated__));
# 1388 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1389 "/usr/include/c++/5/type_traits" 3
struct has_trivial_copy_constructor : public integral_constant< bool, __has_trivial_copy(_Tp)> {
# 1391 "/usr/include/c++/5/type_traits" 3
} __attribute((__deprecated__));
# 1394 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1395 "/usr/include/c++/5/type_traits" 3
struct has_trivial_copy_assign : public integral_constant< bool, __has_trivial_assign(_Tp)> {
# 1397 "/usr/include/c++/5/type_traits" 3
} __attribute((__deprecated__));
# 1400 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1401 "/usr/include/c++/5/type_traits" 3
struct has_virtual_destructor : public integral_constant< bool, __has_virtual_destructor(_Tp)> {
# 1403 "/usr/include/c++/5/type_traits" 3
};
# 1409 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1410 "/usr/include/c++/5/type_traits" 3
struct alignment_of : public integral_constant< unsigned long, __alignof__(_Tp)> {
# 1411 "/usr/include/c++/5/type_traits" 3
};
# 1414 "/usr/include/c++/5/type_traits" 3
template< class >
# 1415 "/usr/include/c++/5/type_traits" 3
struct rank : public integral_constant< unsigned long, 0UL> {
# 1416 "/usr/include/c++/5/type_traits" 3
};
# 1418 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 1419 "/usr/include/c++/5/type_traits" 3
struct rank< _Tp [_Size]> : public integral_constant< unsigned long, 1 + rank< _Tp> ::value> {
# 1420 "/usr/include/c++/5/type_traits" 3
};
# 1422 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1423 "/usr/include/c++/5/type_traits" 3
struct rank< _Tp []> : public integral_constant< unsigned long, 1 + rank< _Tp> ::value> {
# 1424 "/usr/include/c++/5/type_traits" 3
};
# 1427 "/usr/include/c++/5/type_traits" 3
template< class , unsigned _Uint>
# 1428 "/usr/include/c++/5/type_traits" 3
struct extent : public integral_constant< unsigned long, 0UL> {
# 1429 "/usr/include/c++/5/type_traits" 3
};
# 1431 "/usr/include/c++/5/type_traits" 3
template< class _Tp, unsigned _Uint, size_t _Size>
# 1432 "/usr/include/c++/5/type_traits" 3
struct extent< _Tp [_Size], _Uint> : public integral_constant< unsigned long, (_Uint == (0)) ? _Size : extent< _Tp, _Uint - (1)> ::value> {
# 1436 "/usr/include/c++/5/type_traits" 3
};
# 1438 "/usr/include/c++/5/type_traits" 3
template< class _Tp, unsigned _Uint>
# 1439 "/usr/include/c++/5/type_traits" 3
struct extent< _Tp [], _Uint> : public integral_constant< unsigned long, (_Uint == (0)) ? 0 : extent< _Tp, _Uint - (1)> ::value> {
# 1443 "/usr/include/c++/5/type_traits" 3
};
# 1449 "/usr/include/c++/5/type_traits" 3
template< class , class >
# 1450 "/usr/include/c++/5/type_traits" 3
struct is_same : public false_type {
# 1451 "/usr/include/c++/5/type_traits" 3
};
# 1453 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1454 "/usr/include/c++/5/type_traits" 3
struct is_same< _Tp, _Tp> : public true_type {
# 1455 "/usr/include/c++/5/type_traits" 3
};
# 1458 "/usr/include/c++/5/type_traits" 3
template< class _Base, class _Derived>
# 1459 "/usr/include/c++/5/type_traits" 3
struct is_base_of : public integral_constant< bool, __is_base_of(_Base, _Derived)> {
# 1461 "/usr/include/c++/5/type_traits" 3
};
# 1463 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, bool
# 1464 "/usr/include/c++/5/type_traits" 3
 = __or_< is_void< _From> , is_function< _To> , is_array< _To> > ::value>
# 1466 "/usr/include/c++/5/type_traits" 3
struct __is_convertible_helper {
# 1467 "/usr/include/c++/5/type_traits" 3
typedef typename is_void< _To> ::type type; };
# 1469 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 1470 "/usr/include/c++/5/type_traits" 3
class __is_convertible_helper< _From, _To, false> {
# 1472 "/usr/include/c++/5/type_traits" 3
template< class _To1> static void __test_aux(_To1);
# 1475 "/usr/include/c++/5/type_traits" 3
template< class _From1, class _To1, class
# 1476 "/usr/include/c++/5/type_traits" 3
 = __decltype((__test_aux< _To1> (std::declval< _From1> ())))> static true_type
# 1475 "/usr/include/c++/5/type_traits" 3
__test(int);
# 1480 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 1485 "/usr/include/c++/5/type_traits" 3
public: typedef __decltype((__test< _From, _To> (0))) type;
# 1486 "/usr/include/c++/5/type_traits" 3
};
# 1490 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 1491 "/usr/include/c++/5/type_traits" 3
struct is_convertible : public __is_convertible_helper< _From, _To> ::type {
# 1493 "/usr/include/c++/5/type_traits" 3
};
# 1499 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1500 "/usr/include/c++/5/type_traits" 3
struct remove_const {
# 1501 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1503 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1504 "/usr/include/c++/5/type_traits" 3
struct remove_const< const _Tp> {
# 1505 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1508 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1509 "/usr/include/c++/5/type_traits" 3
struct remove_volatile {
# 1510 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1512 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1513 "/usr/include/c++/5/type_traits" 3
struct remove_volatile< volatile _Tp> {
# 1514 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1517 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1518 "/usr/include/c++/5/type_traits" 3
struct remove_cv {
# 1521 "/usr/include/c++/5/type_traits" 3
typedef typename remove_const< typename remove_volatile< _Tp> ::type> ::type type;
# 1522 "/usr/include/c++/5/type_traits" 3
};
# 1525 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1526 "/usr/include/c++/5/type_traits" 3
struct add_const {
# 1527 "/usr/include/c++/5/type_traits" 3
typedef const _Tp type; };
# 1530 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1531 "/usr/include/c++/5/type_traits" 3
struct add_volatile {
# 1532 "/usr/include/c++/5/type_traits" 3
typedef volatile _Tp type; };
# 1535 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1536 "/usr/include/c++/5/type_traits" 3
struct add_cv {
# 1539 "/usr/include/c++/5/type_traits" 3
typedef typename add_const< typename add_volatile< _Tp> ::type> ::type type;
# 1540 "/usr/include/c++/5/type_traits" 3
};
# 1574 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1575 "/usr/include/c++/5/type_traits" 3
struct remove_reference {
# 1576 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1578 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1579 "/usr/include/c++/5/type_traits" 3
struct remove_reference< _Tp &> {
# 1580 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1582 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1583 "/usr/include/c++/5/type_traits" 3
struct remove_reference< _Tp &&> {
# 1584 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1586 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value>
# 1587 "/usr/include/c++/5/type_traits" 3
struct __add_lvalue_reference_helper {
# 1588 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1590 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1591 "/usr/include/c++/5/type_traits" 3
struct __add_lvalue_reference_helper< _Tp, true> {
# 1592 "/usr/include/c++/5/type_traits" 3
typedef _Tp &type; };
# 1595 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1596 "/usr/include/c++/5/type_traits" 3
struct add_lvalue_reference : public __add_lvalue_reference_helper< _Tp> {
# 1598 "/usr/include/c++/5/type_traits" 3
};
# 1600 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value>
# 1601 "/usr/include/c++/5/type_traits" 3
struct __add_rvalue_reference_helper {
# 1602 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1604 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1605 "/usr/include/c++/5/type_traits" 3
struct __add_rvalue_reference_helper< _Tp, true> {
# 1606 "/usr/include/c++/5/type_traits" 3
typedef _Tp &&type; };
# 1609 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1610 "/usr/include/c++/5/type_traits" 3
struct add_rvalue_reference : public __add_rvalue_reference_helper< _Tp> {
# 1612 "/usr/include/c++/5/type_traits" 3
};
# 1631 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified, bool _IsConst, bool _IsVol> struct __cv_selector;
# 1634 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1635 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, false, false> {
# 1636 "/usr/include/c++/5/type_traits" 3
typedef _Unqualified __type; };
# 1638 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1639 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, false, true> {
# 1640 "/usr/include/c++/5/type_traits" 3
typedef volatile _Unqualified __type; };
# 1642 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1643 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, true, false> {
# 1644 "/usr/include/c++/5/type_traits" 3
typedef const _Unqualified __type; };
# 1646 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1647 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, true, true> {
# 1648 "/usr/include/c++/5/type_traits" 3
typedef const volatile _Unqualified __type; };
# 1650 "/usr/include/c++/5/type_traits" 3
template< class _Qualified, class _Unqualified, bool
# 1651 "/usr/include/c++/5/type_traits" 3
_IsConst = is_const< _Qualified> ::value, bool
# 1652 "/usr/include/c++/5/type_traits" 3
_IsVol = is_volatile< _Qualified> ::value>
# 1653 "/usr/include/c++/5/type_traits" 3
class __match_cv_qualifiers {
# 1655 "/usr/include/c++/5/type_traits" 3
typedef __cv_selector< _Unqualified, _IsConst, _IsVol> __match;
# 1658 "/usr/include/c++/5/type_traits" 3
public: typedef typename __cv_selector< _Unqualified, _IsConst, _IsVol> ::__type __type;
# 1659 "/usr/include/c++/5/type_traits" 3
};
# 1662 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1663 "/usr/include/c++/5/type_traits" 3
struct __make_unsigned {
# 1664 "/usr/include/c++/5/type_traits" 3
typedef _Tp __type; };
# 1667 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< char> {
# 1668 "/usr/include/c++/5/type_traits" 3
typedef unsigned char __type; };
# 1671 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< signed char> {
# 1672 "/usr/include/c++/5/type_traits" 3
typedef unsigned char __type; };
# 1675 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< short> {
# 1676 "/usr/include/c++/5/type_traits" 3
typedef unsigned short __type; };
# 1679 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< int> {
# 1680 "/usr/include/c++/5/type_traits" 3
typedef unsigned __type; };
# 1683 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< long> {
# 1684 "/usr/include/c++/5/type_traits" 3
typedef unsigned long __type; };
# 1687 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< long long> {
# 1688 "/usr/include/c++/5/type_traits" 3
typedef unsigned long long __type; };
# 1692 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< wchar_t> : public __make_unsigned< int> {
# 1693 "/usr/include/c++/5/type_traits" 3
};
# 1718 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 1719 "/usr/include/c++/5/type_traits" 3
_IsInt = is_integral< _Tp> ::value, bool
# 1720 "/usr/include/c++/5/type_traits" 3
_IsEnum = is_enum< _Tp> ::value> class __make_unsigned_selector;
# 1723 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1724 "/usr/include/c++/5/type_traits" 3
class __make_unsigned_selector< _Tp, true, false> {
# 1726 "/usr/include/c++/5/type_traits" 3
typedef __make_unsigned< typename remove_cv< _Tp> ::type> __unsignedt;
# 1727 "/usr/include/c++/5/type_traits" 3
typedef typename __make_unsigned< typename remove_cv< _Tp> ::type> ::__type __unsigned_type;
# 1728 "/usr/include/c++/5/type_traits" 3
typedef __match_cv_qualifiers< _Tp, typename __make_unsigned< typename remove_cv< _Tp> ::type> ::__type> __cv_unsigned;
# 1731 "/usr/include/c++/5/type_traits" 3
public: typedef typename __match_cv_qualifiers< _Tp, typename __make_unsigned< typename remove_cv< _Tp> ::type> ::__type> ::__type __type;
# 1732 "/usr/include/c++/5/type_traits" 3
};
# 1734 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1735 "/usr/include/c++/5/type_traits" 3
class __make_unsigned_selector< _Tp, false, true> {
# 1738 "/usr/include/c++/5/type_traits" 3
typedef unsigned char __smallest;
# 1739 "/usr/include/c++/5/type_traits" 3
static const bool __b0 = (sizeof(_Tp) <= sizeof(__smallest));
# 1740 "/usr/include/c++/5/type_traits" 3
static const bool __b1 = (sizeof(_Tp) <= sizeof(unsigned short));
# 1741 "/usr/include/c++/5/type_traits" 3
static const bool __b2 = (sizeof(_Tp) <= sizeof(unsigned));
# 1742 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b2, unsigned, unsigned long> __cond2;
# 1743 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b2, unsigned, unsigned long> ::type __cond2_type;
# 1744 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b1, unsigned short, typename conditional< __b2, unsigned, unsigned long> ::type> __cond1;
# 1745 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b1, unsigned short, typename conditional< __b2, unsigned, unsigned long> ::type> ::type __cond1_type;
# 1748 "/usr/include/c++/5/type_traits" 3
public: typedef typename conditional< __b0, unsigned char, typename conditional< __b1, unsigned short, typename conditional< __b2, unsigned, unsigned long> ::type> ::type> ::type __type;
# 1749 "/usr/include/c++/5/type_traits" 3
};
# 1755 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1756 "/usr/include/c++/5/type_traits" 3
struct make_unsigned {
# 1757 "/usr/include/c++/5/type_traits" 3
typedef typename __make_unsigned_selector< _Tp> ::__type type; };
# 1761 "/usr/include/c++/5/type_traits" 3
template<> struct make_unsigned< bool> ;
# 1765 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1766 "/usr/include/c++/5/type_traits" 3
struct __make_signed {
# 1767 "/usr/include/c++/5/type_traits" 3
typedef _Tp __type; };
# 1770 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< char> {
# 1771 "/usr/include/c++/5/type_traits" 3
typedef signed char __type; };
# 1774 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned char> {
# 1775 "/usr/include/c++/5/type_traits" 3
typedef signed char __type; };
# 1778 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned short> {
# 1779 "/usr/include/c++/5/type_traits" 3
typedef signed short __type; };
# 1782 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned> {
# 1783 "/usr/include/c++/5/type_traits" 3
typedef signed int __type; };
# 1786 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned long> {
# 1787 "/usr/include/c++/5/type_traits" 3
typedef signed long __type; };
# 1790 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned long long> {
# 1791 "/usr/include/c++/5/type_traits" 3
typedef signed long long __type; };
# 1801 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< char16_t> : public __make_signed< unsigned short> {
# 1802 "/usr/include/c++/5/type_traits" 3
};
# 1804 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< char32_t> : public __make_signed< unsigned> {
# 1805 "/usr/include/c++/5/type_traits" 3
};
# 1830 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 1831 "/usr/include/c++/5/type_traits" 3
_IsInt = is_integral< _Tp> ::value, bool
# 1832 "/usr/include/c++/5/type_traits" 3
_IsEnum = is_enum< _Tp> ::value> class __make_signed_selector;
# 1835 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1836 "/usr/include/c++/5/type_traits" 3
class __make_signed_selector< _Tp, true, false> {
# 1838 "/usr/include/c++/5/type_traits" 3
typedef __make_signed< typename remove_cv< _Tp> ::type> __signedt;
# 1839 "/usr/include/c++/5/type_traits" 3
typedef typename __make_signed< typename remove_cv< _Tp> ::type> ::__type __signed_type;
# 1840 "/usr/include/c++/5/type_traits" 3
typedef __match_cv_qualifiers< _Tp, typename __make_signed< typename remove_cv< _Tp> ::type> ::__type> __cv_signed;
# 1843 "/usr/include/c++/5/type_traits" 3
public: typedef typename __match_cv_qualifiers< _Tp, typename __make_signed< typename remove_cv< _Tp> ::type> ::__type> ::__type __type;
# 1844 "/usr/include/c++/5/type_traits" 3
};
# 1846 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1847 "/usr/include/c++/5/type_traits" 3
class __make_signed_selector< _Tp, false, true> {
# 1850 "/usr/include/c++/5/type_traits" 3
typedef signed char __smallest;
# 1851 "/usr/include/c++/5/type_traits" 3
static const bool __b0 = (sizeof(_Tp) <= sizeof(__smallest));
# 1852 "/usr/include/c++/5/type_traits" 3
static const bool __b1 = (sizeof(_Tp) <= sizeof(signed short));
# 1853 "/usr/include/c++/5/type_traits" 3
static const bool __b2 = (sizeof(_Tp) <= sizeof(signed int));
# 1854 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b2, signed int, signed long> __cond2;
# 1855 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b2, signed int, signed long> ::type __cond2_type;
# 1856 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b1, signed short, typename conditional< __b2, signed int, signed long> ::type> __cond1;
# 1857 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b1, signed short, typename conditional< __b2, signed int, signed long> ::type> ::type __cond1_type;
# 1860 "/usr/include/c++/5/type_traits" 3
public: typedef typename conditional< __b0, signed char, typename conditional< __b1, signed short, typename conditional< __b2, signed int, signed long> ::type> ::type> ::type __type;
# 1861 "/usr/include/c++/5/type_traits" 3
};
# 1867 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1868 "/usr/include/c++/5/type_traits" 3
struct make_signed {
# 1869 "/usr/include/c++/5/type_traits" 3
typedef typename __make_signed_selector< _Tp> ::__type type; };
# 1873 "/usr/include/c++/5/type_traits" 3
template<> struct make_signed< bool> ;
# 1888 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1889 "/usr/include/c++/5/type_traits" 3
struct remove_extent {
# 1890 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1892 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 1893 "/usr/include/c++/5/type_traits" 3
struct remove_extent< _Tp [_Size]> {
# 1894 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1896 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1897 "/usr/include/c++/5/type_traits" 3
struct remove_extent< _Tp []> {
# 1898 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1901 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1902 "/usr/include/c++/5/type_traits" 3
struct remove_all_extents {
# 1903 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1905 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 1906 "/usr/include/c++/5/type_traits" 3
struct remove_all_extents< _Tp [_Size]> {
# 1907 "/usr/include/c++/5/type_traits" 3
typedef typename std::remove_all_extents< _Tp> ::type type; };
# 1909 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1910 "/usr/include/c++/5/type_traits" 3
struct remove_all_extents< _Tp []> {
# 1911 "/usr/include/c++/5/type_traits" 3
typedef typename std::remove_all_extents< _Tp> ::type type; };
# 1925 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class >
# 1926 "/usr/include/c++/5/type_traits" 3
struct __remove_pointer_helper {
# 1927 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1929 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1930 "/usr/include/c++/5/type_traits" 3
struct __remove_pointer_helper< _Tp, _Up *> {
# 1931 "/usr/include/c++/5/type_traits" 3
typedef _Up type; };
# 1934 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1935 "/usr/include/c++/5/type_traits" 3
struct remove_pointer : public __remove_pointer_helper< _Tp, typename remove_cv< _Tp> ::type> {
# 1937 "/usr/include/c++/5/type_traits" 3
};
# 1940 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __or_< __is_referenceable< _Tp> , is_void< _Tp> > ::value>
# 1942 "/usr/include/c++/5/type_traits" 3
struct __add_pointer_helper {
# 1943 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1945 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1946 "/usr/include/c++/5/type_traits" 3
struct __add_pointer_helper< _Tp, true> {
# 1947 "/usr/include/c++/5/type_traits" 3
typedef typename remove_reference< _Tp> ::type *type; };
# 1949 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1950 "/usr/include/c++/5/type_traits" 3
struct add_pointer : public __add_pointer_helper< _Tp> {
# 1952 "/usr/include/c++/5/type_traits" 3
};
# 1964 "/usr/include/c++/5/type_traits" 3
template< size_t _Len>
# 1965 "/usr/include/c++/5/type_traits" 3
struct __aligned_storage_msa {
# 1967 "/usr/include/c++/5/type_traits" 3
union __type {
# 1969 "/usr/include/c++/5/type_traits" 3
unsigned char __data[_Len];
# 1970 "/usr/include/c++/5/type_traits" 3
struct __attribute((__aligned__)) { } __align;
# 1971 "/usr/include/c++/5/type_traits" 3
};
# 1972 "/usr/include/c++/5/type_traits" 3
};
# 1984 "/usr/include/c++/5/type_traits" 3
template< size_t _Len, size_t _Align = __alignof__(typename __aligned_storage_msa< _Len> ::__type)>
# 1986 "/usr/include/c++/5/type_traits" 3
struct aligned_storage {
# 1988 "/usr/include/c++/5/type_traits" 3
union type {
# 1990 "/usr/include/c++/5/type_traits" 3
unsigned char __data[_Len];
# 1991 "/usr/include/c++/5/type_traits" 3
struct __attribute((__aligned__(_Align))) { } __align;
# 1992 "/usr/include/c++/5/type_traits" 3
};
# 1993 "/usr/include/c++/5/type_traits" 3
};
# 1995 "/usr/include/c++/5/type_traits" 3
template< class ..._Types>
# 1996 "/usr/include/c++/5/type_traits" 3
struct __strictest_alignment {
# 1998 "/usr/include/c++/5/type_traits" 3
static const size_t _S_alignment = (0);
# 1999 "/usr/include/c++/5/type_traits" 3
static const size_t _S_size = (0);
# 2000 "/usr/include/c++/5/type_traits" 3
};
# 2002 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Types>
# 2003 "/usr/include/c++/5/type_traits" 3
struct __strictest_alignment< _Tp, _Types...> {
# 2005 "/usr/include/c++/5/type_traits" 3
static const size_t _S_alignment = ((__alignof__(_Tp) > __strictest_alignment< _Types...> ::_S_alignment) ? __alignof__(_Tp) : __strictest_alignment< _Types...> ::_S_alignment);
# 2008 "/usr/include/c++/5/type_traits" 3
static const size_t _S_size = ((sizeof(_Tp) > __strictest_alignment< _Types...> ::_S_size) ? sizeof(_Tp) : __strictest_alignment< _Types...> ::_S_size);
# 2011 "/usr/include/c++/5/type_traits" 3
};
# 2023 "/usr/include/c++/5/type_traits" 3
template< size_t _Len, class ..._Types>
# 2024 "/usr/include/c++/5/type_traits" 3
struct aligned_union {
# 2027 "/usr/include/c++/5/type_traits" 3
static_assert((sizeof...(_Types) != (0)), "At least one type is required");
# 2029 "/usr/include/c++/5/type_traits" 3
private: using __strictest = __strictest_alignment< _Types...> ;
# 2030 "/usr/include/c++/5/type_traits" 3
static const size_t _S_len = ((_Len > __strictest::_S_size) ? _Len : __strictest::_S_size);
# 2034 "/usr/include/c++/5/type_traits" 3
public: static const size_t alignment_value = (__strictest::_S_alignment);
# 2036 "/usr/include/c++/5/type_traits" 3
typedef typename aligned_storage< _S_len, alignment_value> ::type type;
# 2037 "/usr/include/c++/5/type_traits" 3
};
# 2039 "/usr/include/c++/5/type_traits" 3
template< size_t _Len, class ..._Types> const size_t
# 2040 "/usr/include/c++/5/type_traits" 3
aligned_union< _Len, _Types...> ::alignment_value;
# 2044 "/usr/include/c++/5/type_traits" 3
template< class _Up, bool
# 2045 "/usr/include/c++/5/type_traits" 3
_IsArray = is_array< _Up> ::value, bool
# 2046 "/usr/include/c++/5/type_traits" 3
_IsFunction = is_function< _Up> ::value> struct __decay_selector;
# 2050 "/usr/include/c++/5/type_traits" 3
template< class _Up>
# 2051 "/usr/include/c++/5/type_traits" 3
struct __decay_selector< _Up, false, false> {
# 2052 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< _Up> ::type __type; };
# 2054 "/usr/include/c++/5/type_traits" 3
template< class _Up>
# 2055 "/usr/include/c++/5/type_traits" 3
struct __decay_selector< _Up, true, false> {
# 2056 "/usr/include/c++/5/type_traits" 3
typedef typename remove_extent< _Up> ::type *__type; };
# 2058 "/usr/include/c++/5/type_traits" 3
template< class _Up>
# 2059 "/usr/include/c++/5/type_traits" 3
struct __decay_selector< _Up, false, true> {
# 2060 "/usr/include/c++/5/type_traits" 3
typedef typename add_pointer< _Up> ::type __type; };
# 2063 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2064 "/usr/include/c++/5/type_traits" 3
class decay {
# 2066 "/usr/include/c++/5/type_traits" 3
typedef typename remove_reference< _Tp> ::type __remove_type;
# 2069 "/usr/include/c++/5/type_traits" 3
public: typedef typename __decay_selector< typename remove_reference< _Tp> ::type> ::__type type;
# 2070 "/usr/include/c++/5/type_traits" 3
};
# 2072 "/usr/include/c++/5/type_traits" 3
template< class _Tp> class reference_wrapper;
# 2076 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2077 "/usr/include/c++/5/type_traits" 3
struct __strip_reference_wrapper {
# 2079 "/usr/include/c++/5/type_traits" 3
typedef _Tp __type;
# 2080 "/usr/include/c++/5/type_traits" 3
};
# 2082 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2083 "/usr/include/c++/5/type_traits" 3
struct __strip_reference_wrapper< reference_wrapper< _Tp> > {
# 2085 "/usr/include/c++/5/type_traits" 3
typedef _Tp &__type;
# 2086 "/usr/include/c++/5/type_traits" 3
};
# 2088 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2089 "/usr/include/c++/5/type_traits" 3
struct __decay_and_strip {
# 2092 "/usr/include/c++/5/type_traits" 3
typedef typename __strip_reference_wrapper< typename decay< _Tp> ::type> ::__type __type;
# 2093 "/usr/include/c++/5/type_traits" 3
};
# 2098 "/usr/include/c++/5/type_traits" 3
template< bool , class _Tp = void>
# 2099 "/usr/include/c++/5/type_traits" 3
struct enable_if {
# 2100 "/usr/include/c++/5/type_traits" 3
};
# 2103 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2104 "/usr/include/c++/5/type_traits" 3
struct enable_if< true, _Tp> {
# 2105 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 2107 "/usr/include/c++/5/type_traits" 3
template< class ..._Cond> using _Require = typename enable_if< __and_< _Cond...> ::value> ::type;
# 2112 "/usr/include/c++/5/type_traits" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 2113 "/usr/include/c++/5/type_traits" 3
struct conditional {
# 2114 "/usr/include/c++/5/type_traits" 3
typedef _Iftrue type; };
# 2117 "/usr/include/c++/5/type_traits" 3
template< class _Iftrue, class _Iffalse>
# 2118 "/usr/include/c++/5/type_traits" 3
struct conditional< false, _Iftrue, _Iffalse> {
# 2119 "/usr/include/c++/5/type_traits" 3
typedef _Iffalse type; };
# 2122 "/usr/include/c++/5/type_traits" 3
template< class ..._Tp> struct common_type;
# 2127 "/usr/include/c++/5/type_traits" 3
struct __do_common_type_impl {
# 2129 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up> static __success_type< typename decay< __decltype((true ? std::declval< _Tp> () : std::declval< _Up> ()))> ::type> _S_test(int);
# 2134 "/usr/include/c++/5/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2136 "/usr/include/c++/5/type_traits" 3
};
# 2138 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 2139 "/usr/include/c++/5/type_traits" 3
struct __common_type_impl : private __do_common_type_impl {
# 2142 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _Tp, _Up> (0))) type;
# 2143 "/usr/include/c++/5/type_traits" 3
};
# 2145 "/usr/include/c++/5/type_traits" 3
struct __do_member_type_wrapper {
# 2147 "/usr/include/c++/5/type_traits" 3
template< class _Tp> static __success_type< typename _Tp::type> _S_test(int);
# 2150 "/usr/include/c++/5/type_traits" 3
template< class > static __failure_type _S_test(...);
# 2152 "/usr/include/c++/5/type_traits" 3
};
# 2154 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2155 "/usr/include/c++/5/type_traits" 3
struct __member_type_wrapper : private __do_member_type_wrapper {
# 2158 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _Tp> (0))) type;
# 2159 "/usr/include/c++/5/type_traits" 3
};
# 2161 "/usr/include/c++/5/type_traits" 3
template< class _CTp, class ..._Args>
# 2162 "/usr/include/c++/5/type_traits" 3
struct __expanded_common_type_wrapper {
# 2164 "/usr/include/c++/5/type_traits" 3
typedef common_type< typename _CTp::type, _Args...> type;
# 2165 "/usr/include/c++/5/type_traits" 3
};
# 2167 "/usr/include/c++/5/type_traits" 3
template< class ..._Args>
# 2168 "/usr/include/c++/5/type_traits" 3
struct __expanded_common_type_wrapper< __failure_type, _Args...> {
# 2169 "/usr/include/c++/5/type_traits" 3
typedef __failure_type type; };
# 2171 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2172 "/usr/include/c++/5/type_traits" 3
struct common_type< _Tp> {
# 2173 "/usr/include/c++/5/type_traits" 3
typedef typename decay< _Tp> ::type type; };
# 2175 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 2176 "/usr/include/c++/5/type_traits" 3
struct common_type< _Tp, _Up> : public __common_type_impl< _Tp, _Up> ::type {
# 2178 "/usr/include/c++/5/type_traits" 3
};
# 2180 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up, class ..._Vp>
# 2181 "/usr/include/c++/5/type_traits" 3
struct common_type< _Tp, _Up, _Vp...> : public __expanded_common_type_wrapper< typename __member_type_wrapper< common_type< _Tp, _Up> > ::type, _Vp...> ::type {
# 2184 "/usr/include/c++/5/type_traits" 3
};
# 2187 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2188 "/usr/include/c++/5/type_traits" 3
struct underlying_type {
# 2190 "/usr/include/c++/5/type_traits" 3
typedef __underlying_type(_Tp) type;
# 2191 "/usr/include/c++/5/type_traits" 3
};
# 2193 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2194 "/usr/include/c++/5/type_traits" 3
struct __declval_protector {
# 2196 "/usr/include/c++/5/type_traits" 3
static const bool __stop = false;
# 2197 "/usr/include/c++/5/type_traits" 3
static typename add_rvalue_reference< _Tp> ::type __delegate();
# 2198 "/usr/include/c++/5/type_traits" 3
};
# 2200 "/usr/include/c++/5/type_traits" 3
template< class _Tp> inline typename add_rvalue_reference< _Tp> ::type
# 2202 "/usr/include/c++/5/type_traits" 3
declval() noexcept
# 2203 "/usr/include/c++/5/type_traits" 3
{
# 2204 "/usr/include/c++/5/type_traits" 3
static_assert((__declval_protector< _Tp> ::__stop), "declval() must not be used!");
# 2206 "/usr/include/c++/5/type_traits" 3
return __declval_protector< _Tp> ::__delegate();
# 2207 "/usr/include/c++/5/type_traits" 3
}
# 2210 "/usr/include/c++/5/type_traits" 3
template< class _Signature> class result_of;
# 2218 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_ref_impl {
# 2220 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1, class ..._Args> static __success_type< __decltype(((std::declval< _Tp1> ().*std::declval< _Fp> ())(std::declval< _Args> ()...)))> _S_test(int);
# 2225 "/usr/include/c++/5/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2227 "/usr/include/c++/5/type_traits" 3
};
# 2229 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2230 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_ref : private __result_of_memfun_ref_impl {
# 2233 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg, _Args...> (0))) type;
# 2234 "/usr/include/c++/5/type_traits" 3
};
# 2237 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_deref_impl {
# 2239 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1, class ..._Args> static __success_type< __decltype((((*std::declval< _Tp1> ()).*std::declval< _Fp> ())(std::declval< _Args> ()...)))> _S_test(int);
# 2244 "/usr/include/c++/5/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2246 "/usr/include/c++/5/type_traits" 3
};
# 2248 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2249 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_deref : private __result_of_memfun_deref_impl {
# 2252 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg, _Args...> (0))) type;
# 2253 "/usr/include/c++/5/type_traits" 3
};
# 2256 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_ref_impl {
# 2258 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1> static __success_type< __decltype((std::declval< _Tp1> ().*std::declval< _Fp> ()))> _S_test(int);
# 2263 "/usr/include/c++/5/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2265 "/usr/include/c++/5/type_traits" 3
};
# 2267 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg>
# 2268 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_ref : private __result_of_memobj_ref_impl {
# 2271 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg> (0))) type;
# 2272 "/usr/include/c++/5/type_traits" 3
};
# 2275 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_deref_impl {
# 2277 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1> static __success_type< __decltype(((*std::declval< _Tp1> ()).*std::declval< _Fp> ()))> _S_test(int);
# 2282 "/usr/include/c++/5/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2284 "/usr/include/c++/5/type_traits" 3
};
# 2286 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg>
# 2287 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_deref : private __result_of_memobj_deref_impl {
# 2290 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg> (0))) type;
# 2291 "/usr/include/c++/5/type_traits" 3
};
# 2293 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg> struct __result_of_memobj;
# 2296 "/usr/include/c++/5/type_traits" 3
template< class _Res, class _Class, class _Arg>
# 2297 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj< _Res (_Class::*), _Arg> {
# 2300 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _Arg> ::type> ::type _Argval;
# 2301 "/usr/include/c++/5/type_traits" 3
typedef _Res (_Class::*_MemPtr);
# 2306 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __or_< is_same< typename remove_cv< typename remove_reference< _Arg> ::type> ::type, _Class> , is_base_of< _Class, typename remove_cv< typename remove_reference< _Arg> ::type> ::type> > ::value, __result_of_memobj_ref< _Res (_Class::*), _Arg> , __result_of_memobj_deref< _Res (_Class::*), _Arg> > ::type::type type;
# 2307 "/usr/include/c++/5/type_traits" 3
};
# 2309 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args> struct __result_of_memfun;
# 2312 "/usr/include/c++/5/type_traits" 3
template< class _Res, class _Class, class _Arg, class ..._Args>
# 2313 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun< _Res (_Class::*), _Arg, _Args...> {
# 2316 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _Arg> ::type> ::type _Argval;
# 2317 "/usr/include/c++/5/type_traits" 3
typedef _Res (_Class::*_MemPtr);
# 2322 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __or_< is_same< typename remove_cv< typename remove_reference< _Arg> ::type> ::type, _Class> , is_base_of< _Class, typename remove_cv< typename remove_reference< _Arg> ::type> ::type> > ::value, __result_of_memfun_ref< _Res (_Class::*), _Arg, _Args...> , __result_of_memfun_deref< _Res (_Class::*), _Arg, _Args...> > ::type::type type;
# 2323 "/usr/include/c++/5/type_traits" 3
};
# 2325 "/usr/include/c++/5/type_traits" 3
template< bool , bool , class _Functor, class ..._ArgTypes>
# 2326 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl {
# 2328 "/usr/include/c++/5/type_traits" 3
typedef __failure_type type;
# 2329 "/usr/include/c++/5/type_traits" 3
};
# 2331 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg>
# 2332 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl< true, false, _MemPtr, _Arg> : public __result_of_memobj< typename decay< _MemPtr> ::type, _Arg> {
# 2334 "/usr/include/c++/5/type_traits" 3
};
# 2336 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2337 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl< false, true, _MemPtr, _Arg, _Args...> : public __result_of_memfun< typename decay< _MemPtr> ::type, _Arg, _Args...> {
# 2339 "/usr/include/c++/5/type_traits" 3
};
# 2342 "/usr/include/c++/5/type_traits" 3
struct __result_of_other_impl {
# 2344 "/usr/include/c++/5/type_traits" 3
template< class _Fn, class ..._Args> static __success_type< __decltype((std::declval< _Fn> ()(std::declval< _Args> ()...)))> _S_test(int);
# 2349 "/usr/include/c++/5/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2351 "/usr/include/c++/5/type_traits" 3
};
# 2353 "/usr/include/c++/5/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2354 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl< false, false, _Functor, _ArgTypes...> : private __result_of_other_impl {
# 2357 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _Functor, _ArgTypes...> (0))) type;
# 2358 "/usr/include/c++/5/type_traits" 3
};
# 2360 "/usr/include/c++/5/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2361 "/usr/include/c++/5/type_traits" 3
struct result_of< _Functor (_ArgTypes ...)> : public __result_of_impl< is_member_object_pointer< typename remove_reference< _Functor> ::type> ::value, is_member_function_pointer< typename remove_reference< _Functor> ::type> ::value, _Functor, _ArgTypes...> ::type {
# 2371 "/usr/include/c++/5/type_traits" 3
};
# 2407 "/usr/include/c++/5/type_traits" 3
template< class ...> using __void_t = void;
# 2426 "/usr/include/c++/5/type_traits" 3
}
# 59 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr _Tp &&
# 76 "/usr/include/c++/5/bits/move.h" 3
forward(typename remove_reference< _Tp> ::type &__t) noexcept
# 77 "/usr/include/c++/5/bits/move.h" 3
{ return static_cast< _Tp &&>(__t); }
# 85 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr _Tp &&
# 87 "/usr/include/c++/5/bits/move.h" 3
forward(typename remove_reference< _Tp> ::type &&__t) noexcept
# 88 "/usr/include/c++/5/bits/move.h" 3
{
# 89 "/usr/include/c++/5/bits/move.h" 3
static_assert((!std::is_lvalue_reference< _Tp> ::value), "template argument substituting _Tp is an lvalue reference type");
# 91 "/usr/include/c++/5/bits/move.h" 3
return static_cast< _Tp &&>(__t);
# 92 "/usr/include/c++/5/bits/move.h" 3
}
# 99 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr typename remove_reference< _Tp> ::type &&
# 101 "/usr/include/c++/5/bits/move.h" 3
move(_Tp &&__t) noexcept
# 102 "/usr/include/c++/5/bits/move.h" 3
{ return static_cast< typename remove_reference< _Tp> ::type &&>(__t); }
# 105 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/bits/move.h" 3
struct __move_if_noexcept_cond : public __and_< __not_< is_nothrow_move_constructible< _Tp> > , is_copy_constructible< _Tp> > ::type {
# 108 "/usr/include/c++/5/bits/move.h" 3
};
# 118 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr typename conditional< __move_if_noexcept_cond< _Tp> ::value, const _Tp &, _Tp &&> ::type
# 121 "/usr/include/c++/5/bits/move.h" 3
move_if_noexcept(_Tp &__x) noexcept
# 122 "/usr/include/c++/5/bits/move.h" 3
{ return std::move(__x); }
# 133 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline _Tp *
# 135 "/usr/include/c++/5/bits/move.h" 3
addressof(_Tp &__r) noexcept
# 136 "/usr/include/c++/5/bits/move.h" 3
{ return std::__addressof(__r); }
# 139 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp, class _Up = _Tp> inline _Tp
# 141 "/usr/include/c++/5/bits/move.h" 3
__exchange(_Tp &__obj, _Up &&__new_val)
# 142 "/usr/include/c++/5/bits/move.h" 3
{
# 143 "/usr/include/c++/5/bits/move.h" 3
_Tp __old_val = std::move(__obj);
# 144 "/usr/include/c++/5/bits/move.h" 3
__obj = std::forward< _Up> (__new_val);
# 145 "/usr/include/c++/5/bits/move.h" 3
return __old_val;
# 146 "/usr/include/c++/5/bits/move.h" 3
}
# 150 "/usr/include/c++/5/bits/move.h" 3
}
# 159 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 174 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline void
# 176 "/usr/include/c++/5/bits/move.h" 3
swap(_Tp &__a, _Tp &__b) noexcept(__and_< is_nothrow_move_constructible< _Tp> , is_nothrow_move_assignable< _Tp> > ::value)
# 181 "/usr/include/c++/5/bits/move.h" 3
{
# 185 "/usr/include/c++/5/bits/move.h" 3
_Tp __tmp = std::move(__a);
# 186 "/usr/include/c++/5/bits/move.h" 3
__a = std::move(__b);
# 187 "/usr/include/c++/5/bits/move.h" 3
__b = std::move(__tmp);
# 188 "/usr/include/c++/5/bits/move.h" 3
}
# 193 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp, size_t _Nm> inline void
# 195 "/usr/include/c++/5/bits/move.h" 3
swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) noexcept(noexcept(swap(*(__a), *(__b))))
# 199 "/usr/include/c++/5/bits/move.h" 3
{
# 200 "/usr/include/c++/5/bits/move.h" 3
for (size_t __n = (0); __n < _Nm; ++__n) {
# 201 "/usr/include/c++/5/bits/move.h" 3
swap((__a)[__n], (__b)[__n]); }
# 202 "/usr/include/c++/5/bits/move.h" 3
}
# 206 "/usr/include/c++/5/bits/move.h" 3
}
# 65 "/usr/include/c++/5/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 76 "/usr/include/c++/5/bits/stl_pair.h" 3
struct piecewise_construct_t { };
# 79 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
# 82 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class ...> class tuple;
# 85 "/usr/include/c++/5/bits/stl_pair.h" 3
template< size_t ...> struct _Index_tuple;
# 95 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 96 "/usr/include/c++/5/bits/stl_pair.h" 3
struct pair {
# 98 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef _T1 first_type;
# 99 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef _T2 second_type;
# 101 "/usr/include/c++/5/bits/stl_pair.h" 3
_T1 first;
# 102 "/usr/include/c++/5/bits/stl_pair.h" 3
_T2 second;
# 108 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair() : first(), second()
# 109 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 112 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair(const _T1 &__a, const _T2 &__b) : first(__a), second(__b)
# 113 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 121 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< const _U1 &, _T1> , is_convertible< const _U2 &, _T2> > ::value> ::type> constexpr
# 124 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(const std::pair< _U1, _U2> &__p) : first((__p.first)), second((__p.second))
# 125 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 127 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair(const pair &) = default;
# 128 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair(pair &&) = default;
# 131 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class = typename enable_if< is_convertible< _U1, _T1> ::value> ::type> constexpr
# 133 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(_U1 &&__x, const _T2 &__y) : first(std::forward< _U1> (__x)), second(__y)
# 134 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 136 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U2, class = typename enable_if< is_convertible< _U2, _T2> ::value> ::type> constexpr
# 138 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(const _T1 &__x, _U2 &&__y) : first(__x), second(std::forward< _U2> (__y))
# 139 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 141 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr
# 144 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(_U1 &&__x, _U2 &&__y) : first(std::forward< _U1> (__x)), second(std::forward< _U2> (__y))
# 145 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 147 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr
# 150 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(std::pair< _U1, _U2> &&__p) : first(std::forward< _U1> ((__p.first))), second(std::forward< _U2> ((__p.second)))
# 152 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 154 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class ..._Args1, class ..._Args2> inline pair(piecewise_construct_t, tuple< _Args1...> , tuple< _Args2...> );
# 158 "/usr/include/c++/5/bits/stl_pair.h" 3
pair &operator=(const pair &__p)
# 159 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 160 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = (__p.first);
# 161 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = (__p.second);
# 162 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 163 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 166 "/usr/include/c++/5/bits/stl_pair.h" 3
pair &operator=(pair &&__p) noexcept(__and_< is_nothrow_move_assignable< _T1> , is_nothrow_move_assignable< _T2> > ::value)
# 169 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 170 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = std::forward< first_type> (__p.first);
# 171 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = std::forward< second_type> (__p.second);
# 172 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 173 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 175 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2> pair &
# 177 "/usr/include/c++/5/bits/stl_pair.h" 3
operator=(const std::pair< _U1, _U2> &__p)
# 178 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 179 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = (__p.first);
# 180 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = (__p.second);
# 181 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 182 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 184 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2> pair &
# 186 "/usr/include/c++/5/bits/stl_pair.h" 3
operator=(std::pair< _U1, _U2> &&__p)
# 187 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 188 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = std::forward< _U1> ((__p.first));
# 189 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = std::forward< _U2> ((__p.second));
# 190 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 191 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 194 "/usr/include/c++/5/bits/stl_pair.h" 3
void swap(pair &__p) noexcept(noexcept(swap(first, __p.first)) && noexcept(swap(second, __p.second)))
# 197 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 198 "/usr/include/c++/5/bits/stl_pair.h" 3
using std::swap;
# 199 "/usr/include/c++/5/bits/stl_pair.h" 3
swap(first, __p.first);
# 200 "/usr/include/c++/5/bits/stl_pair.h" 3
swap(second, __p.second);
# 201 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 204 "/usr/include/c++/5/bits/stl_pair.h" 3
private: template< class ..._Args1, size_t ..._Indexes1, class ...
# 205 "/usr/include/c++/5/bits/stl_pair.h" 3
_Args2, size_t ..._Indexes2> inline
# 204 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(tuple< _Args1...> &, tuple< _Args2...> &, _Index_tuple< _Indexes1...> , _Index_tuple< _Indexes2...> );
# 209 "/usr/include/c++/5/bits/stl_pair.h" 3
};
# 212 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 214 "/usr/include/c++/5/bits/stl_pair.h" 3
operator==(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 215 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return ((__x.first) == (__y.first)) && ((__x.second) == (__y.second)); }
# 218 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 220 "/usr/include/c++/5/bits/stl_pair.h" 3
operator<(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 221 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return ((__x.first) < (__y.first)) || ((!((__y.first) < (__x.first))) && ((__x.second) < (__y.second)));
# 222 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 225 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 227 "/usr/include/c++/5/bits/stl_pair.h" 3
operator!=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 228 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__x == __y); }
# 231 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 233 "/usr/include/c++/5/bits/stl_pair.h" 3
operator>(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 234 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return __y < __x; }
# 237 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 239 "/usr/include/c++/5/bits/stl_pair.h" 3
operator<=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 240 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__y < __x); }
# 243 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 245 "/usr/include/c++/5/bits/stl_pair.h" 3
operator>=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 246 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__x < __y); }
# 252 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline void
# 254 "/usr/include/c++/5/bits/stl_pair.h" 3
swap(pair< _T1, _T2> &__x, pair< _T1, _T2> &__y) noexcept(noexcept((__x.swap(__y))))
# 256 "/usr/include/c++/5/bits/stl_pair.h" 3
{ (__x.swap(__y)); }
# 273 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr pair< typename __decay_and_strip< _T1> ::__type, typename __decay_and_strip< _T2> ::__type>
# 276 "/usr/include/c++/5/bits/stl_pair.h" 3
make_pair(_T1 &&__x, _T2 &&__y)
# 277 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 278 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef typename __decay_and_strip< _T1> ::__type __ds_type1;
# 279 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef typename __decay_and_strip< _T2> ::__type __ds_type2;
# 280 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef pair< typename __decay_and_strip< _T1> ::__type, typename __decay_and_strip< _T2> ::__type> __pair_type;
# 281 "/usr/include/c++/5/bits/stl_pair.h" 3
return __pair_type(std::forward< _T1> (__x), std::forward< _T2> (__y));
# 282 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 293 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 70 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 92 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 95 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 99 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 103 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 116 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 117 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 118 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator {
# 121 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 123 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 125 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 127 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 129 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 130 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 143 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator, class = __void_t< > >
# 144 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct __iterator_traits { };
# 146 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 147 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct __iterator_traits< _Iterator, __void_t< typename _Iterator::iterator_category, typename _Iterator::value_type, typename _Iterator::difference_type, typename _Iterator::pointer, typename _Iterator::reference> > {
# 154 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 155 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 156 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 157 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 158 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 159 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 161 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 162 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits : public __iterator_traits< _Iterator> {
# 163 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 177 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 178 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 180 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 181 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 182 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 183 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 184 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 185 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 188 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 189 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 191 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 192 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 193 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 194 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 195 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 196 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 202 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iter> inline typename iterator_traits< _Iter> ::iterator_category
# 204 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
__iterator_category(const _Iter &)
# 205 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return typename iterator_traits< _Iter> ::iterator_category(); }
# 211 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator, bool _HasBase>
# 212 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct _Iter_base {
# 214 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Iterator iterator_type;
# 215 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 216 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return __it; }
# 217 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 219 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 220 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct _Iter_base< _Iterator, true> {
# 222 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_type iterator_type;
# 223 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 224 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return (__it.base()); }
# 225 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 228 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _InIter> using _RequireInputIter = typename enable_if< is_convertible< typename iterator_traits< _InIter> ::iterator_category, input_iterator_tag> ::value> ::type;
# 236 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
}
# 46 "/usr/include/c++/5/debug/debug.h" 3
namespace std {
# 48 "/usr/include/c++/5/debug/debug.h" 3
namespace __debug { }
# 49 "/usr/include/c++/5/debug/debug.h" 3
}
# 54 "/usr/include/c++/5/debug/debug.h" 3
namespace __gnu_debug {
# 56 "/usr/include/c++/5/debug/debug.h" 3
using namespace std::__debug;
# 57 "/usr/include/c++/5/debug/debug.h" 3
}
# 67 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 73 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__distance(_InputIterator __first, _InputIterator __last, input_iterator_tag)
# 75 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 79 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 80 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__first != __last)
# 81 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 82 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__first;
# 83 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__n;
# 84 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 85 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __n;
# 86 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 88 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator> inline typename iterator_traits< _RandomAccessIterator> ::difference_type
# 90 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__distance(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
# 92 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 96 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __last - __first;
# 97 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 112 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 114 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
distance(_InputIterator __first, _InputIterator __last)
# 115 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 117 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return std::__distance(__first, __last, std::__iterator_category(__first));
# 119 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 121 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 123 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_InputIterator &__i, _Distance __n, input_iterator_tag)
# 124 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 127 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
;
# 128 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 129 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__i; }
# 130 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 132 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator, class _Distance> inline void
# 134 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_BidirectionalIterator &__i, _Distance __n, bidirectional_iterator_tag)
# 136 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 140 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
if (__n > 0) {
# 141 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 142 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__i; } } else {
# 144 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n++) {
# 145 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
--__i; } }
# 146 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 148 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator, class _Distance> inline void
# 150 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_RandomAccessIterator &__i, _Distance __n, random_access_iterator_tag)
# 152 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 156 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__i += __n;
# 157 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 171 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 173 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
advance(_InputIterator &__i, _Distance __n)
# 174 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 176 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __d = __n;
# 177 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::__advance(__i, __d, std::__iterator_category(__i));
# 178 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 182 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _ForwardIterator> inline _ForwardIterator
# 184 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
next(_ForwardIterator __x, typename iterator_traits< _ForwardIterator> ::difference_type
# 185 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__n = 1)
# 186 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 187 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::advance(__x, __n);
# 188 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __x;
# 189 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 191 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator> inline _BidirectionalIterator
# 193 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
prev(_BidirectionalIterator __x, typename iterator_traits< _BidirectionalIterator> ::difference_type
# 194 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__n = 1)
# 195 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 196 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::advance(__x, -__n);
# 197 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __x;
# 198 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 203 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 37 "/usr/include/c++/5/bits/ptr_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class = __void_t< > > struct __has_element_type : public false_type { }; template< class _Tp> struct __has_element_type< _Tp, __void_t< typename _Tp::element_type> > : public true_type { };
# 42 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class = __void_t< > > struct __has_difference_type : public false_type { }; template< class _Tp> struct __has_difference_type< _Tp, __void_t< typename _Tp::difference_type> > : public true_type { };
# 44 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, bool = __has_element_type< _Tp> ::value> struct __ptrtr_elt_type;
# 47 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 48 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_elt_type< _Tp, true> {
# 50 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename _Tp::element_type __type;
# 51 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 53 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< template< class , class ...> class _SomePtr, class _Tp, class ...
# 54 "/usr/include/c++/5/bits/ptr_traits.h" 3
_Args>
# 55 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_elt_type< _SomePtr< _Tp, _Args...> , false> {
# 57 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp __type;
# 58 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 60 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, bool = __has_difference_type< _Tp> ::value>
# 61 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_diff_type {
# 63 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename _Tp::difference_type __type;
# 64 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 66 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 67 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_diff_type< _Tp, false> {
# 69 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef ptrdiff_t __type;
# 70 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 72 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr, class _Up>
# 73 "/usr/include/c++/5/bits/ptr_traits.h" 3
class __ptrtr_rebind_helper {
# 75 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr2, class _Up2> static constexpr true_type _S_chk(typename _Ptr2::template rebind< _Up2> *);
# 79 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class , class > static constexpr false_type _S_chk(...);
# 84 "/usr/include/c++/5/bits/ptr_traits.h" 3
public: using __type = __decltype((_S_chk< _Ptr, _Up> (nullptr)));
# 85 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 87 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class _Up, bool
# 88 "/usr/include/c++/5/bits/ptr_traits.h" 3
 = __ptrtr_rebind_helper< _Tp, _Up> ::__type::value> struct __ptrtr_rebind;
# 91 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class _Up>
# 92 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_rebind< _Tp, _Up, true> {
# 94 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename _Tp::template rebind< _Up> __type;
# 95 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 97 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< template< class , class ...> class _SomePtr, class _Up, class
# 98 "/usr/include/c++/5/bits/ptr_traits.h" 3
_Tp, class ..._Args>
# 99 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_rebind< _SomePtr< _Tp, _Args...> , _Up, false> {
# 101 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _SomePtr< _Up, _Args...> __type;
# 102 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 104 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class = typename remove_cv< _Tp> ::type>
# 105 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_not_void {
# 107 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp __type;
# 108 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_not_void< _Tp, void> {
# 113 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __type { };
# 114 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 116 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr>
# 117 "/usr/include/c++/5/bits/ptr_traits.h" 3
class __ptrtr_pointer_to {
# 119 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_elt_type< _Ptr> ::__type __orig_type;
# 120 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_not_void< typename __ptrtr_elt_type< _Ptr> ::__type> ::__type __element_type;
# 123 "/usr/include/c++/5/bits/ptr_traits.h" 3
public: static _Ptr pointer_to(__element_type &__e)
# 124 "/usr/include/c++/5/bits/ptr_traits.h" 3
{ return _Ptr::pointer_to(__e); }
# 125 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 131 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr>
# 132 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct pointer_traits : public __ptrtr_pointer_to< _Ptr> {
# 135 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Ptr pointer;
# 137 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_elt_type< _Ptr> ::__type element_type;
# 139 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_diff_type< _Ptr> ::__type difference_type;
# 141 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Up> using rebind = typename __ptrtr_rebind< _Ptr, _Up> ::__type;
# 143 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 149 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 150 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct pointer_traits< _Tp *> {
# 153 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp *pointer;
# 155 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp element_type;
# 157 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef ptrdiff_t difference_type;
# 159 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Up> using rebind = _Up *;
# 168 "/usr/include/c++/5/bits/ptr_traits.h" 3
static pointer pointer_to(typename __ptrtr_not_void< _Tp> ::__type &__r) noexcept
# 169 "/usr/include/c++/5/bits/ptr_traits.h" 3
{ return std::addressof(__r); }
# 170 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 173 "/usr/include/c++/5/bits/ptr_traits.h" 3
}
# 68 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator>
# 97 "/usr/include/c++/5/bits/stl_iterator.h" 3
class reverse_iterator : public iterator< typename iterator_traits< _Iterator> ::iterator_category, typename iterator_traits< _Iterator> ::value_type, typename iterator_traits< _Iterator> ::difference_type, typename iterator_traits< _Iterator> ::pointer, typename iterator_traits< _Iterator> ::reference> {
# 105 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator current;
# 107 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 110 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 111 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 112 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::pointer pointer;
# 113 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference reference;
# 121 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator() : current() { }
# 127 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit reverse_iterator(iterator_type __x) : current(__x) { }
# 132 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator(const reverse_iterator &__x) : current(__x.current)
# 133 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 139 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 140 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator(const ::std::reverse_iterator< _Iter> &__x) : current((__x.base()))
# 141 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 147 "/usr/include/c++/5/bits/stl_iterator.h" 3
iterator_type base() const
# 148 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return current; }
# 161 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const
# 162 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 163 "/usr/include/c++/5/bits/stl_iterator.h" 3
_Iterator __tmp = current;
# 164 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *(--__tmp);
# 165 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 173 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const
# 174 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return &operator*(); }
# 182 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator++()
# 183 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 184 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(current);
# 185 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 186 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 194 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator++(int)
# 195 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 196 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 197 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(current);
# 198 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 199 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 207 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator--()
# 208 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 209 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(current);
# 210 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 211 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 219 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator--(int)
# 220 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 221 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 222 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(current);
# 223 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 224 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 232 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator+(difference_type __n) const
# 233 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) - __n)); }
# 242 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator+=(difference_type __n)
# 243 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 244 "/usr/include/c++/5/bits/stl_iterator.h" 3
(current) -= __n;
# 245 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 246 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 254 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator-(difference_type __n) const
# 255 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) + __n)); }
# 264 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator-=(difference_type __n)
# 265 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_iterator.h" 3
(current) += __n;
# 267 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 268 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 276 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 277 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *((*this) + __n); }
# 278 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 290 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 292 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 293 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 294 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 296 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 298 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 299 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 300 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 302 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 304 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 305 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 306 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 308 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 310 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 311 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 312 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 314 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 316 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 317 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 318 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 320 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 322 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 323 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 324 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 326 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline typename reverse_iterator< _Iterator> ::difference_type
# 328 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 329 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 330 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 332 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline reverse_iterator< _Iterator>
# 334 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename reverse_iterator< _Iterator> ::difference_type __n, const reverse_iterator< _Iterator> &
# 335 "/usr/include/c++/5/bits/stl_iterator.h" 3
__x)
# 336 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )((__x.base()) - __n)); }
# 340 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 342 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 343 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 344 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 346 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 348 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 349 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 350 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 352 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 354 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 355 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 356 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 358 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 360 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 361 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 362 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 364 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 366 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 367 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 368 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 370 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 372 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 373 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 374 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 376 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline auto
# 380 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 381 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)->__decltype(((__y.base()) - (__x.base())))
# 388 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 414 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 415 "/usr/include/c++/5/bits/stl_iterator.h" 3
class back_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 419 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 423 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 427 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit back_insert_iterator(_Container &__x) : container((&__x)) { }
# 449 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator=(const typename _Container::value_type &__value)
# 450 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 451 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_back(__value));
# 452 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 453 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 456 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator=(typename _Container::value_type &&__value)
# 457 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 458 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_back(std::move(__value)));
# 459 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 460 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 465 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator*()
# 466 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 470 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator++()
# 471 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 475 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator operator++(int)
# 476 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 477 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 490 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container> inline back_insert_iterator< _Container>
# 492 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_inserter(_Container &__x)
# 493 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((back_insert_iterator< _Container> )(__x)); }
# 505 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 506 "/usr/include/c++/5/bits/stl_iterator.h" 3
class front_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 510 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 514 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 517 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit front_insert_iterator(_Container &__x) : container((&__x)) { }
# 539 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator=(const typename _Container::value_type &__value)
# 540 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 541 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_front(__value));
# 542 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 543 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 546 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator=(typename _Container::value_type &&__value)
# 547 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 548 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_front(std::move(__value)));
# 549 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 550 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 555 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator*()
# 556 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 560 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator++()
# 561 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 565 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator operator++(int)
# 566 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 567 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 580 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container> inline front_insert_iterator< _Container>
# 582 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_inserter(_Container &__x)
# 583 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((front_insert_iterator< _Container> )(__x)); }
# 599 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 600 "/usr/include/c++/5/bits/stl_iterator.h" 3
class insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 604 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 605 "/usr/include/c++/5/bits/stl_iterator.h" 3
typename _Container::iterator iter;
# 609 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 615 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator(_Container &__x, typename _Container::iterator __i) : container((&__x)), iter(__i)
# 616 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 651 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator=(const typename _Container::value_type &__value)
# 652 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 653 "/usr/include/c++/5/bits/stl_iterator.h" 3
(iter) = ((container)->insert(iter, __value));
# 654 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(iter);
# 655 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 656 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 659 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator=(typename _Container::value_type &&__value)
# 660 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 661 "/usr/include/c++/5/bits/stl_iterator.h" 3
(iter) = ((container)->insert(iter, std::move(__value)));
# 662 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(iter);
# 663 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 664 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 669 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator*()
# 670 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 674 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator++()
# 675 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 679 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator++(int)
# 680 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 681 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 694 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container, class _Iterator> inline insert_iterator< _Container>
# 696 "/usr/include/c++/5/bits/stl_iterator.h" 3
inserter(_Container &__x, _Iterator __i)
# 697 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 698 "/usr/include/c++/5/bits/stl_iterator.h" 3
return insert_iterator< _Container> (__x, (typename _Container::iterator)__i);
# 700 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 705 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 707 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 718 "/usr/include/c++/5/bits/stl_iterator.h" 3
using std::iterator_traits;
# 719 "/usr/include/c++/5/bits/stl_iterator.h" 3
using std::iterator;
# 720 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 721 "/usr/include/c++/5/bits/stl_iterator.h" 3
class __normal_iterator {
# 724 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 726 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef std::iterator_traits< _Iterator> __traits_type;
# 729 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 730 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::iterator_category iterator_category;
# 731 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::value_type value_type;
# 732 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::difference_type difference_type;
# 733 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::reference reference;
# 734 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::pointer pointer;
# 736 "/usr/include/c++/5/bits/stl_iterator.h" 3
constexpr __normal_iterator() noexcept : _M_current(_Iterator())
# 737 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 740 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit __normal_iterator(const _Iterator &__i) noexcept : _M_current(__i)
# 741 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 744 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 745 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator(const __gnu_cxx::__normal_iterator< _Iter, typename __enable_if< std::__are_same< _Iter, typename _Container::pointer> ::__value, _Container> ::__type> &
# 748 "/usr/include/c++/5/bits/stl_iterator.h" 3
__i) noexcept : _M_current((__i.base()))
# 749 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 753 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const noexcept
# 754 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *(_M_current); }
# 757 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const noexcept
# 758 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 761 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator++() noexcept
# 762 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 763 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 764 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 765 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 768 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator++(int) noexcept
# 769 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)++)); }
# 773 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator--() noexcept
# 774 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 775 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 776 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 777 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 780 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator--(int) noexcept
# 781 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)--)); }
# 785 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const noexcept
# 786 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (_M_current)[__n]; }
# 789 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator+=(difference_type __n) noexcept
# 790 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ (_M_current) += __n; return *this; }
# 793 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator+(difference_type __n) const noexcept
# 794 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) + __n)); }
# 797 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator-=(difference_type __n) noexcept
# 798 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ (_M_current) -= __n; return *this; }
# 801 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator-(difference_type __n) const noexcept
# 802 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) - __n)); }
# 805 "/usr/include/c++/5/bits/stl_iterator.h" 3
const _Iterator &base() const noexcept
# 806 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 807 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 818 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 820 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 821 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 823 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 825 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 827 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 828 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 830 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 832 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 834 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 835 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 837 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 839 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 841 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 842 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 844 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 847 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 849 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 850 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 852 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 854 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 856 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 857 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 859 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 861 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 863 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 864 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 866 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 868 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 870 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 871 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 873 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 875 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 877 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 878 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 880 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 882 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 884 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 885 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 887 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 889 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 891 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 892 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 894 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 896 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 898 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 899 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 901 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 907 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline auto
# 911 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 912 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept->__decltype(((__lhs.base()) - (__rhs.base())))
# 919 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 921 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline typename __normal_iterator< _Iterator, _Container> ::difference_type
# 923 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 924 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 926 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 928 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline __normal_iterator< _Iterator, _Container>
# 930 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename __normal_iterator< _Iterator, _Container> ::difference_type
# 931 "/usr/include/c++/5/bits/stl_iterator.h" 3
__n, const __normal_iterator< _Iterator, _Container> &__i) noexcept
# 933 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator< _Iterator, _Container> )((__i.base()) + __n)); }
# 936 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 940 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 958 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator>
# 959 "/usr/include/c++/5/bits/stl_iterator.h" 3
class move_iterator {
# 962 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 964 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 965 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference __base_ref;
# 968 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 969 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::iterator_category iterator_category;
# 970 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::value_type value_type;
# 971 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 973 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef _Iterator pointer;
# 978 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename conditional< is_reference< typename iterator_traits< _Iterator> ::reference> ::value, typename remove_reference< typename iterator_traits< _Iterator> ::reference> ::type &&, typename iterator_traits< _Iterator> ::reference> ::type reference;
# 980 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator() : _M_current()
# 981 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 984 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit move_iterator(iterator_type __i) : _M_current(__i)
# 985 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 987 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 988 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator(const std::move_iterator< _Iter> &__i) : _M_current((__i.base()))
# 989 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 992 "/usr/include/c++/5/bits/stl_iterator.h" 3
iterator_type base() const
# 993 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 996 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const
# 997 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return static_cast< reference>(*(_M_current)); }
# 1000 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const
# 1001 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 1004 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator++()
# 1005 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1006 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 1007 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1008 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1011 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator++(int)
# 1012 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1013 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator __tmp = *this;
# 1014 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 1015 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 1016 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1019 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator--()
# 1020 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1021 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 1022 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1023 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1026 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator--(int)
# 1027 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1028 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator __tmp = *this;
# 1029 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 1030 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 1031 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1034 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator+(difference_type __n) const
# 1035 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((move_iterator)((_M_current) + __n)); }
# 1038 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator+=(difference_type __n)
# 1039 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1040 "/usr/include/c++/5/bits/stl_iterator.h" 3
(_M_current) += __n;
# 1041 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1042 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1045 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator-(difference_type __n) const
# 1046 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((move_iterator)((_M_current) - __n)); }
# 1049 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator-=(difference_type __n)
# 1050 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1051 "/usr/include/c++/5/bits/stl_iterator.h" 3
(_M_current) -= __n;
# 1052 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1053 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1056 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 1057 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return std::move((_M_current)[__n]); }
# 1058 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 1063 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1065 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1066 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1067 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 1069 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1071 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1072 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1073 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 1075 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1077 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1078 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1079 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 1081 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1083 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1084 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1085 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 1087 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1089 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1090 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1091 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) < (__y.base()); }
# 1093 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1095 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1096 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1097 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) < (__y.base()); }
# 1099 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1101 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1102 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1103 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 1105 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1107 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1108 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1109 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 1111 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1113 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1114 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1115 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 1117 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1119 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1120 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1121 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 1123 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1125 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1126 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1127 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 1129 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1131 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1132 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1133 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 1136 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline auto
# 1138 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1139 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)->__decltype(((__x.base()) - (__y.base())))
# 1141 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) - (__y.base()); }
# 1143 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline auto
# 1145 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1146 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)->__decltype(((__x.base()) - (__y.base())))
# 1148 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) - (__y.base()); }
# 1150 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline move_iterator< _Iterator>
# 1152 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename move_iterator< _Iterator> ::difference_type __n, const move_iterator< _Iterator> &
# 1153 "/usr/include/c++/5/bits/stl_iterator.h" 3
__x)
# 1154 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __x + __n; }
# 1156 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline move_iterator< _Iterator>
# 1158 "/usr/include/c++/5/bits/stl_iterator.h" 3
make_move_iterator(_Iterator __i)
# 1159 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((move_iterator< _Iterator> )(__i)); }
# 1161 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _ReturnType = typename conditional< __move_if_noexcept_cond< typename iterator_traits< _Iterator> ::value_type> ::value, _Iterator, move_iterator< _Iterator> > ::type> inline _ReturnType
# 1166 "/usr/include/c++/5/bits/stl_iterator.h" 3
__make_move_if_noexcept_iterator(_Iterator __i)
# 1167 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (_ReturnType)__i; }
# 1172 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 33 "/usr/include/c++/5/bits/predefined_ops.h" 3
namespace __gnu_cxx {
# 35 "/usr/include/c++/5/bits/predefined_ops.h" 3
namespace __ops {
# 37 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_less_iter {
# 39 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 42 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 43 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it1) < (*__it2); }
# 44 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 47 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_iter __iter_less_iter()
# 48 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_iter(); }
# 50 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_less_val {
# 52 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 54 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 55 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) < __val; }
# 56 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 59 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_less_val()
# 60 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 63 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_comp_val(_Iter_less_iter)
# 64 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 66 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Val_less_iter {
# 68 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 70 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it) const
# 71 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return __val < (*__it); }
# 72 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 75 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Val_less_iter __val_less_iter()
# 76 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 79 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Val_less_iter __val_comp_iter(_Iter_less_iter)
# 80 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 82 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equal_to_iter {
# 84 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 86 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 87 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it1) == (*__it2); }
# 88 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 91 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_iter __iter_equal_to_iter()
# 92 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_iter(); }
# 94 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equal_to_val {
# 96 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 98 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 99 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) == __val; }
# 100 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 103 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_equal_to_val()
# 104 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 107 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_comp_val(_Iter_equal_to_iter)
# 108 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 110 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 111 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_iter {
# 113 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 115 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_iter(_Compare __comp) : _M_comp(__comp)
# 117 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 119 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 122 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2)
# 123 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it1, *__it2); }
# 124 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 126 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_iter< _Compare>
# 129 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Compare __comp)
# 130 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_iter< _Compare> )(__comp)); }
# 132 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 133 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_val {
# 135 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 137 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_val(_Compare __comp) : _M_comp(__comp)
# 139 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 141 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 143 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val)
# 144 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, __val); }
# 145 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 147 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 149 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp)
# 150 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )(__comp)); }
# 152 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 154 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Iter_comp_iter< _Compare> __comp)
# 155 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )((__comp._M_comp))); }
# 157 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 158 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Val_comp_iter {
# 160 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 162 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Val_comp_iter(_Compare __comp) : _M_comp(__comp)
# 164 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 166 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 168 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it)
# 169 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(__val, *__it); }
# 170 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 172 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 174 "/usr/include/c++/5/bits/predefined_ops.h" 3
__val_comp_iter(_Compare __comp)
# 175 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )(__comp)); }
# 177 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 179 "/usr/include/c++/5/bits/predefined_ops.h" 3
__val_comp_iter(_Iter_comp_iter< _Compare> __comp)
# 180 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )((__comp._M_comp))); }
# 182 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value>
# 183 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equals_val {
# 185 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Value &_M_value;
# 187 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_equals_val(_Value &__value) : _M_value(__value)
# 189 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 191 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 193 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 194 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) == (_M_value); }
# 195 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 197 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value> inline _Iter_equals_val< _Value>
# 199 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_equals_val(_Value &__val)
# 200 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_equals_val< _Value> )(__val)); }
# 202 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1>
# 203 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equals_iter {
# 205 "/usr/include/c++/5/bits/predefined_ops.h" 3
typename std::iterator_traits< _Iterator1> ::reference _M_ref;
# 207 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_equals_iter(_Iterator1 __it1) : _M_ref(*__it1)
# 209 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 211 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 213 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 214 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it2) == (_M_ref); }
# 215 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 217 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> inline _Iter_equals_iter< _Iterator>
# 219 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)
# 220 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_equals_iter< _Iterator> )(__it)); }
# 222 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate>
# 223 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_pred {
# 225 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 227 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_pred(_Predicate __pred) : _M_pred(__pred)
# 229 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 231 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 233 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 234 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_pred)(*__it); }
# 235 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 237 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_pred< _Predicate>
# 239 "/usr/include/c++/5/bits/predefined_ops.h" 3
__pred_iter(_Predicate __pred)
# 240 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_pred< _Predicate> )(__pred)); }
# 242 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Value>
# 243 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_to_val {
# 245 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 246 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Value &_M_value;
# 248 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_to_val(_Compare __comp, _Value &__value) : _M_comp(__comp), _M_value(__value)
# 250 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 252 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 254 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 255 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, _M_value); }
# 256 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 258 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Value> _Iter_comp_to_val< _Compare, _Value>
# 260 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp, _Value &__val)
# 261 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_comp_to_val< _Compare, _Value> (__comp, __val); }
# 263 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator1>
# 264 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_to_iter {
# 266 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 267 "/usr/include/c++/5/bits/predefined_ops.h" 3
typename std::iterator_traits< _Iterator1> ::reference _M_ref;
# 269 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1) : _M_comp(__comp), _M_ref(*__it1)
# 271 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 273 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 275 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 276 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it2, _M_ref); }
# 277 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 279 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator> inline _Iter_comp_to_iter< _Compare, _Iterator>
# 281 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_comp_iter< _Compare> __comp, _Iterator __it)
# 282 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_comp_to_iter< _Compare, _Iterator> ((__comp._M_comp), __it); }
# 284 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate>
# 285 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_negate {
# 287 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 289 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_negate(_Predicate __pred) : _M_pred(__pred)
# 291 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 293 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 295 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 296 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return !((bool)(_M_pred)(*__it)); }
# 297 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 299 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_negate< _Predicate>
# 301 "/usr/include/c++/5/bits/predefined_ops.h" 3
__negate(_Iter_pred< _Predicate> __pred)
# 302 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_negate< _Predicate> )((__pred._M_pred))); }
# 304 "/usr/include/c++/5/bits/predefined_ops.h" 3
}
# 305 "/usr/include/c++/5/bits/predefined_ops.h" 3
}
# 73 "/usr/include/c++/5/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline void
# 120 "/usr/include/c++/5/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 121 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 148 "/usr/include/c++/5/bits/stl_algobase.h" 3
swap(*__a, *__b);
# 150 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator2
# 166 "/usr/include/c++/5/bits/stl_algobase.h" 3
swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 167 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2)
# 168 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 174 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 176 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 177 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::iter_swap(__first1, __first2); }
# 178 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first2;
# 179 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 192 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 195 "/usr/include/c++/5/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b)
# 196 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 200 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__b < __a) {
# 201 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 202 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 203 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 216 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 219 "/usr/include/c++/5/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b)
# 220 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 224 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__a < __b) {
# 225 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 226 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 227 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 240 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 243 "/usr/include/c++/5/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 244 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 246 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__b, __a)) {
# 247 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 248 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 249 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 262 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 265 "/usr/include/c++/5/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 266 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 268 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__a, __b)) {
# 269 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 270 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 271 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 275 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator>
# 276 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct _Niter_base : public _Iter_base< _Iterator, __is_normal_iterator< _Iterator> ::__value> {
# 278 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 280 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Niter_base< _Iterator> ::iterator_type
# 282 "/usr/include/c++/5/bits/stl_algobase.h" 3
__niter_base(_Iterator __it)
# 283 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return std::_Niter_base< _Iterator> ::_S_base(__it); }
# 286 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator>
# 287 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct _Miter_base : public _Iter_base< _Iterator, __is_move_iterator< _Iterator> ::__value> {
# 289 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 291 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Miter_base< _Iterator> ::iterator_type
# 293 "/usr/include/c++/5/bits/stl_algobase.h" 3
__miter_base(_Iterator __it)
# 294 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return std::_Miter_base< _Iterator> ::_S_base(__it); }
# 302 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool , bool , class >
# 303 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move {
# 305 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 307 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 308 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 309 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), (++__first)) {
# 310 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = (*__first); }
# 311 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 312 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 313 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 316 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Category>
# 317 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move< true, false, _Category> {
# 319 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 321 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 322 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 323 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), (++__first)) {
# 324 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = std::move(*__first); }
# 325 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 326 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 327 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 331 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 333 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 335 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 336 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 337 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 338 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 339 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 340 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = (*__first);
# 341 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 342 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__result;
# 343 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 344 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 345 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 350 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move< true, false, random_access_iterator_tag> {
# 352 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 354 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 355 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 356 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 357 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 358 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 359 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = std::move(*__first);
# 360 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 361 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__result;
# 362 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 363 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 364 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 365 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 368 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 369 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 371 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 373 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 374 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 376 "/usr/include/c++/5/bits/stl_algobase.h" 3
using __assignable = conditional< _IsMove, is_move_assignable< _Tp> , is_copy_assignable< _Tp> > ;
# 380 "/usr/include/c++/5/bits/stl_algobase.h" 3
static_assert((__assignable::type::value), "type is not assignable");
# 382 "/usr/include/c++/5/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 383 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (_Num) {
# 384 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memmove(__result, __first, sizeof(_Tp) * _Num); }
# 385 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result + _Num;
# 386 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 387 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 389 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 391 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_a(_II __first, _II __last, _OI __result)
# 392 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 393 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::value_type _ValueTypeI;
# 394 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _OI> ::value_type _ValueTypeO;
# 395 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::iterator_category _Category;
# 396 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueTypeI) && __is_pointer< _II> ::__value && __is_pointer< _OI> ::__value && __are_same< typename iterator_traits< _II> ::value_type, typename iterator_traits< _OI> ::value_type> ::__value);
# 401 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move< _IsMove, __simple, typename iterator_traits< _II> ::iterator_category> ::__copy_m(__first, __last, __result);
# 403 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 407 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 410 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 413 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 416 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 422 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 428 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _CharT *);
# 434 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 436 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_a2(_II __first, _II __last, _OI __result)
# 437 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 438 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_OI)std::__copy_move_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 441 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 460 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 462 "/usr/include/c++/5/bits/stl_algobase.h" 3
copy(_II __first, _II __last, _OI __result)
# 463 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 468 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 470 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_a2< __is_move_iterator< _II> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 473 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 493 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 495 "/usr/include/c++/5/bits/stl_algobase.h" 3
move(_II __first, _II __last, _OI __result)
# 496 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 501 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 503 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_a2< true> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 505 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 512 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool , bool , class >
# 513 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 515 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 517 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 518 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 519 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__first != __last) {
# 520 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 521 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 522 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 523 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 526 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Category>
# 527 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward< true, false, _Category> {
# 529 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 531 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 532 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 533 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__first != __last) {
# 534 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = std::move(*(--__last)); }
# 535 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 536 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 537 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 541 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 543 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 545 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 546 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 547 "/usr/include/c++/5/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n;
# 548 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__n = (__last - __first); __n > 0; --__n) {
# 549 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 550 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 551 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 552 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 556 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< true, false, random_access_iterator_tag> {
# 558 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 560 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 561 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 562 "/usr/include/c++/5/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n;
# 563 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__n = (__last - __first); __n > 0; --__n) {
# 564 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = std::move(*(--__last)); }
# 565 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 566 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 567 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 570 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 571 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 573 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 575 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 576 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 578 "/usr/include/c++/5/bits/stl_algobase.h" 3
using __assignable = conditional< _IsMove, is_move_assignable< _Tp> , is_copy_assignable< _Tp> > ;
# 582 "/usr/include/c++/5/bits/stl_algobase.h" 3
static_assert((__assignable::type::value), "type is not assignable");
# 584 "/usr/include/c++/5/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 585 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (_Num) {
# 586 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num); }
# 587 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result - _Num;
# 588 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 589 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 591 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 593 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
# 594 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 595 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::value_type _ValueType1;
# 596 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI2> ::value_type _ValueType2;
# 597 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::iterator_category _Category;
# 598 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueType1) && __is_pointer< _BI1> ::__value && __is_pointer< _BI2> ::__value && __are_same< typename iterator_traits< _BI1> ::value_type, typename iterator_traits< _BI2> ::value_type> ::__value);
# 603 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward< _IsMove, __simple, typename iterator_traits< _BI1> ::iterator_category> ::__copy_move_b(__first, __last, __result);
# 607 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 609 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 611 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
# 612 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 613 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_BI2)std::__copy_move_backward_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 616 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 636 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 638 "/usr/include/c++/5/bits/stl_algobase.h" 3
copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 639 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 648 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward_a2< __is_move_iterator< _BI1> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 651 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 672 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 674 "/usr/include/c++/5/bits/stl_algobase.h" 3
move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 675 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 682 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 684 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward_a2< true> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 687 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 694 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, void> ::__type
# 697 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 698 "/usr/include/c++/5/bits/stl_algobase.h" 3
__value)
# 699 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 700 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 701 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __value; }
# 702 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 704 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, void> ::__type
# 707 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 708 "/usr/include/c++/5/bits/stl_algobase.h" 3
__value)
# 709 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 710 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 711 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 712 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 713 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 716 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, void> ::__type
# 719 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_Tp *__first, _Tp *__last, const _Tp &__c)
# 720 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 721 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __c;
# 722 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = __last - __first) {
# 723 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memset(__first, static_cast< unsigned char>(__tmp), __len); }
# 724 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 738 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 740 "/usr/include/c++/5/bits/stl_algobase.h" 3
fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value)
# 741 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 745 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 747 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__fill_a(std::__niter_base(__first), std::__niter_base(__last), __value);
# 749 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 751 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 754 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 755 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 756 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 758 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __value; }
# 759 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 760 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 762 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 765 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 766 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 767 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 768 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 770 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 771 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 772 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 774 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, _Tp *> ::__type
# 777 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_Tp *__first, _Size __n, const _Tp &__c)
# 778 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 779 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__fill_a(__first, __first + __n, __c);
# 780 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first + __n;
# 781 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 798 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OI, class _Size, class _Tp> inline _OI
# 800 "/usr/include/c++/5/bits/stl_algobase.h" 3
fill_n(_OI __first, _Size __n, const _Tp &__value)
# 801 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 805 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_OI)std::__fill_n_a(std::__niter_base(__first), __n, __value);
# 806 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 808 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 809 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __equal {
# 811 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool
# 813 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 814 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 815 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 816 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (!((*__first1) == (*__first2))) {
# 817 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; } }
# 818 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 819 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 820 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 823 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 825 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static bool
# 827 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2)
# 828 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 829 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = __last1 - __first1) {
# 830 "/usr/include/c++/5/bits/stl_algobase.h" 3
return !(__builtin_memcmp(__first1, __first2, sizeof(_Tp) * __len)); }
# 831 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 832 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 833 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 835 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 837 "/usr/include/c++/5/bits/stl_algobase.h" 3
__equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
# 838 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 839 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 840 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 841 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = ((__is_integer< typename iterator_traits< _II1> ::value_type> ::__value || __is_pointer< typename iterator_traits< _II1> ::value_type> ::__value) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value && __are_same< typename iterator_traits< _II1> ::value_type, typename iterator_traits< _II2> ::value_type> ::__value);
# 847 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__equal< __simple> ::equal(__first1, __last1, __first2);
# 848 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class , class >
# 851 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __lc_rai {
# 853 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static _II1
# 855 "/usr/include/c++/5/bits/stl_algobase.h" 3
__newlast1(_II1, _II1 __last1, _II2, _II2)
# 856 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return __last1; }
# 858 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II> static bool
# 860 "/usr/include/c++/5/bits/stl_algobase.h" 3
__cnd2(_II __first, _II __last)
# 861 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return __first != __last; }
# 862 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 865 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 867 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _RAI1, class _RAI2> static _RAI1
# 869 "/usr/include/c++/5/bits/stl_algobase.h" 3
__newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2
# 870 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _RAI2 __last2)
# 871 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 873 "/usr/include/c++/5/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI1> ::difference_type __diff1 = __last1 - __first1;
# 875 "/usr/include/c++/5/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI2> ::difference_type __diff2 = __last2 - __first2;
# 876 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (__diff2 < __diff1) ? __first1 + __diff2 : __last1;
# 877 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 879 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _RAI> static bool
# 881 "/usr/include/c++/5/bits/stl_algobase.h" 3
__cnd2(_RAI, _RAI)
# 882 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return true; }
# 883 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 885 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> bool
# 887 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare_impl(_II1 __first1, _II1 __last1, _II2
# 888 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare
# 889 "/usr/include/c++/5/bits/stl_algobase.h" 3
__comp)
# 890 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 891 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::iterator_category _Category1;
# 892 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::iterator_category _Category2;
# 893 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef __lc_rai< typename iterator_traits< _II1> ::iterator_category, typename iterator_traits< _II2> ::iterator_category> __rai_type;
# 895 "/usr/include/c++/5/bits/stl_algobase.h" 3
__last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
# 896 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && __rai_type::__cnd2(__first2, __last2); (++__first1), (++__first2))
# 898 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 899 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__first1, __first2)) {
# 900 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true; }
# 901 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__first2, __first1)) {
# 902 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; }
# 903 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 904 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 != __last2);
# 905 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 907 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 908 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 910 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool __lc(_II1, _II1, _II2, _II2);
# 912 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 914 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 915 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> bool
# 918 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare< _BoolType> ::__lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 919 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 920 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_less_iter());
# 923 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 926 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 928 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static bool
# 930 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lc(const _Tp *__first1, const _Tp *__last1, const _Up *
# 931 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, const _Up *__last2)
# 932 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 933 "/usr/include/c++/5/bits/stl_algobase.h" 3
const size_t __len1 = __last1 - __first1;
# 934 "/usr/include/c++/5/bits/stl_algobase.h" 3
const size_t __len2 = __last2 - __first2;
# 935 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = std::min(__len1, __len2)) {
# 936 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (int __result = __builtin_memcmp(__first1, __first2, __len)) {
# 937 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result < 0; } }
# 938 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __len1 < __len2;
# 939 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 940 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 942 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 944 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2
# 945 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 946 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 947 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 948 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 949 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_byte< typename iterator_traits< _II1> ::value_type> ::__value && __is_byte< typename iterator_traits< _II2> ::value_type> ::__value && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II1> ::value_type> ::__is_signed) && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II2> ::value_type> ::__is_signed) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value);
# 956 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare< __simple> ::__lc(__first1, __last1, __first2, __last2);
# 958 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 960 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> _ForwardIterator
# 962 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 963 "/usr/include/c++/5/bits/stl_algobase.h" 3
__val, _Compare __comp)
# 964 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 966 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 968 "/usr/include/c++/5/bits/stl_algobase.h" 3
_DistanceType __len = std::distance(__first, __last);
# 970 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__len > 0)
# 971 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 972 "/usr/include/c++/5/bits/stl_algobase.h" 3
_DistanceType __half = __len >> 1;
# 973 "/usr/include/c++/5/bits/stl_algobase.h" 3
_ForwardIterator __middle = __first;
# 974 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::advance(__middle, __half);
# 975 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__middle, __val))
# 976 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 977 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first = __middle;
# 978 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 979 "/usr/include/c++/5/bits/stl_algobase.h" 3
__len = ((__len - __half) - 1);
# 980 "/usr/include/c++/5/bits/stl_algobase.h" 3
} else {
# 982 "/usr/include/c++/5/bits/stl_algobase.h" 3
__len = __half; }
# 983 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 984 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 985 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 998 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline _ForwardIterator
# 1000 "/usr/include/c++/5/bits/stl_algobase.h" 3
lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 1001 "/usr/include/c++/5/bits/stl_algobase.h" 3
__val)
# 1002 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1007 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1009 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lower_bound(__first, __last, __val, __gnu_cxx::__ops::__iter_less_val());
# 1011 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1016 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr int __lg(int __n)
# 1017 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1020 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr unsigned __lg(unsigned __n)
# 1021 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1024 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr long __lg(long __n)
# 1025 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1028 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr unsigned long __lg(unsigned long __n)
# 1029 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1032 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr long long __lg(long long __n)
# 1033 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1036 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr unsigned long long __lg(unsigned long long __n)
# 1037 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1055 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1057 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 1058 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1065 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1067 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__equal_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2));
# 1070 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1087 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool
# 1089 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_IIter1 __first1, _IIter1 __last1, _IIter2
# 1090 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1091 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1095 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1097 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 1098 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (!((bool)__binary_pred(*__first1, *__first2))) {
# 1099 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; } }
# 1100 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 1101 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1215 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1217 "/usr/include/c++/5/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1218 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1219 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1229 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1230 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1232 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2), std::__niter_base(__last2));
# 1236 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1251 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> inline bool
# 1253 "/usr/include/c++/5/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1254 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare __comp)
# 1255 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1259 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1260 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1262 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_comp_iter(__comp));
# 1265 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1268 "/usr/include/c++/5/bits/stl_algobase.h" 3
_BinaryPredicate> pair< _InputIterator1, _InputIterator2>
# 1270 "/usr/include/c++/5/bits/stl_algobase.h" 3
__mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1271 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1272 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1273 "/usr/include/c++/5/bits/stl_algobase.h" 3
while ((__first1 != __last1) && __binary_pred(__first1, __first2))
# 1274 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1275 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first1;
# 1276 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first2;
# 1277 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1278 "/usr/include/c++/5/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1279 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1294 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2> inline pair< _InputIterator1, _InputIterator2>
# 1296 "/usr/include/c++/5/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1297 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2)
# 1298 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1305 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1307 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_equal_to_iter());
# 1309 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1327 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1328 "/usr/include/c++/5/bits/stl_algobase.h" 3
_BinaryPredicate> inline pair< _InputIterator1, _InputIterator2>
# 1330 "/usr/include/c++/5/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1331 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1332 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1336 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1338 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
# 1340 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1428 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 44 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 48 "/usr/include/stdio.h" 3
typedef _IO_FILE FILE;
# 64 "/usr/include/stdio.h" 3
typedef _IO_FILE __FILE;
# 40 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 357 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned wint_t;
# 94 "/usr/include/wchar.h" 3
typedef
# 83 "/usr/include/wchar.h" 3
struct {
# 84 "/usr/include/wchar.h" 3
int __count;
# 86 "/usr/include/wchar.h" 3
union {
# 88 "/usr/include/wchar.h" 3
unsigned __wch;
# 92 "/usr/include/wchar.h" 3
char __wchb[4];
# 93 "/usr/include/wchar.h" 3
} __value;
# 94 "/usr/include/wchar.h" 3
} __mbstate_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 132 "/usr/include/wchar.h" 3
extern "C" {
# 137 "/usr/include/wchar.h" 3
struct tm;
# 147 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 149 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 152 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 154 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 157 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 159 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 161 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 163 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 166 "/usr/include/wchar.h" 3
extern int wcscmp(const wchar_t * __s1, const wchar_t * __s2) throw()
# 167 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 169 "/usr/include/wchar.h" 3
extern int wcsncmp(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw()
# 170 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 175 "/usr/include/wchar.h" 3
extern int wcscasecmp(const wchar_t * __s1, const wchar_t * __s2) throw();
# 178 "/usr/include/wchar.h" 3
extern int wcsncasecmp(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw();
# 185 "/usr/include/wchar.h" 3
extern int wcscasecmp_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 188 "/usr/include/wchar.h" 3
extern int wcsncasecmp_l(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n, __locale_t __loc) throw();
# 195 "/usr/include/wchar.h" 3
extern int wcscoll(const wchar_t * __s1, const wchar_t * __s2) throw();
# 199 "/usr/include/wchar.h" 3
extern ::size_t wcsxfrm(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw();
# 209 "/usr/include/wchar.h" 3
extern int wcscoll_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 215 "/usr/include/wchar.h" 3
extern ::size_t wcsxfrm_l(wchar_t * __s1, const wchar_t * __s2, ::size_t __n, __locale_t __loc) throw();
# 219 "/usr/include/wchar.h" 3
extern wchar_t *wcsdup(const wchar_t * __s) throw() __attribute((__malloc__));
# 225 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcschr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 226 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 227 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcschr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 228 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 235 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsrchr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 236 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 237 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsrchr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 238 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 248 "/usr/include/wchar.h" 3
extern wchar_t *wcschrnul(const wchar_t * __s, wchar_t __wc) throw()
# 249 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 255 "/usr/include/wchar.h" 3
extern ::size_t wcscspn(const wchar_t * __wcs, const wchar_t * __reject) throw()
# 256 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 259 "/usr/include/wchar.h" 3
extern ::size_t wcsspn(const wchar_t * __wcs, const wchar_t * __accept) throw()
# 260 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 263 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcspbrk(wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 264 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 265 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcspbrk(const wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 267 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 274 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsstr(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 275 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 276 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsstr(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 278 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 285 "/usr/include/wchar.h" 3
extern wchar_t *wcstok(wchar_t *__restrict__ __s, const wchar_t *__restrict__ __delim, wchar_t **__restrict__ __ptr) throw();
# 290 "/usr/include/wchar.h" 3
extern ::size_t wcslen(const wchar_t * __s) throw() __attribute((__pure__));
# 296 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcswcs(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 297 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 298 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcswcs(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 300 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 309 "/usr/include/wchar.h" 3
extern ::size_t wcsnlen(const wchar_t * __s, ::size_t __maxlen) throw()
# 310 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 317 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wmemchr(wchar_t * __s, wchar_t __c, ::size_t __n) throw() __asm__("wmemchr")
# 318 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 319 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wmemchr(const wchar_t * __s, wchar_t __c, ::size_t __n) throw() __asm__("wmemchr")
# 321 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 328 "/usr/include/wchar.h" 3
extern int wmemcmp(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw()
# 329 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 332 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw();
# 337 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmemmove(wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw();
# 341 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmemset(wchar_t * __s, wchar_t __c, ::size_t __n) throw();
# 347 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw();
# 356 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wint_t btowc(int __c) throw();
# 360 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int wctob(wint_t __c) throw();
# 364 "/usr/include/wchar.h" 3
extern int mbsinit(const mbstate_t * __ps) throw() __attribute((__pure__));
# 368 "/usr/include/wchar.h" 3
extern ::size_t mbrtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __p) throw();
# 373 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline ::size_t wcrtomb(char *__restrict__ __s, wchar_t __wc, mbstate_t *__restrict__ __ps) throw();
# 377 "/usr/include/wchar.h" 3
extern ::size_t __mbrlen(const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __ps) throw();
# 379 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline ::size_t mbrlen(const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __ps) throw();
# 389 "/usr/include/wchar.h" 3
extern wint_t __btowc_alias(int __c) __asm__("btowc");
# 390 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline wint_t
# 391 "/usr/include/wchar.h" 3
 __attribute((__leaf__)) btowc(int __c) throw()
# 392 "/usr/include/wchar.h" 3
{ return ((0) && (__c >= ('\000')) && (__c <= ('\177'))) ? (wint_t)__c : __btowc_alias(__c);
# 393 "/usr/include/wchar.h" 3
}
# 395 "/usr/include/wchar.h" 3
extern int __wctob_alias(wint_t __c) __asm__("wctob");
# 396 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline int
# 397 "/usr/include/wchar.h" 3
 __attribute((__leaf__)) wctob(wint_t __wc) throw()
# 398 "/usr/include/wchar.h" 3
{ return ((0) && (__wc >= (L'\x0')) && (__wc <= (L'\x7f'))) ? (int)__wc : __wctob_alias(__wc);
# 399 "/usr/include/wchar.h" 3
}
# 401 "/usr/include/wchar.h" 3
__attribute((__gnu_inline__)) extern inline ::size_t
# 402 "/usr/include/wchar.h" 3
 __attribute((__leaf__)) mbrlen(const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __ps) throw()
# 404 "/usr/include/wchar.h" 3
{ return (__ps != (__null)) ? mbrtowc(__null, __s, __n, __ps) : __mbrlen(__s, __n, __null);
# 405 "/usr/include/wchar.h" 3
}
# 411 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline ::size_t mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 417 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline ::size_t wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 426 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline ::size_t mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __nmc, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 432 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline ::size_t wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __nwc, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 442 "/usr/include/wchar.h" 3
extern int wcwidth(wchar_t __c) throw();
# 446 "/usr/include/wchar.h" 3
extern int wcswidth(const wchar_t * __s, ::size_t __n) throw();
# 453 "/usr/include/wchar.h" 3
extern double wcstod(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 460 "/usr/include/wchar.h" 3
extern float wcstof(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 462 "/usr/include/wchar.h" 3
extern long double wcstold(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 471 "/usr/include/wchar.h" 3
extern long wcstol(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 476 "/usr/include/wchar.h" 3
extern unsigned long wcstoul(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 486 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 493 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 503 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 510 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstouq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 533 "/usr/include/wchar.h" 3
extern long wcstol_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 537 "/usr/include/wchar.h" 3
extern unsigned long wcstoul_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 542 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 547 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 552 "/usr/include/wchar.h" 3
extern double wcstod_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 556 "/usr/include/wchar.h" 3
extern float wcstof_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 560 "/usr/include/wchar.h" 3
extern long double wcstold_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 569 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw();
# 574 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw();
# 583 "/usr/include/wchar.h" 3
extern __FILE *open_wmemstream(wchar_t ** __bufloc, ::size_t * __sizeloc) throw();
# 590 "/usr/include/wchar.h" 3
extern int fwide(__FILE * __fp, int __mode) throw();
# 597 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 604 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int wprintf(const wchar_t *__restrict__ __format, ...);
# 607 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int swprintf(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __format, ...) throw();
# 615 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int vfwprintf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 623 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int vwprintf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 628 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline int vswprintf(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 638 "/usr/include/wchar.h" 3
extern int fwscanf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 645 "/usr/include/wchar.h" 3
extern int wscanf(const wchar_t *__restrict__ __format, ...);
# 648 "/usr/include/wchar.h" 3
extern int swscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, ...) throw();
# 692 "/usr/include/wchar.h" 3
extern int vfwscanf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 700 "/usr/include/wchar.h" 3
extern int vwscanf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 704 "/usr/include/wchar.h" 3
extern int vswscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 748 "/usr/include/wchar.h" 3
extern wint_t fgetwc(__FILE * __stream);
# 749 "/usr/include/wchar.h" 3
extern wint_t getwc(__FILE * __stream);
# 755 "/usr/include/wchar.h" 3
extern wint_t getwchar();
# 762 "/usr/include/wchar.h" 3
extern wint_t fputwc(wchar_t __wc, __FILE * __stream);
# 763 "/usr/include/wchar.h" 3
extern wint_t putwc(wchar_t __wc, __FILE * __stream);
# 769 "/usr/include/wchar.h" 3
extern wint_t putwchar(wchar_t __wc);
# 777 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *fgetws(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 784 "/usr/include/wchar.h" 3
extern int fputws(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 792 "/usr/include/wchar.h" 3
extern wint_t ungetwc(wint_t __wc, __FILE * __stream);
# 804 "/usr/include/wchar.h" 3
extern wint_t getwc_unlocked(__FILE * __stream);
# 805 "/usr/include/wchar.h" 3
extern wint_t getwchar_unlocked();
# 813 "/usr/include/wchar.h" 3
extern wint_t fgetwc_unlocked(__FILE * __stream);
# 821 "/usr/include/wchar.h" 3
extern wint_t fputwc_unlocked(wchar_t __wc, __FILE * __stream);
# 830 "/usr/include/wchar.h" 3
extern wint_t putwc_unlocked(wchar_t __wc, __FILE * __stream);
# 831 "/usr/include/wchar.h" 3
extern wint_t putwchar_unlocked(wchar_t __wc);
# 840 "/usr/include/wchar.h" 3
extern __attribute((gnu_inline)) inline wchar_t *fgetws_unlocked(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 849 "/usr/include/wchar.h" 3
extern int fputws_unlocked(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 858 "/usr/include/wchar.h" 3
extern ::size_t wcsftime(wchar_t *__restrict__ __s, ::size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 868 "/usr/include/wchar.h" 3
extern ::size_t wcsftime_l(wchar_t *__restrict__ __s, ::size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 24 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemcpy_chk(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n, ::size_t __ns1) throw();
# 27 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemcpy_alias(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw() __asm__("wmemcpy");
# 31 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemcpy_chk_warn(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n, ::size_t __ns1) throw() __asm__("__wmemcpy_chk")
# 35 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemcpy called with length bigger than size of destination buffer")));
# 38 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 39 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw()
# 41 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 42 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((::size_t)(-1)))
# 43 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 44 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 45 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 48 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 49 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 51 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemcpy_alias(__s1, __s2, __n);
# 53 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 56 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemmove_chk(wchar_t * __s1, const wchar_t * __s2, ::size_t __n, ::size_t __ns1) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemmove_alias(wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw() __asm__("wmemmove");
# 61 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemmove_chk_warn(wchar_t * __s1, const wchar_t * __s2, ::size_t __n, ::size_t __ns1) throw() __asm__("__wmemmove_chk")
# 64 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemmove called with length bigger than size of destination buffer")));
# 67 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 68 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, ::size_t __n) throw()
# 69 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 70 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((::size_t)(-1)))
# 71 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 72 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 73 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 76 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 77 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 79 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 80 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemmove_alias(__s1, __s2, __n);
# 81 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 85 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmempcpy_chk(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n, ::size_t __ns1) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmempcpy_alias(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw() __asm__("wmempcpy");
# 92 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmempcpy_chk_warn(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n, ::size_t __ns1) throw() __asm__("__wmempcpy_chk")
# 96 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmempcpy called with length bigger than size of destination buffer")));
# 99 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 100 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw()
# 102 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 103 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s1, 0) != ((::size_t)(-1)))
# 104 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 105 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 106 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 109 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s1, 0) / sizeof(wchar_t))) {
# 110 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_chk_warn(__s1, __s2, __n, __builtin_object_size(__s1, 0) / sizeof(wchar_t)); }
# 112 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 113 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmempcpy_alias(__s1, __s2, __n);
# 114 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 118 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemset_chk(wchar_t * __s, wchar_t __c, ::size_t __n, ::size_t __ns) throw();
# 120 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemset_alias(wchar_t * __s, wchar_t __c, ::size_t __n) throw() __asm__("wmemset");
# 122 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wmemset_chk_warn(wchar_t * __s, wchar_t __c, ::size_t __n, ::size_t __ns) throw() __asm__("__wmemset_chk")
# 125 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wmemset called with length bigger than size of destination buffer")));
# 128 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 129 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wmemset(wchar_t *__s, wchar_t __c, ::size_t __n) throw()
# 130 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 131 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 0) != ((::size_t)(-1)))
# 132 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 133 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 134 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 136 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__s, 0) / sizeof(wchar_t))) {
# 137 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_chk_warn(__s, __c, __n, __builtin_object_size(__s, 0) / sizeof(wchar_t)); }
# 139 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 140 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wmemset_alias(__s, __c, __n);
# 141 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 144 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw();
# 147 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw() __asm__("wcscpy");
# 151 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 152 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 153 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 154 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1))) {
# 155 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 156 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscpy_alias(__dest, __src);
# 157 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 160 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpcpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __destlen) throw();
# 163 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpcpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw() __asm__("wcpcpy");
# 167 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 168 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 169 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 170 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1))) {
# 171 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 172 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpcpy_alias(__dest, __src);
# 173 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 176 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n, ::size_t __destlen) throw();
# 179 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw() __asm__("wcsncpy");
# 183 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncpy_chk_warn(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n, ::size_t __destlen) throw() __asm__("__wcsncpy_chk")
# 187 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsncpy called with length bigger than size of destination buffer")));
# 190 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 191 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 193 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 194 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1)))
# 195 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 196 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 197 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 199 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 200 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 202 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 203 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncpy_alias(__dest, __src, __n);
# 204 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 207 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpncpy_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n, ::size_t __destlen) throw();
# 210 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpncpy_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw() __asm__("wcpncpy");
# 214 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcpncpy_chk_warn(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n, ::size_t __destlen) throw() __asm__("__wcpncpy_chk")
# 218 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcpncpy called with length bigger than size of destination buffer")));
# 221 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 222 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 224 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 225 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1)))
# 226 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 227 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 228 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 230 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__n > (__builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t))) {
# 231 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_chk_warn(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 233 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 234 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcpncpy_alias(__dest, __src, __n);
# 235 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 238 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscat_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __destlen) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcscat_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw() __asm__("wcscat");
# 245 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 246 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 247 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 248 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1))) {
# 249 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_chk(__dest, __src, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 250 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcscat_alias(__dest, __src);
# 251 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 254 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncat_chk(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n, ::size_t __destlen) throw();
# 257 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__wcsncat_alias(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw() __asm__("wcsncat");
# 262 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__))
# 263 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__leaf__)) extern inline wchar_t *wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 265 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 266 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dest, 2 > 1) != ((::size_t)(-1))) {
# 267 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_chk(__dest, __src, __n, __builtin_object_size(__dest, 2 > 1) / sizeof(wchar_t)); }
# 269 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsncat_alias(__dest, __src, __n);
# 270 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 273 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __swprintf_chk(wchar_t *__restrict__ __s, ::size_t __n, int __flag, ::size_t __s_len, const wchar_t *__restrict__ __format, ...) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __swprintf_alias(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __fmt, ...) throw() __asm__("swprintf");
# 284 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 285 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) swprintf(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __fmt, ...) throw()
# 287 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 288 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1))) || (2 > 1)) {
# 289 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __builtin_va_arg_pack()); }
# 292 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __swprintf_alias(__s, __n, __fmt, __builtin_va_arg_pack());
# 293 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 303 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vswprintf_chk(wchar_t *__restrict__ __s, ::size_t __n, int __flag, ::size_t __s_len, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 309 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vswprintf_alias(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap) throw() __asm__("vswprintf");
# 314 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 315 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) vswprintf(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 317 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 318 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1))) || (2 > 1)) {
# 319 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __fmt, __ap); }
# 321 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vswprintf_alias(__s, __n, __fmt, __ap);
# 322 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 327 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __fwprintf_chk(__FILE *__restrict__ __stream, int __flag, const wchar_t *__restrict__ __format, ...);
# 329 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __wprintf_chk(int __flag, const wchar_t *__restrict__ __format, ...);
# 331 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vfwprintf_chk(__FILE *__restrict__ __stream, int __flag, const wchar_t *__restrict__ __format, __gnuc_va_list __ap);
# 334 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern int __vwprintf_chk(int __flag, const wchar_t *__restrict__ __format, __gnuc_va_list __ap);
# 338 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 339 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
wprintf(const wchar_t *__restrict__ __fmt, ...)
# 340 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 341 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wprintf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 342 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 344 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 345 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __fmt, ...)
# 346 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 347 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fwprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 349 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 357 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 358 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vwprintf(const wchar_t *__restrict__ __fmt, __gnuc_va_list __ap)
# 359 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 360 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vwprintf_chk(2 - 1, __fmt, __ap);
# 361 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 363 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 364 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
vfwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__
# 365 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__fmt, __gnuc_va_list __ap)
# 366 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 367 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __vfwprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 368 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 372 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_chk(wchar_t *__restrict__ __s, ::size_t __size, int __n, __FILE *__restrict__ __stream)
# 373 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 374 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_alias(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream) __asm__("fgetws")
# 376 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 377 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_chk_warn(wchar_t *__restrict__ __s, ::size_t __size, int __n, __FILE *__restrict__ __stream) __asm__("__fgetws_chk")
# 380 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws called with bigger size than length of destination buffer")));
# 383 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 384 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 385 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 386 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1)))
# 387 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 388 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 389 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 392 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((::size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 393 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 395 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 396 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_alias(__s, __n, __stream);
# 397 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 400 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_unlocked_chk(wchar_t *__restrict__ __s, ::size_t __size, int __n, __FILE *__restrict__ __stream)
# 402 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 403 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_unlocked_alias(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream) __asm__("fgetws_unlocked")
# 406 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 407 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern wchar_t *__fgetws_unlocked_chk_warn(wchar_t *__restrict__ __s, ::size_t __size, int __n, __FILE *__restrict__ __stream) __asm__("__fgetws_unlocked_chk")
# 411 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgetws_unlocked called with bigger size than length of destination buffer")));
# 414 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline wchar_t *
# 415 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
fgetws_unlocked(wchar_t *__restrict__ __s, int __n, __FILE *__restrict__ __stream)
# 416 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 417 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1)))
# 418 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 419 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((!(0)) || (__n <= 0)) {
# 420 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 423 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (((::size_t)__n) > (__builtin_object_size(__s, 2 > 1) / sizeof(wchar_t))) {
# 424 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1) / sizeof(wchar_t), __n, __stream); }
# 426 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 427 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __fgetws_unlocked_alias(__s, __n, __stream);
# 428 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 432 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcrtomb_chk(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __p, ::size_t __buflen) throw()
# 434 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 435 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcrtomb_alias(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __ps) throw() __asm__("wcrtomb")
# 437 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warn_unused_result__));
# 439 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ::size_t
# 440 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) wcrtomb(char *__restrict__ __s, wchar_t __wchar, mbstate_t *__restrict__ __ps) throw()
# 442 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 450 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if ((__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1))) && ((16) > __builtin_object_size(__s, 2 > 1))) {
# 451 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_chk(__s, __wchar, __ps, __builtin_object_size(__s, 2 > 1)); }
# 452 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcrtomb_alias(__s, __wchar, __ps);
# 453 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 456 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __mbsrtowcs_chk(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw();
# 460 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __mbsrtowcs_alias(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("mbsrtowcs");
# 465 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __mbsrtowcs_chk_warn(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw() __asm__("__mbsrtowcs_chk")
# 470 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 473 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline ::size_t
# 474 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw()
# 476 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 477 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((::size_t)(-1)))
# 478 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 479 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 480 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 483 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 484 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 486 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 487 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsrtowcs_alias(__dst, __src, __len, __ps);
# 488 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 491 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcsrtombs_chk(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw();
# 495 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcsrtombs_alias(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("wcsrtombs");
# 500 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcsrtombs_chk_warn(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw() __asm__("__wcsrtombs_chk")
# 505 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsrtombs called with dst buffer smaller than len")));
# 507 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline ::size_t
# 508 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw()
# 510 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 511 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((::size_t)(-1)))
# 512 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 513 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 514 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 516 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 517 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_chk_warn(__dst, __src, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 518 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 519 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsrtombs_alias(__dst, __src, __len, __ps);
# 520 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 524 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __mbsnrtowcs_chk(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __nmc, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw();
# 528 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __mbsnrtowcs_alias(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __nmc, ::size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("mbsnrtowcs");
# 533 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __mbsnrtowcs_chk_warn(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __nmc, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw() __asm__("__mbsnrtowcs_chk")
# 538 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("mbsnrtowcs called with dst buffer smaller than len * sizeof (wchar_t)")));
# 541 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline ::size_t
# 542 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __nmc, ::size_t __len, mbstate_t *__restrict__ __ps) throw()
# 544 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 545 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((::size_t)(-1)))
# 546 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 547 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 548 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 551 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > (__builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t))) {
# 552 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_chk_warn(__dst, __src, __nmc, __len, __ps, __builtin_object_size(__dst, 2 > 1) / sizeof(wchar_t)); }
# 554 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 555 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __mbsnrtowcs_alias(__dst, __src, __nmc, __len, __ps);
# 556 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 559 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcsnrtombs_chk(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __nwc, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw();
# 564 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcsnrtombs_alias(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __nwc, ::size_t __len, mbstate_t *__restrict__ __ps) throw() __asm__("wcsnrtombs");
# 569 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
extern ::size_t __wcsnrtombs_chk_warn(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __nwc, ::size_t __len, mbstate_t *__restrict__ __ps, ::size_t __dstlen) throw() __asm__("__wcsnrtombs_chk")
# 575 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__warning__("wcsnrtombs called with dst buffer smaller than len")));
# 577 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline ::size_t
# 578 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
 __attribute((__leaf__)) wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __nwc, ::size_t __len, mbstate_t *__restrict__ __ps) throw()
# 580 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 581 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__builtin_object_size(__dst, 2 > 1) != ((::size_t)(-1)))
# 582 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
{
# 583 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (!(0)) {
# 584 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 587 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
if (__len > __builtin_object_size(__dst, 2 > 1)) {
# 588 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_chk_warn(__dst, __src, __nwc, __len, __ps, __builtin_object_size(__dst, 2 > 1)); }
# 590 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 591 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
return __wcsnrtombs_alias(__dst, __src, __nwc, __len, __ps);
# 592 "/usr/include/x86_64-linux-gnu/bits/wchar2.h" 3
}
# 894 "/usr/include/wchar.h" 3
}
# 62 "/usr/include/c++/5/cwchar" 3
namespace std {
# 64 "/usr/include/c++/5/cwchar" 3
using ::mbstate_t;
# 65 "/usr/include/c++/5/cwchar" 3
}
# 135 "/usr/include/c++/5/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 139 "/usr/include/c++/5/cwchar" 3
using ::wint_t;
# 141 "/usr/include/c++/5/cwchar" 3
using ::btowc;
# 142 "/usr/include/c++/5/cwchar" 3
using ::fgetwc;
# 143 "/usr/include/c++/5/cwchar" 3
using ::fgetws;
# 144 "/usr/include/c++/5/cwchar" 3
using ::fputwc;
# 145 "/usr/include/c++/5/cwchar" 3
using ::fputws;
# 146 "/usr/include/c++/5/cwchar" 3
using ::fwide;
# 147 "/usr/include/c++/5/cwchar" 3
using ::fwprintf;
# 148 "/usr/include/c++/5/cwchar" 3
using ::fwscanf;
# 149 "/usr/include/c++/5/cwchar" 3
using ::getwc;
# 150 "/usr/include/c++/5/cwchar" 3
using ::getwchar;
# 151 "/usr/include/c++/5/cwchar" 3
using ::mbrlen;
# 152 "/usr/include/c++/5/cwchar" 3
using ::mbrtowc;
# 153 "/usr/include/c++/5/cwchar" 3
using ::mbsinit;
# 154 "/usr/include/c++/5/cwchar" 3
using ::mbsrtowcs;
# 155 "/usr/include/c++/5/cwchar" 3
using ::putwc;
# 156 "/usr/include/c++/5/cwchar" 3
using ::putwchar;
# 158 "/usr/include/c++/5/cwchar" 3
using ::swprintf;
# 160 "/usr/include/c++/5/cwchar" 3
using ::swscanf;
# 161 "/usr/include/c++/5/cwchar" 3
using ::ungetwc;
# 162 "/usr/include/c++/5/cwchar" 3
using ::vfwprintf;
# 164 "/usr/include/c++/5/cwchar" 3
using ::vfwscanf;
# 167 "/usr/include/c++/5/cwchar" 3
using ::vswprintf;
# 170 "/usr/include/c++/5/cwchar" 3
using ::vswscanf;
# 172 "/usr/include/c++/5/cwchar" 3
using ::vwprintf;
# 174 "/usr/include/c++/5/cwchar" 3
using ::vwscanf;
# 176 "/usr/include/c++/5/cwchar" 3
using ::wcrtomb;
# 177 "/usr/include/c++/5/cwchar" 3
using ::wcscat;
# 178 "/usr/include/c++/5/cwchar" 3
using ::wcscmp;
# 179 "/usr/include/c++/5/cwchar" 3
using ::wcscoll;
# 180 "/usr/include/c++/5/cwchar" 3
using ::wcscpy;
# 181 "/usr/include/c++/5/cwchar" 3
using ::wcscspn;
# 182 "/usr/include/c++/5/cwchar" 3
using ::wcsftime;
# 183 "/usr/include/c++/5/cwchar" 3
using ::wcslen;
# 184 "/usr/include/c++/5/cwchar" 3
using ::wcsncat;
# 185 "/usr/include/c++/5/cwchar" 3
using ::wcsncmp;
# 186 "/usr/include/c++/5/cwchar" 3
using ::wcsncpy;
# 187 "/usr/include/c++/5/cwchar" 3
using ::wcsrtombs;
# 188 "/usr/include/c++/5/cwchar" 3
using ::wcsspn;
# 189 "/usr/include/c++/5/cwchar" 3
using ::wcstod;
# 191 "/usr/include/c++/5/cwchar" 3
using ::wcstof;
# 193 "/usr/include/c++/5/cwchar" 3
using ::wcstok;
# 194 "/usr/include/c++/5/cwchar" 3
using ::wcstol;
# 195 "/usr/include/c++/5/cwchar" 3
using ::wcstoul;
# 196 "/usr/include/c++/5/cwchar" 3
using ::wcsxfrm;
# 197 "/usr/include/c++/5/cwchar" 3
using ::wctob;
# 198 "/usr/include/c++/5/cwchar" 3
using ::wmemcmp;
# 199 "/usr/include/c++/5/cwchar" 3
using ::wmemcpy;
# 200 "/usr/include/c++/5/cwchar" 3
using ::wmemmove;
# 201 "/usr/include/c++/5/cwchar" 3
using ::wmemset;
# 202 "/usr/include/c++/5/cwchar" 3
using ::wprintf;
# 203 "/usr/include/c++/5/cwchar" 3
using ::wscanf;
# 204 "/usr/include/c++/5/cwchar" 3
using ::wcschr;
# 205 "/usr/include/c++/5/cwchar" 3
using ::wcspbrk;
# 206 "/usr/include/c++/5/cwchar" 3
using ::wcsrchr;
# 207 "/usr/include/c++/5/cwchar" 3
using ::wcsstr;
# 208 "/usr/include/c++/5/cwchar" 3
using ::wmemchr;
# 233 "/usr/include/c++/5/cwchar" 3
}
# 241 "/usr/include/c++/5/cwchar" 3
namespace __gnu_cxx {
# 248 "/usr/include/c++/5/cwchar" 3
using ::wcstold;
# 257 "/usr/include/c++/5/cwchar" 3
using ::wcstoll;
# 258 "/usr/include/c++/5/cwchar" 3
using ::wcstoull;
# 260 "/usr/include/c++/5/cwchar" 3
}
# 262 "/usr/include/c++/5/cwchar" 3
namespace std {
# 264 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstold;
# 265 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstoll;
# 266 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstoull;
# 267 "/usr/include/c++/5/cwchar" 3
}
# 277 "/usr/include/c++/5/cwchar" 3
namespace std {
# 297 "/usr/include/c++/5/cwchar" 3
}
# 68 "/usr/include/c++/5/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/5/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/5/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT>
# 112 "/usr/include/c++/5/bits/postypes.h" 3
class fpos {
# 115 "/usr/include/c++/5/bits/postypes.h" 3
streamoff _M_off;
# 116 "/usr/include/c++/5/bits/postypes.h" 3
_StateT _M_state;
# 123 "/usr/include/c++/5/bits/postypes.h" 3
public: fpos() : _M_off((0)), _M_state()
# 124 "/usr/include/c++/5/bits/postypes.h" 3
{ }
# 133 "/usr/include/c++/5/bits/postypes.h" 3
fpos(streamoff __off) : _M_off(__off), _M_state()
# 134 "/usr/include/c++/5/bits/postypes.h" 3
{ }
# 137 "/usr/include/c++/5/bits/postypes.h" 3
operator streamoff() const { return _M_off; }
# 141 "/usr/include/c++/5/bits/postypes.h" 3
void state(_StateT __st)
# 142 "/usr/include/c++/5/bits/postypes.h" 3
{ (_M_state) = __st; }
# 146 "/usr/include/c++/5/bits/postypes.h" 3
_StateT state() const
# 147 "/usr/include/c++/5/bits/postypes.h" 3
{ return _M_state; }
# 154 "/usr/include/c++/5/bits/postypes.h" 3
fpos &operator+=(streamoff __off)
# 155 "/usr/include/c++/5/bits/postypes.h" 3
{
# 156 "/usr/include/c++/5/bits/postypes.h" 3
(_M_off) += __off;
# 157 "/usr/include/c++/5/bits/postypes.h" 3
return *this;
# 158 "/usr/include/c++/5/bits/postypes.h" 3
}
# 165 "/usr/include/c++/5/bits/postypes.h" 3
fpos &operator-=(streamoff __off)
# 166 "/usr/include/c++/5/bits/postypes.h" 3
{
# 167 "/usr/include/c++/5/bits/postypes.h" 3
(_M_off) -= __off;
# 168 "/usr/include/c++/5/bits/postypes.h" 3
return *this;
# 169 "/usr/include/c++/5/bits/postypes.h" 3
}
# 178 "/usr/include/c++/5/bits/postypes.h" 3
fpos operator+(streamoff __off) const
# 179 "/usr/include/c++/5/bits/postypes.h" 3
{
# 180 "/usr/include/c++/5/bits/postypes.h" 3
fpos __pos(*this);
# 181 "/usr/include/c++/5/bits/postypes.h" 3
__pos += __off;
# 182 "/usr/include/c++/5/bits/postypes.h" 3
return __pos;
# 183 "/usr/include/c++/5/bits/postypes.h" 3
}
# 192 "/usr/include/c++/5/bits/postypes.h" 3
fpos operator-(streamoff __off) const
# 193 "/usr/include/c++/5/bits/postypes.h" 3
{
# 194 "/usr/include/c++/5/bits/postypes.h" 3
fpos __pos(*this);
# 195 "/usr/include/c++/5/bits/postypes.h" 3
__pos -= __off;
# 196 "/usr/include/c++/5/bits/postypes.h" 3
return __pos;
# 197 "/usr/include/c++/5/bits/postypes.h" 3
}
# 205 "/usr/include/c++/5/bits/postypes.h" 3
streamoff operator-(const fpos &__other) const
# 206 "/usr/include/c++/5/bits/postypes.h" 3
{ return (_M_off) - (__other._M_off); }
# 207 "/usr/include/c++/5/bits/postypes.h" 3
};
# 214 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT> inline bool
# 216 "/usr/include/c++/5/bits/postypes.h" 3
operator==(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 217 "/usr/include/c++/5/bits/postypes.h" 3
{ return ((streamoff)__lhs) == ((streamoff)__rhs); }
# 219 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT> inline bool
# 221 "/usr/include/c++/5/bits/postypes.h" 3
operator!=(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 222 "/usr/include/c++/5/bits/postypes.h" 3
{ return ((streamoff)__lhs) != ((streamoff)__rhs); }
# 228 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 234 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> u16streampos;
# 236 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> u32streampos;
# 240 "/usr/include/c++/5/bits/postypes.h" 3
}
# 43 "/usr/include/c++/5/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 58 "/usr/include/c++/5/bits/char_traits.h" 3
struct _Char_types {
# 60 "/usr/include/c++/5/bits/char_traits.h" 3
typedef unsigned long int_type;
# 61 "/usr/include/c++/5/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 62 "/usr/include/c++/5/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 63 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 64 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 82 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 83 "/usr/include/c++/5/bits/char_traits.h" 3
struct char_traits {
# 85 "/usr/include/c++/5/bits/char_traits.h" 3
typedef _CharT char_type;
# 86 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::int_type int_type;
# 87 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::pos_type pos_type;
# 88 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::off_type off_type;
# 89 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::state_type state_type;
# 92 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 93 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 96 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2)
# 97 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 100 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2)
# 101 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 104 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type * __s1, const char_type * __s2, std::size_t __n);
# 107 "/usr/include/c++/5/bits/char_traits.h" 3
static std::size_t length(const char_type * __s);
# 110 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type * __s, std::size_t __n, const char_type & __a);
# 113 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type * __s1, const char_type * __s2, std::size_t __n);
# 116 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type * __s1, const char_type * __s2, std::size_t __n);
# 119 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type * __s, std::size_t __n, char_type __a);
# 122 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c)
# 123 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 126 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c)
# 127 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(__c); }
# 130 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 131 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 134 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof()
# 135 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 138 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c)
# 139 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (!(eq_int_type)(__c, (eof)())) ? __c : (to_int_type)(char_type()); }
# 140 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 142 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> int
# 145 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::compare(const char_type *__s1, const char_type *__s2, std::size_t __n)
# 146 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 147 "/usr/include/c++/5/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 148 "/usr/include/c++/5/bits/char_traits.h" 3
if ((lt)(__s1[__i], __s2[__i])) {
# 149 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 150 "/usr/include/c++/5/bits/char_traits.h" 3
if ((lt)(__s2[__i], __s1[__i])) {
# 151 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 152 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 153 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 155 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> std::size_t
# 158 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::length(const char_type *__p)
# 159 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 160 "/usr/include/c++/5/bits/char_traits.h" 3
std::size_t __i = (0);
# 161 "/usr/include/c++/5/bits/char_traits.h" 3
while (!(eq)(__p[__i], char_type())) {
# 162 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 163 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 164 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 166 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> const typename char_traits< _CharT> ::char_type *
# 169 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::find(const char_type *__s, std::size_t __n, const char_type &__a)
# 170 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 171 "/usr/include/c++/5/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 172 "/usr/include/c++/5/bits/char_traits.h" 3
if ((eq)(__s[__i], __a)) {
# 173 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 174 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 175 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 177 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 180 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::move(char_type *__s1, const char_type *__s2, std::size_t __n)
# 181 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 182 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< _CharT *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 184 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 186 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 189 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::copy(char_type *__s1, const char_type *__s2, std::size_t __n)
# 190 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 192 "/usr/include/c++/5/bits/char_traits.h" 3
std::copy(__s2, __s2 + __n, __s1);
# 193 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1;
# 194 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 196 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 199 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::assign(char_type *__s, std::size_t __n, char_type __a)
# 200 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 202 "/usr/include/c++/5/bits/char_traits.h" 3
std::fill_n(__s, __n, __a);
# 203 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 204 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 207 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 209 "/usr/include/c++/5/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 226 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 227 "/usr/include/c++/5/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 228 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 233 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 235 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char char_type;
# 236 "/usr/include/c++/5/bits/char_traits.h" 3
typedef int int_type;
# 237 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streampos pos_type;
# 238 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 239 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 242 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 243 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 246 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 247 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 250 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 251 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 253 "/usr/include/c++/5/bits/char_traits.h" 3
return (static_cast< unsigned char>(__c1)) < (static_cast< unsigned char>(__c2));
# 255 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 258 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 260 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 261 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 262 "/usr/include/c++/5/bits/char_traits.h" 3
return __builtin_memcmp(__s1, __s2, __n);
# 263 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 266 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 267 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 270 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 271 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 272 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 273 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 274 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n));
# 275 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 278 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 279 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 280 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 281 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 282 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n));
# 283 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 286 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 287 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 288 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 289 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 290 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n));
# 291 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 294 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 295 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 296 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 297 "/usr/include/c++/5/bits/char_traits.h" 3
return __s; }
# 298 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memset(__s, __a, __n));
# 299 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 302 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 303 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 308 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 309 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(static_cast< unsigned char>(__c)); }
# 312 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 313 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 316 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 317 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 320 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 321 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 322 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 328 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 330 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wchar_t char_type;
# 331 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wint_t int_type;
# 332 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 333 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 334 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 337 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 338 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 341 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 342 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 345 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 346 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 349 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 350 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 351 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 352 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 353 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemcmp(__s1, __s2, __n);
# 354 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 357 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 358 "/usr/include/c++/5/bits/char_traits.h" 3
{ return wcslen(__s); }
# 361 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 362 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 363 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 364 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 365 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemchr(__s, __a, __n);
# 366 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 369 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 370 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 371 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 372 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 373 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemmove(__s1, __s2, __n);
# 374 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 377 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 378 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 379 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 380 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 381 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemcpy(__s1, __s2, __n);
# 382 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 385 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 386 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 387 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 388 "/usr/include/c++/5/bits/char_traits.h" 3
return __s; }
# 389 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemset(__s, __a, __n);
# 390 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 393 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 394 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 397 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 398 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 401 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 402 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 405 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 406 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 409 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 410 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : __c; }
# 411 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 48 "/usr/include/stdint.h" 3
typedef unsigned char uint8_t;
# 49 "/usr/include/stdint.h" 3
typedef unsigned short uint16_t;
# 51 "/usr/include/stdint.h" 3
typedef unsigned uint32_t;
# 55 "/usr/include/stdint.h" 3
typedef unsigned long uint64_t;
# 65 "/usr/include/stdint.h" 3
typedef signed char int_least8_t;
# 66 "/usr/include/stdint.h" 3
typedef short int_least16_t;
# 67 "/usr/include/stdint.h" 3
typedef int int_least32_t;
# 69 "/usr/include/stdint.h" 3
typedef long int_least64_t;
# 76 "/usr/include/stdint.h" 3
typedef unsigned char uint_least8_t;
# 77 "/usr/include/stdint.h" 3
typedef unsigned short uint_least16_t;
# 78 "/usr/include/stdint.h" 3
typedef unsigned uint_least32_t;
# 80 "/usr/include/stdint.h" 3
typedef unsigned long uint_least64_t;
# 90 "/usr/include/stdint.h" 3
typedef signed char int_fast8_t;
# 92 "/usr/include/stdint.h" 3
typedef long int_fast16_t;
# 93 "/usr/include/stdint.h" 3
typedef long int_fast32_t;
# 94 "/usr/include/stdint.h" 3
typedef long int_fast64_t;
# 103 "/usr/include/stdint.h" 3
typedef unsigned char uint_fast8_t;
# 105 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast16_t;
# 106 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast32_t;
# 107 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast64_t;
# 119 "/usr/include/stdint.h" 3
typedef long intptr_t;
# 122 "/usr/include/stdint.h" 3
typedef unsigned long uintptr_t;
# 134 "/usr/include/stdint.h" 3
typedef long intmax_t;
# 135 "/usr/include/stdint.h" 3
typedef unsigned long uintmax_t;
# 46 "/usr/include/c++/5/cstdint" 3
namespace std {
# 48 "/usr/include/c++/5/cstdint" 3
using ::int8_t;
# 49 "/usr/include/c++/5/cstdint" 3
using ::int16_t;
# 50 "/usr/include/c++/5/cstdint" 3
using ::int32_t;
# 51 "/usr/include/c++/5/cstdint" 3
using ::int64_t;
# 53 "/usr/include/c++/5/cstdint" 3
using ::int_fast8_t;
# 54 "/usr/include/c++/5/cstdint" 3
using ::int_fast16_t;
# 55 "/usr/include/c++/5/cstdint" 3
using ::int_fast32_t;
# 56 "/usr/include/c++/5/cstdint" 3
using ::int_fast64_t;
# 58 "/usr/include/c++/5/cstdint" 3
using ::int_least8_t;
# 59 "/usr/include/c++/5/cstdint" 3
using ::int_least16_t;
# 60 "/usr/include/c++/5/cstdint" 3
using ::int_least32_t;
# 61 "/usr/include/c++/5/cstdint" 3
using ::int_least64_t;
# 63 "/usr/include/c++/5/cstdint" 3
using ::intmax_t;
# 64 "/usr/include/c++/5/cstdint" 3
using ::intptr_t;
# 66 "/usr/include/c++/5/cstdint" 3
using ::uint8_t;
# 67 "/usr/include/c++/5/cstdint" 3
using ::uint16_t;
# 68 "/usr/include/c++/5/cstdint" 3
using ::uint32_t;
# 69 "/usr/include/c++/5/cstdint" 3
using ::uint64_t;
# 71 "/usr/include/c++/5/cstdint" 3
using ::uint_fast8_t;
# 72 "/usr/include/c++/5/cstdint" 3
using ::uint_fast16_t;
# 73 "/usr/include/c++/5/cstdint" 3
using ::uint_fast32_t;
# 74 "/usr/include/c++/5/cstdint" 3
using ::uint_fast64_t;
# 76 "/usr/include/c++/5/cstdint" 3
using ::uint_least8_t;
# 79 "/usr/include/c++/5/cstdint" 3
using ::uint_least64_t;
# 81 "/usr/include/c++/5/cstdint" 3
using ::uintmax_t;
# 82 "/usr/include/c++/5/cstdint" 3
using ::uintptr_t;
# 83 "/usr/include/c++/5/cstdint" 3
}
# 422 "/usr/include/c++/5/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 427 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char16_t> {
# 429 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char16_t char_type;
# 430 "/usr/include/c++/5/bits/char_traits.h" 3
typedef uint_least16_t int_type;
# 431 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 432 "/usr/include/c++/5/bits/char_traits.h" 3
typedef u16streampos pos_type;
# 433 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 436 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 437 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 440 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 441 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 444 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 445 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 448 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 449 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 450 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 451 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s1[__i], __s2[__i])) {
# 452 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 453 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s2[__i], __s1[__i])) {
# 454 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 455 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 456 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 459 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 460 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 461 "/usr/include/c++/5/bits/char_traits.h" 3
size_t __i = (0);
# 462 "/usr/include/c++/5/bits/char_traits.h" 3
while (!eq(__s[__i], char_type())) {
# 463 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 464 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 465 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 468 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 469 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 470 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 471 "/usr/include/c++/5/bits/char_traits.h" 3
if (eq(__s[__i], __a)) {
# 472 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 473 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 474 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 477 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 478 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 479 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 480 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 481 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 483 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 486 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 487 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 488 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 489 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 490 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n * sizeof(char_type)));
# 492 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 495 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 496 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 497 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 498 "/usr/include/c++/5/bits/char_traits.h" 3
assign(__s[__i], __a); }
# 499 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 500 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 503 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 504 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 507 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 508 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 511 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 512 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 515 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 516 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 519 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 520 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : (__c); }
# 521 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 524 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char32_t> {
# 526 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char32_t char_type;
# 527 "/usr/include/c++/5/bits/char_traits.h" 3
typedef uint_least32_t int_type;
# 528 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 529 "/usr/include/c++/5/bits/char_traits.h" 3
typedef u32streampos pos_type;
# 530 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 533 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 534 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 537 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 538 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 541 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 542 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 545 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 546 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 547 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 548 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s1[__i], __s2[__i])) {
# 549 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 550 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s2[__i], __s1[__i])) {
# 551 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 552 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 553 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 556 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 557 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 558 "/usr/include/c++/5/bits/char_traits.h" 3
size_t __i = (0);
# 559 "/usr/include/c++/5/bits/char_traits.h" 3
while (!eq(__s[__i], char_type())) {
# 560 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 561 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 562 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 565 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 566 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 567 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 568 "/usr/include/c++/5/bits/char_traits.h" 3
if (eq(__s[__i], __a)) {
# 569 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 570 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 571 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 574 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 575 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 576 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 577 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 578 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 580 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 583 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 584 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 585 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 586 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 587 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n * sizeof(char_type)));
# 589 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 592 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 593 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 594 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 595 "/usr/include/c++/5/bits/char_traits.h" 3
assign(__s[__i], __a); }
# 596 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 597 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 600 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 601 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 604 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 605 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 608 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 609 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 612 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 613 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 616 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 617 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : __c; }
# 618 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 621 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 35 "/usr/include/c++/5/exception" 3
#pragma GCC visibility push ( default )
# 40 "/usr/include/c++/5/exception" 3
extern "C++" {
# 42 "/usr/include/c++/5/exception" 3
namespace std {
# 60 "/usr/include/c++/5/exception" 3
class exception {
# 63 "/usr/include/c++/5/exception" 3
public: exception() noexcept { }
# 64 "/usr/include/c++/5/exception" 3
virtual ~exception() noexcept;
# 68 "/usr/include/c++/5/exception" 3
virtual const char *what() const noexcept;
# 69 "/usr/include/c++/5/exception" 3
};
# 73 "/usr/include/c++/5/exception" 3
class bad_exception : public exception {
# 76 "/usr/include/c++/5/exception" 3
public: bad_exception() noexcept { }
# 80 "/usr/include/c++/5/exception" 3
virtual ~bad_exception() noexcept;
# 83 "/usr/include/c++/5/exception" 3
virtual const char *what() const noexcept;
# 84 "/usr/include/c++/5/exception" 3
};
# 87 "/usr/include/c++/5/exception" 3
typedef void (*terminate_handler)(void);
# 90 "/usr/include/c++/5/exception" 3
typedef void (*unexpected_handler)(void);
# 93 "/usr/include/c++/5/exception" 3
terminate_handler set_terminate(terminate_handler) noexcept;
# 97 "/usr/include/c++/5/exception" 3
terminate_handler get_terminate() noexcept;
# 102 "/usr/include/c++/5/exception" 3
void terminate() noexcept __attribute((__noreturn__));
# 105 "/usr/include/c++/5/exception" 3
unexpected_handler set_unexpected(unexpected_handler) noexcept;
# 109 "/usr/include/c++/5/exception" 3
unexpected_handler get_unexpected() noexcept;
# 114 "/usr/include/c++/5/exception" 3
void unexpected() __attribute((__noreturn__));
# 127 "/usr/include/c++/5/exception" 3
bool uncaught_exception() noexcept __attribute((__pure__));
# 130 "/usr/include/c++/5/exception" 3
}
# 132 "/usr/include/c++/5/exception" 3
namespace __gnu_cxx {
# 152 "/usr/include/c++/5/exception" 3
void __verbose_terminate_handler();
# 155 "/usr/include/c++/5/exception" 3
}
# 157 "/usr/include/c++/5/exception" 3
}
# 159 "/usr/include/c++/5/exception" 3
#pragma GCC visibility pop
# 34 "/usr/include/c++/5/bits/exception_ptr.h" 3
#pragma GCC visibility push ( default )
# 43 "/usr/include/c++/5/bits/exception_ptr.h" 3
extern "C++" {
# 45 "/usr/include/c++/5/bits/exception_ptr.h" 3
namespace std {
# 47 "/usr/include/c++/5/bits/exception_ptr.h" 3
class type_info;
# 53 "/usr/include/c++/5/bits/exception_ptr.h" 3
namespace __exception_ptr {
# 55 "/usr/include/c++/5/bits/exception_ptr.h" 3
class exception_ptr;
# 56 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 58 "/usr/include/c++/5/bits/exception_ptr.h" 3
using __exception_ptr::exception_ptr;
# 64 "/usr/include/c++/5/bits/exception_ptr.h" 3
__exception_ptr::exception_ptr current_exception() noexcept;
# 67 "/usr/include/c++/5/bits/exception_ptr.h" 3
void rethrow_exception(__exception_ptr::exception_ptr) __attribute((__noreturn__));
# 69 "/usr/include/c++/5/bits/exception_ptr.h" 3
namespace __exception_ptr {
# 75 "/usr/include/c++/5/bits/exception_ptr.h" 3
class exception_ptr {
# 77 "/usr/include/c++/5/bits/exception_ptr.h" 3
void *_M_exception_object;
# 79 "/usr/include/c++/5/bits/exception_ptr.h" 3
explicit exception_ptr(void * __e) noexcept;
# 81 "/usr/include/c++/5/bits/exception_ptr.h" 3
void _M_addref() noexcept;
# 82 "/usr/include/c++/5/bits/exception_ptr.h" 3
void _M_release() noexcept;
# 84 "/usr/include/c++/5/bits/exception_ptr.h" 3
void *_M_get() const noexcept __attribute((__pure__));
# 86 "/usr/include/c++/5/bits/exception_ptr.h" 3
friend exception_ptr std::current_exception() noexcept;
# 87 "/usr/include/c++/5/bits/exception_ptr.h" 3
friend void std::rethrow_exception(exception_ptr);
# 90 "/usr/include/c++/5/bits/exception_ptr.h" 3
public: exception_ptr() noexcept;
# 92 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr(const exception_ptr &) noexcept;
# 95 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr(nullptr_t) noexcept : _M_exception_object((0))
# 97 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ }
# 99 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr(exception_ptr &&__o) noexcept : _M_exception_object(__o._M_exception_object)
# 101 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ (__o._M_exception_object) = (0); }
# 112 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr &operator=(const exception_ptr &) noexcept;
# 116 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr &operator=(exception_ptr &&__o) noexcept
# 117 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 118 "/usr/include/c++/5/bits/exception_ptr.h" 3
((exception_ptr)(static_cast< exception_ptr &&>(__o))).swap(*this);
# 119 "/usr/include/c++/5/bits/exception_ptr.h" 3
return *this;
# 120 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 123 "/usr/include/c++/5/bits/exception_ptr.h" 3
~exception_ptr() noexcept;
# 126 "/usr/include/c++/5/bits/exception_ptr.h" 3
void swap(exception_ptr &) noexcept;
# 138 "/usr/include/c++/5/bits/exception_ptr.h" 3
explicit operator bool() const
# 139 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ return _M_exception_object; }
# 143 "/usr/include/c++/5/bits/exception_ptr.h" 3
friend bool operator==(const exception_ptr &, const exception_ptr &) noexcept
# 144 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 147 "/usr/include/c++/5/bits/exception_ptr.h" 3
const type_info *__cxa_exception_type() const noexcept
# 148 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 149 "/usr/include/c++/5/bits/exception_ptr.h" 3
};
# 152 "/usr/include/c++/5/bits/exception_ptr.h" 3
bool operator==(const exception_ptr &, const exception_ptr &) noexcept
# 153 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 156 "/usr/include/c++/5/bits/exception_ptr.h" 3
bool operator!=(const exception_ptr &, const exception_ptr &) noexcept
# 157 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 160 "/usr/include/c++/5/bits/exception_ptr.h" 3
inline void swap(exception_ptr &__lhs, exception_ptr &__rhs)
# 161 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ __lhs.swap(__rhs); }
# 163 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 167 "/usr/include/c++/5/bits/exception_ptr.h" 3
template< class _Ex> __exception_ptr::exception_ptr
# 169 "/usr/include/c++/5/bits/exception_ptr.h" 3
make_exception_ptr(_Ex __ex) noexcept
# 170 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 172 "/usr/include/c++/5/bits/exception_ptr.h" 3
try
# 173 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 174 "/usr/include/c++/5/bits/exception_ptr.h" 3
throw __ex;
# 175 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 176 "/usr/include/c++/5/bits/exception_ptr.h" 3
catch (...)
# 177 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 178 "/usr/include/c++/5/bits/exception_ptr.h" 3
return current_exception();
# 179 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 183 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 189 "/usr/include/c++/5/bits/exception_ptr.h" 3
template< class _Ex> __exception_ptr::exception_ptr copy_exception(_Ex __ex) noexcept
# 191 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__deprecated__));
# 193 "/usr/include/c++/5/bits/exception_ptr.h" 3
template< class _Ex> __exception_ptr::exception_ptr
# 195 "/usr/include/c++/5/bits/exception_ptr.h" 3
copy_exception(_Ex __ex) noexcept
# 196 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ return std::make_exception_ptr< _Ex> (__ex); }
# 199 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 201 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 203 "/usr/include/c++/5/bits/exception_ptr.h" 3
#pragma GCC visibility pop
# 33 "/usr/include/c++/5/bits/nested_exception.h" 3
#pragma GCC visibility push ( default )
# 45 "/usr/include/c++/5/bits/nested_exception.h" 3
extern "C++" {
# 47 "/usr/include/c++/5/bits/nested_exception.h" 3
namespace std {
# 55 "/usr/include/c++/5/bits/nested_exception.h" 3
class nested_exception {
# 57 "/usr/include/c++/5/bits/nested_exception.h" 3
__exception_ptr::exception_ptr _M_ptr;
# 60 "/usr/include/c++/5/bits/nested_exception.h" 3
public: nested_exception() noexcept : _M_ptr(current_exception()) { }
# 62 "/usr/include/c++/5/bits/nested_exception.h" 3
nested_exception(const nested_exception &) noexcept = default;
# 64 "/usr/include/c++/5/bits/nested_exception.h" 3
nested_exception &operator=(const nested_exception &) noexcept = default;
# 66 "/usr/include/c++/5/bits/nested_exception.h" 3
virtual ~nested_exception() noexcept;
# 68 "/usr/include/c++/5/bits/nested_exception.h" 3
[[noreturn]] void
# 70 "/usr/include/c++/5/bits/nested_exception.h" 3
rethrow_nested() const
# 71 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 72 "/usr/include/c++/5/bits/nested_exception.h" 3
if ((_M_ptr)) {
# 73 "/usr/include/c++/5/bits/nested_exception.h" 3
rethrow_exception(_M_ptr); }
# 74 "/usr/include/c++/5/bits/nested_exception.h" 3
std::terminate();
# 75 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 78 "/usr/include/c++/5/bits/nested_exception.h" 3
__exception_ptr::exception_ptr nested_ptr() const noexcept
# 79 "/usr/include/c++/5/bits/nested_exception.h" 3
{ return _M_ptr; }
# 80 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 82 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Except>
# 83 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Nested_exception : public _Except, public nested_exception {
# 85 "/usr/include/c++/5/bits/nested_exception.h" 3
explicit _Nested_exception(const _Except &__ex) : _Except(__ex)
# 87 "/usr/include/c++/5/bits/nested_exception.h" 3
{ }
# 89 "/usr/include/c++/5/bits/nested_exception.h" 3
explicit _Nested_exception(_Except &&__ex) : _Except(static_cast< _Except &&>(__ex))
# 91 "/usr/include/c++/5/bits/nested_exception.h" 3
{ }
# 92 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 94 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp, bool
# 95 "/usr/include/c++/5/bits/nested_exception.h" 3
__with_nested = !__is_base_of(nested_exception, _Tp)>
# 96 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_impl {
# 98 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Up> static void
# 99 "/usr/include/c++/5/bits/nested_exception.h" 3
_S_throw(_Up &&__t)
# 100 "/usr/include/c++/5/bits/nested_exception.h" 3
{ throw _Nested_exception< _Tp> {static_cast< _Up &&>(__t)}; }
# 101 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 103 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 104 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_impl< _Tp, false> {
# 106 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Up> static void
# 107 "/usr/include/c++/5/bits/nested_exception.h" 3
_S_throw(_Up &&__t)
# 108 "/usr/include/c++/5/bits/nested_exception.h" 3
{ throw static_cast< _Up &&>(__t); }
# 109 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 111 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp, bool = __is_class(_Tp) && (!__is_final(_Tp))>
# 112 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper : public _Throw_with_nested_impl< _Tp> {
# 113 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 115 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 116 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper< _Tp, false> : public _Throw_with_nested_impl< _Tp, false> {
# 118 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 120 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 121 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper< _Tp &, false> : public _Throw_with_nested_helper< _Tp> {
# 123 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 125 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 126 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper< _Tp &&, false> : public _Throw_with_nested_helper< _Tp> {
# 128 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 132 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 133 "/usr/include/c++/5/bits/nested_exception.h" 3
[[noreturn]] inline void
# 135 "/usr/include/c++/5/bits/nested_exception.h" 3
throw_with_nested(_Tp &&__t)
# 136 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 137 "/usr/include/c++/5/bits/nested_exception.h" 3
_Throw_with_nested_helper< _Tp> ::_S_throw(static_cast< _Tp &&>(__t));
# 138 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 140 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp, bool = __is_polymorphic(_Tp)>
# 141 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Rethrow_if_nested_impl {
# 143 "/usr/include/c++/5/bits/nested_exception.h" 3
static void _S_rethrow(const _Tp &__t)
# 144 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 145 "/usr/include/c++/5/bits/nested_exception.h" 3
if (auto __tp = (dynamic_cast< const nested_exception *>(&__t))) {
# 146 "/usr/include/c++/5/bits/nested_exception.h" 3
__tp->rethrow_nested(); }
# 147 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 148 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 150 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 151 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Rethrow_if_nested_impl< _Tp, false> {
# 153 "/usr/include/c++/5/bits/nested_exception.h" 3
static void _S_rethrow(const _Tp &) { }
# 154 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 157 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Ex> inline void
# 159 "/usr/include/c++/5/bits/nested_exception.h" 3
rethrow_if_nested(const _Ex &__ex)
# 160 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 161 "/usr/include/c++/5/bits/nested_exception.h" 3
_Rethrow_if_nested_impl< _Ex> ::_S_rethrow(__ex);
# 162 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 165 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 167 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 171 "/usr/include/c++/5/bits/nested_exception.h" 3
#pragma GCC visibility pop
# 42 "/usr/include/c++/5/new" 3
#pragma GCC visibility push ( default )
# 44 "/usr/include/c++/5/new" 3
extern "C++" {
# 46 "/usr/include/c++/5/new" 3
namespace std {
# 54 "/usr/include/c++/5/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/5/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/5/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/5/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/5/new" 3
};
# 68 "/usr/include/c++/5/new" 3
class bad_array_new_length : public bad_alloc {
# 71 "/usr/include/c++/5/new" 3
public: bad_array_new_length() throw() { }
# 75 "/usr/include/c++/5/new" 3
virtual ~bad_array_new_length() throw();
# 78 "/usr/include/c++/5/new" 3
virtual const char *what() const throw();
# 79 "/usr/include/c++/5/new" 3
};
# 82 "/usr/include/c++/5/new" 3
struct nothrow_t { };
# 84 "/usr/include/c++/5/new" 3
extern const nothrow_t nothrow;
# 88 "/usr/include/c++/5/new" 3
typedef void (*new_handler)(void);
# 92 "/usr/include/c++/5/new" 3
new_handler set_new_handler(new_handler) throw();
# 96 "/usr/include/c++/5/new" 3
new_handler get_new_handler() noexcept;
# 98 "/usr/include/c++/5/new" 3
}
# 111 "/usr/include/c++/5/new" 3
void *operator new(std::size_t)
# 112 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 113 "/usr/include/c++/5/new" 3
void *operator new[](std::size_t)
# 114 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 115 "/usr/include/c++/5/new" 3
void operator delete(void *) noexcept
# 116 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 117 "/usr/include/c++/5/new" 3
void operator delete[](void *) noexcept
# 118 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 119 "/usr/include/c++/5/new" 3
void *operator new(std::size_t, const std::nothrow_t &) noexcept
# 120 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 121 "/usr/include/c++/5/new" 3
void *operator new[](std::size_t, const std::nothrow_t &) noexcept
# 122 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 123 "/usr/include/c++/5/new" 3
void operator delete(void *, const std::nothrow_t &) noexcept
# 124 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 125 "/usr/include/c++/5/new" 3
void operator delete[](void *, const std::nothrow_t &) noexcept
# 126 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 129 "/usr/include/c++/5/new" 3
inline void *operator new(std::size_t, void *__p) noexcept
# 130 "/usr/include/c++/5/new" 3
{ return __p; }
# 131 "/usr/include/c++/5/new" 3
inline void *operator new[](std::size_t, void *__p) noexcept
# 132 "/usr/include/c++/5/new" 3
{ return __p; }
# 135 "/usr/include/c++/5/new" 3
inline void operator delete(void *, void *) noexcept { }
# 136 "/usr/include/c++/5/new" 3
inline void operator delete[](void *, void *) noexcept { }
# 138 "/usr/include/c++/5/new" 3
}
# 140 "/usr/include/c++/5/new" 3
#pragma GCC visibility pop
# 40 "/usr/include/c++/5/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/5/ext/new_allocator.h" 3
using std::size_t;
# 45 "/usr/include/c++/5/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 57 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp>
# 58 "/usr/include/c++/5/ext/new_allocator.h" 3
class new_allocator {
# 61 "/usr/include/c++/5/ext/new_allocator.h" 3
public: typedef std::size_t size_type;
# 62 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef std::ptrdiff_t difference_type;
# 63 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp *pointer;
# 64 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef const _Tp *const_pointer;
# 65 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp &reference;
# 66 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef const _Tp &const_reference;
# 67 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp value_type;
# 69 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp1>
# 70 "/usr/include/c++/5/ext/new_allocator.h" 3
struct rebind {
# 71 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef __gnu_cxx::new_allocator< _Tp1> other; };
# 76 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef std::true_type propagate_on_container_move_assignment;
# 79 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator() noexcept { }
# 81 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator(const new_allocator &) noexcept { }
# 83 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp1>
# 84 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator(const __gnu_cxx::new_allocator< _Tp1> &) noexcept { }
# 86 "/usr/include/c++/5/ext/new_allocator.h" 3
~new_allocator() noexcept { }
# 89 "/usr/include/c++/5/ext/new_allocator.h" 3
pointer address(reference __x) const noexcept
# 90 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 93 "/usr/include/c++/5/ext/new_allocator.h" 3
const_pointer address(const_reference __x) const noexcept
# 94 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 99 "/usr/include/c++/5/ext/new_allocator.h" 3
pointer allocate(size_type __n, const void * = 0)
# 100 "/usr/include/c++/5/ext/new_allocator.h" 3
{
# 101 "/usr/include/c++/5/ext/new_allocator.h" 3
if (__n > this->max_size()) {
# 102 "/usr/include/c++/5/ext/new_allocator.h" 3
std::__throw_bad_alloc(); }
# 104 "/usr/include/c++/5/ext/new_allocator.h" 3
return static_cast< _Tp *>(::operator new(__n * sizeof(_Tp)));
# 105 "/usr/include/c++/5/ext/new_allocator.h" 3
}
# 109 "/usr/include/c++/5/ext/new_allocator.h" 3
void deallocate(pointer __p, size_type)
# 110 "/usr/include/c++/5/ext/new_allocator.h" 3
{ ::operator delete(__p); }
# 113 "/usr/include/c++/5/ext/new_allocator.h" 3
size_type max_size() const noexcept
# 114 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return ((std::size_t)(-1)) / sizeof(_Tp); }
# 117 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Up, class ..._Args> void
# 119 "/usr/include/c++/5/ext/new_allocator.h" 3
construct(_Up *__p, _Args &&...__args)
# 120 "/usr/include/c++/5/ext/new_allocator.h" 3
{ ::new ((void *)__p) (_Up)(std::forward< _Args> (__args)...); }
# 122 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Up> void
# 124 "/usr/include/c++/5/ext/new_allocator.h" 3
destroy(_Up *__p) { (__p->~_Up()); }
# 135 "/usr/include/c++/5/ext/new_allocator.h" 3
};
# 137 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 139 "/usr/include/c++/5/ext/new_allocator.h" 3
operator==(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 140 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return true; }
# 142 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 144 "/usr/include/c++/5/ext/new_allocator.h" 3
operator!=(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 145 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return false; }
# 148 "/usr/include/c++/5/ext/new_allocator.h" 3
}
# 36 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h" 3
namespace std {
# 47 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h" 3
template< class _Tp> using __allocator_base = __gnu_cxx::new_allocator< _Tp> ;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h" 3
}
# 52 "/usr/include/c++/5/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/allocator.h" 3
template<> class allocator< void> {
# 66 "/usr/include/c++/5/bits/allocator.h" 3
public: typedef size_t size_type;
# 67 "/usr/include/c++/5/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 68 "/usr/include/c++/5/bits/allocator.h" 3
typedef void *pointer;
# 69 "/usr/include/c++/5/bits/allocator.h" 3
typedef const void *const_pointer;
# 70 "/usr/include/c++/5/bits/allocator.h" 3
typedef void value_type;
# 72 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 73 "/usr/include/c++/5/bits/allocator.h" 3
struct rebind {
# 74 "/usr/include/c++/5/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 79 "/usr/include/c++/5/bits/allocator.h" 3
typedef true_type propagate_on_container_move_assignment;
# 81 "/usr/include/c++/5/bits/allocator.h" 3
};
# 91 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp>
# 92 "/usr/include/c++/5/bits/allocator.h" 3
class allocator : public __allocator_base< _Tp> {
# 95 "/usr/include/c++/5/bits/allocator.h" 3
public: typedef ::std::size_t size_type;
# 96 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::ptrdiff_t difference_type;
# 97 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp *pointer;
# 98 "/usr/include/c++/5/bits/allocator.h" 3
typedef const _Tp *const_pointer;
# 99 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp &reference;
# 100 "/usr/include/c++/5/bits/allocator.h" 3
typedef const _Tp &const_reference;
# 101 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp value_type;
# 103 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 104 "/usr/include/c++/5/bits/allocator.h" 3
struct rebind {
# 105 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::allocator< _Tp1> other; };
# 110 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::true_type propagate_on_container_move_assignment;
# 113 "/usr/include/c++/5/bits/allocator.h" 3
allocator() throw() { }
# 115 "/usr/include/c++/5/bits/allocator.h" 3
allocator(const allocator &__a) throw() : ::std::__allocator_base< _Tp> (__a)
# 116 "/usr/include/c++/5/bits/allocator.h" 3
{ }
# 118 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 119 "/usr/include/c++/5/bits/allocator.h" 3
allocator(const ::std::allocator< _Tp1> &) throw() { }
# 121 "/usr/include/c++/5/bits/allocator.h" 3
~allocator() throw() { }
# 124 "/usr/include/c++/5/bits/allocator.h" 3
};
# 126 "/usr/include/c++/5/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 128 "/usr/include/c++/5/bits/allocator.h" 3
operator==(const allocator< _T1> &, const allocator< _T2> &) noexcept
# 130 "/usr/include/c++/5/bits/allocator.h" 3
{ return true; }
# 132 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp> inline bool
# 134 "/usr/include/c++/5/bits/allocator.h" 3
operator==(const allocator< _Tp> &, const allocator< _Tp> &) noexcept
# 136 "/usr/include/c++/5/bits/allocator.h" 3
{ return true; }
# 138 "/usr/include/c++/5/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 140 "/usr/include/c++/5/bits/allocator.h" 3
operator!=(const allocator< _T1> &, const allocator< _T2> &) noexcept
# 142 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 144 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp> inline bool
# 146 "/usr/include/c++/5/bits/allocator.h" 3
operator!=(const allocator< _Tp> &, const allocator< _Tp> &) noexcept
# 148 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 155 "/usr/include/c++/5/bits/allocator.h" 3
extern template class allocator< char> ;
# 156 "/usr/include/c++/5/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 163 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 164 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_swap {
# 165 "/usr/include/c++/5/bits/allocator.h" 3
static void _S_do_it(_Alloc &, _Alloc &) noexcept { } };
# 167 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc>
# 168 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_swap< _Alloc, false> {
# 171 "/usr/include/c++/5/bits/allocator.h" 3
static void _S_do_it(_Alloc &__one, _Alloc &__two) noexcept
# 172 "/usr/include/c++/5/bits/allocator.h" 3
{
# 174 "/usr/include/c++/5/bits/allocator.h" 3
if (__one != __two) {
# 175 "/usr/include/c++/5/bits/allocator.h" 3
swap(__one, __two); }
# 176 "/usr/include/c++/5/bits/allocator.h" 3
}
# 177 "/usr/include/c++/5/bits/allocator.h" 3
};
# 180 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 181 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_neq {
# 184 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &, const _Alloc &)
# 185 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 186 "/usr/include/c++/5/bits/allocator.h" 3
};
# 188 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc>
# 189 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_neq< _Alloc, false> {
# 192 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &__one, const _Alloc &__two)
# 193 "/usr/include/c++/5/bits/allocator.h" 3
{ return __one != __two; }
# 194 "/usr/include/c++/5/bits/allocator.h" 3
};
# 197 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp, bool
# 198 "/usr/include/c++/5/bits/allocator.h" 3
 = __or_< is_copy_constructible< typename _Tp::value_type> , is_nothrow_move_constructible< typename _Tp::value_type> > ::value>
# 200 "/usr/include/c++/5/bits/allocator.h" 3
struct __shrink_to_fit_aux {
# 201 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(_Tp &) noexcept { return false; } };
# 203 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp>
# 204 "/usr/include/c++/5/bits/allocator.h" 3
struct __shrink_to_fit_aux< _Tp, true> {
# 207 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(_Tp &__c) noexcept
# 208 "/usr/include/c++/5/bits/allocator.h" 3
{
# 210 "/usr/include/c++/5/bits/allocator.h" 3
try
# 211 "/usr/include/c++/5/bits/allocator.h" 3
{
# 212 "/usr/include/c++/5/bits/allocator.h" 3
(_Tp(__make_move_if_noexcept_iterator((__c.begin())), __make_move_if_noexcept_iterator((__c.end())), (__c.get_allocator())).swap(__c));
# 215 "/usr/include/c++/5/bits/allocator.h" 3
return true;
# 216 "/usr/include/c++/5/bits/allocator.h" 3
}
# 217 "/usr/include/c++/5/bits/allocator.h" 3
catch (...)
# 218 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 222 "/usr/include/c++/5/bits/allocator.h" 3
}
# 223 "/usr/include/c++/5/bits/allocator.h" 3
};
# 227 "/usr/include/c++/5/bits/allocator.h" 3
}
# 31 "/usr/include/locale.h" 3
extern "C" {
# 53 "/usr/include/locale.h" 3
struct lconv {
# 57 "/usr/include/locale.h" 3
char *decimal_point;
# 58 "/usr/include/locale.h" 3
char *thousands_sep;
# 64 "/usr/include/locale.h" 3
char *grouping;
# 70 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 71 "/usr/include/locale.h" 3
char *currency_symbol;
# 72 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 73 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 74 "/usr/include/locale.h" 3
char *mon_grouping;
# 75 "/usr/include/locale.h" 3
char *positive_sign;
# 76 "/usr/include/locale.h" 3
char *negative_sign;
# 77 "/usr/include/locale.h" 3
char int_frac_digits;
# 78 "/usr/include/locale.h" 3
char frac_digits;
# 80 "/usr/include/locale.h" 3
char p_cs_precedes;
# 82 "/usr/include/locale.h" 3
char p_sep_by_space;
# 84 "/usr/include/locale.h" 3
char n_cs_precedes;
# 86 "/usr/include/locale.h" 3
char n_sep_by_space;
# 93 "/usr/include/locale.h" 3
char p_sign_posn;
# 94 "/usr/include/locale.h" 3
char n_sign_posn;
# 97 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 99 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 101 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 103 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 110 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 111 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 120 "/usr/include/locale.h" 3
};
# 124 "/usr/include/locale.h" 3
extern char *setlocale(int __category, const char * __locale) throw();
# 127 "/usr/include/locale.h" 3
extern lconv *localeconv() throw();
# 151 "/usr/include/locale.h" 3
extern __locale_t newlocale(int __category_mask, const char * __locale, __locale_t __base) throw();
# 186 "/usr/include/locale.h" 3
extern __locale_t duplocale(__locale_t __dataset) throw();
# 190 "/usr/include/locale.h" 3
extern void freelocale(__locale_t __dataset) throw();
# 197 "/usr/include/locale.h" 3
extern __locale_t uselocale(__locale_t __dataset) throw();
# 205 "/usr/include/locale.h" 3
}
# 51 "/usr/include/c++/5/clocale" 3
namespace std {
# 53 "/usr/include/c++/5/clocale" 3
using ::lconv;
# 54 "/usr/include/c++/5/clocale" 3
using ::setlocale;
# 55 "/usr/include/c++/5/clocale" 3
using ::localeconv;
# 56 "/usr/include/c++/5/clocale" 3
}
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 55 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 70 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__out, const int
# 71 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 72 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__fmt, ...)
# 73 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
{
# 75 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 88 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_list __args;
# 89 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_start((__args),__fmt);
# 92 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 97 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_end(__args);
# 100 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
return __ret;
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 112 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 42 "/usr/include/c++/5/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/5/iosfwd" 3
class ios_base;
# 76 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ios;
# 79 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_streambuf;
# 82 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_istream;
# 85 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ostream;
# 88 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_iostream;
# 92 "/usr/include/c++/5/iosfwd" 3
inline namespace __cxx11 {
# 94 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 95 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 98 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 99 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 102 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 103 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 106 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 107 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 110 "/usr/include/c++/5/iosfwd" 3
}
# 112 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_filebuf;
# 115 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ifstream;
# 118 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ofstream;
# 121 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_fstream;
# 124 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class istreambuf_iterator;
# 127 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class ostreambuf_iterator;
# 132 "/usr/include/c++/5/iosfwd" 3
typedef basic_ios< char> ios;
# 135 "/usr/include/c++/5/iosfwd" 3
typedef basic_streambuf< char> streambuf;
# 138 "/usr/include/c++/5/iosfwd" 3
typedef basic_istream< char> istream;
# 141 "/usr/include/c++/5/iosfwd" 3
typedef basic_ostream< char> ostream;
# 144 "/usr/include/c++/5/iosfwd" 3
typedef basic_iostream< char> iostream;
# 147 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringbuf< char> stringbuf;
# 150 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_istringstream< char> istringstream;
# 153 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_ostringstream< char> ostringstream;
# 156 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringstream< char> stringstream;
# 159 "/usr/include/c++/5/iosfwd" 3
typedef basic_filebuf< char> filebuf;
# 162 "/usr/include/c++/5/iosfwd" 3
typedef basic_ifstream< char> ifstream;
# 165 "/usr/include/c++/5/iosfwd" 3
typedef basic_ofstream< char> ofstream;
# 168 "/usr/include/c++/5/iosfwd" 3
typedef basic_fstream< char> fstream;
# 172 "/usr/include/c++/5/iosfwd" 3
typedef basic_ios< wchar_t> wios;
# 175 "/usr/include/c++/5/iosfwd" 3
typedef basic_streambuf< wchar_t> wstreambuf;
# 178 "/usr/include/c++/5/iosfwd" 3
typedef basic_istream< wchar_t> wistream;
# 181 "/usr/include/c++/5/iosfwd" 3
typedef basic_ostream< wchar_t> wostream;
# 184 "/usr/include/c++/5/iosfwd" 3
typedef basic_iostream< wchar_t> wiostream;
# 187 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringbuf< wchar_t> wstringbuf;
# 190 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_istringstream< wchar_t> wistringstream;
# 193 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_ostringstream< wchar_t> wostringstream;
# 196 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringstream< wchar_t> wstringstream;
# 199 "/usr/include/c++/5/iosfwd" 3
typedef basic_filebuf< wchar_t> wfilebuf;
# 202 "/usr/include/c++/5/iosfwd" 3
typedef basic_ifstream< wchar_t> wifstream;
# 205 "/usr/include/c++/5/iosfwd" 3
typedef basic_ofstream< wchar_t> wofstream;
# 208 "/usr/include/c++/5/iosfwd" 3
typedef basic_fstream< wchar_t> wfstream;
# 213 "/usr/include/c++/5/iosfwd" 3
}
# 28 "/usr/include/ctype.h" 3
extern "C" {
# 47 "/usr/include/ctype.h" 3
enum {
# 48 "/usr/include/ctype.h" 3
_ISupper = 256,
# 49 "/usr/include/ctype.h" 3
_ISlower = 512,
# 50 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 51 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 52 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 53 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 54 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 55 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 56 "/usr/include/ctype.h" 3
_ISblank = 1,
# 57 "/usr/include/ctype.h" 3
_IScntrl,
# 58 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 59 "/usr/include/ctype.h" 3
_ISalnum = 8
# 60 "/usr/include/ctype.h" 3
};
# 79 "/usr/include/ctype.h" 3
extern const unsigned short **__ctype_b_loc() throw()
# 80 "/usr/include/ctype.h" 3
 __attribute((const));
# 81 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_tolower_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_toupper_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 110 "/usr/include/ctype.h" 3
extern int isalnum(int) throw();
# 111 "/usr/include/ctype.h" 3
extern int isalpha(int) throw();
# 112 "/usr/include/ctype.h" 3
extern int iscntrl(int) throw();
# 113 "/usr/include/ctype.h" 3
extern int isdigit(int) throw();
# 114 "/usr/include/ctype.h" 3
extern int islower(int) throw();
# 115 "/usr/include/ctype.h" 3
extern int isgraph(int) throw();
# 116 "/usr/include/ctype.h" 3
extern int isprint(int) throw();
# 117 "/usr/include/ctype.h" 3
extern int ispunct(int) throw();
# 118 "/usr/include/ctype.h" 3
extern int isspace(int) throw();
# 119 "/usr/include/ctype.h" 3
extern int isupper(int) throw();
# 120 "/usr/include/ctype.h" 3
extern int isxdigit(int) throw();
# 124 "/usr/include/ctype.h" 3
extern int tolower(int __c) throw();
# 127 "/usr/include/ctype.h" 3
extern int toupper(int __c) throw();
# 136 "/usr/include/ctype.h" 3
extern int isblank(int) throw();
# 143 "/usr/include/ctype.h" 3
extern int isctype(int __c, int __mask) throw();
# 150 "/usr/include/ctype.h" 3
extern int isascii(int __c) throw();
# 154 "/usr/include/ctype.h" 3
extern int toascii(int __c) throw();
# 158 "/usr/include/ctype.h" 3
extern int _toupper(int) throw();
# 159 "/usr/include/ctype.h" 3
extern int _tolower(int) throw();
# 271 "/usr/include/ctype.h" 3
extern int isalnum_l(int, __locale_t) throw();
# 272 "/usr/include/ctype.h" 3
extern int isalpha_l(int, __locale_t) throw();
# 273 "/usr/include/ctype.h" 3
extern int iscntrl_l(int, __locale_t) throw();
# 274 "/usr/include/ctype.h" 3
extern int isdigit_l(int, __locale_t) throw();
# 275 "/usr/include/ctype.h" 3
extern int islower_l(int, __locale_t) throw();
# 276 "/usr/include/ctype.h" 3
extern int isgraph_l(int, __locale_t) throw();
# 277 "/usr/include/ctype.h" 3
extern int isprint_l(int, __locale_t) throw();
# 278 "/usr/include/ctype.h" 3
extern int ispunct_l(int, __locale_t) throw();
# 279 "/usr/include/ctype.h" 3
extern int isspace_l(int, __locale_t) throw();
# 280 "/usr/include/ctype.h" 3
extern int isupper_l(int, __locale_t) throw();
# 281 "/usr/include/ctype.h" 3
extern int isxdigit_l(int, __locale_t) throw();
# 283 "/usr/include/ctype.h" 3
extern int isblank_l(int, __locale_t) throw();
# 287 "/usr/include/ctype.h" 3
extern int __tolower_l(int __c, __locale_t __l) throw();
# 288 "/usr/include/ctype.h" 3
extern int tolower_l(int __c, __locale_t __l) throw();
# 291 "/usr/include/ctype.h" 3
extern int __toupper_l(int __c, __locale_t __l) throw();
# 292 "/usr/include/ctype.h" 3
extern int toupper_l(int __c, __locale_t __l) throw();
# 347 "/usr/include/ctype.h" 3
}
# 62 "/usr/include/c++/5/cctype" 3
namespace std {
# 64 "/usr/include/c++/5/cctype" 3
using ::isalnum;
# 65 "/usr/include/c++/5/cctype" 3
using ::isalpha;
# 66 "/usr/include/c++/5/cctype" 3
using ::iscntrl;
# 67 "/usr/include/c++/5/cctype" 3
using ::isdigit;
# 68 "/usr/include/c++/5/cctype" 3
using ::isgraph;
# 69 "/usr/include/c++/5/cctype" 3
using ::islower;
# 70 "/usr/include/c++/5/cctype" 3
using ::isprint;
# 71 "/usr/include/c++/5/cctype" 3
using ::ispunct;
# 72 "/usr/include/c++/5/cctype" 3
using ::isspace;
# 73 "/usr/include/c++/5/cctype" 3
using ::isupper;
# 74 "/usr/include/c++/5/cctype" 3
using ::isxdigit;
# 75 "/usr/include/c++/5/cctype" 3
using ::tolower;
# 76 "/usr/include/c++/5/cctype" 3
using ::toupper;
# 77 "/usr/include/c++/5/cctype" 3
}
# 85 "/usr/include/c++/5/cctype" 3
namespace std {
# 87 "/usr/include/c++/5/cctype" 3
using ::isblank;
# 88 "/usr/include/c++/5/cctype" 3
}
# 44 "/usr/include/c++/5/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/5/bits/localefwd.h" 3
class locale;
# 57 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _Facet> bool has_facet(const locale &) throw();
# 61 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _Facet> const _Facet &use_facet(const locale &);
# 66 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isspace(_CharT, const locale &);
# 70 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isprint(_CharT, const locale &);
# 74 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool iscntrl(_CharT, const locale &);
# 78 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isupper(_CharT, const locale &);
# 82 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool islower(_CharT, const locale &);
# 86 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isalpha(_CharT, const locale &);
# 90 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isdigit(_CharT, const locale &);
# 94 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool ispunct(_CharT, const locale &);
# 98 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isxdigit(_CharT, const locale &);
# 102 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isalnum(_CharT, const locale &);
# 106 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isgraph(_CharT, const locale &);
# 111 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> bool isblank(_CharT, const locale &);
# 116 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> _CharT toupper(_CharT, const locale &);
# 120 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> _CharT tolower(_CharT, const locale &);
# 125 "/usr/include/c++/5/bits/localefwd.h" 3
class ctype_base;
# 126 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class ctype;
# 128 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class ctype< char> ;
# 130 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 132 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class ctype_byname;
# 136 "/usr/include/c++/5/bits/localefwd.h" 3
class codecvt_base;
# 137 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt;
# 139 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 141 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 143 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt_byname;
# 148 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class num_get;
# 150 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class num_put;
# 153 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 154 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class numpunct;
# 155 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class numpunct_byname;
# 156 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 158 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 160 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class collate;
# 162 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class collate_byname;
# 164 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 167 "/usr/include/c++/5/bits/localefwd.h" 3
class time_base;
# 168 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 169 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class time_get;
# 171 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class time_get_byname;
# 173 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 174 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class time_put;
# 176 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class time_put_byname;
# 180 "/usr/include/c++/5/bits/localefwd.h" 3
class money_base;
# 181 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 182 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class money_get;
# 184 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class money_put;
# 186 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 187 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 188 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 190 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 192 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 195 "/usr/include/c++/5/bits/localefwd.h" 3
class messages_base;
# 196 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 197 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class messages;
# 199 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 201 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 204 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 36 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
#pragma GCC visibility push ( default )
# 39 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
namespace __cxxabiv1 {
# 48 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
class __forced_unwind {
# 50 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
virtual ~__forced_unwind() throw();
# 53 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
virtual void __pure_dummy() = 0;
# 54 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
};
# 55 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
}
# 58 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
#pragma GCC visibility pop
# 38 "/usr/include/c++/5/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 44 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 45 "/usr/include/c++/5/bits/ostream_insert.h" 3
__s, streamsize __n)
# 46 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 47 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 48 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 50 "/usr/include/c++/5/bits/ostream_insert.h" 3
const streamsize __put = ((__out.rdbuf())->sputn(__s, __n));
# 51 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__put != __n) {
# 52 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit)); }
# 53 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 55 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 57 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(basic_ostream< _CharT, _Traits> &__out, streamsize __n)
# 58 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 59 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 60 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 62 "/usr/include/c++/5/bits/ostream_insert.h" 3
const _CharT __c = (__out.fill());
# 63 "/usr/include/c++/5/bits/ostream_insert.h" 3
for (; __n > (0); --__n)
# 64 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 65 "/usr/include/c++/5/bits/ostream_insert.h" 3
const typename _Traits::int_type __put = ((__out.rdbuf())->sputc(__c));
# 66 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (_Traits::eq_int_type(__put, _Traits::eof()))
# 67 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 68 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit));
# 69 "/usr/include/c++/5/bits/ostream_insert.h" 3
break;
# 70 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 71 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 72 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 74 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 76 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_insert(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 77 "/usr/include/c++/5/bits/ostream_insert.h" 3
__s, streamsize __n)
# 78 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 79 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 80 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 82 "/usr/include/c++/5/bits/ostream_insert.h" 3
typename basic_ostream< _CharT, _Traits> ::sentry __cerb(__out);
# 83 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__cerb)
# 84 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 85 "/usr/include/c++/5/bits/ostream_insert.h" 3
try
# 86 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 87 "/usr/include/c++/5/bits/ostream_insert.h" 3
const streamsize __w = (__out.width());
# 88 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__w > __n)
# 89 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 90 "/usr/include/c++/5/bits/ostream_insert.h" 3
const bool __left = ((__out.flags()) & __ios_base::adjustfield) == __ios_base::left;
# 93 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (!__left) {
# 94 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 95 "/usr/include/c++/5/bits/ostream_insert.h" 3
if ((__out.good())) {
# 96 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 97 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__left && (__out.good())) {
# 98 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 99 "/usr/include/c++/5/bits/ostream_insert.h" 3
} else {
# 101 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 102 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.width(0));
# 103 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 104 "/usr/include/c++/5/bits/ostream_insert.h" 3
catch (__cxxabiv1::__forced_unwind &)
# 105 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 106 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out._M_setstate(__ios_base::badbit));
# 107 "/usr/include/c++/5/bits/ostream_insert.h" 3
throw;
# 108 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 109 "/usr/include/c++/5/bits/ostream_insert.h" 3
catch (...)
# 110 "/usr/include/c++/5/bits/ostream_insert.h" 3
{ (__out._M_setstate(__ios_base::badbit)); }
# 111 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 112 "/usr/include/c++/5/bits/ostream_insert.h" 3
return __out;
# 113 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 118 "/usr/include/c++/5/bits/ostream_insert.h" 3
extern template basic_ostream< char> &__ostream_insert(basic_ostream< char> & __out, const char * __s, streamsize __n);
# 121 "/usr/include/c++/5/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t> &__ostream_insert(basic_ostream< wchar_t> & __out, const wchar_t * __s, streamsize __n);
# 127 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 63 "/usr/include/c++/5/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 104 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 105 "/usr/include/c++/5/bits/stl_function.h" 3
struct unary_function {
# 108 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg argument_type;
# 111 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Result result_type;
# 112 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 117 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 118 "/usr/include/c++/5/bits/stl_function.h" 3
struct binary_function {
# 121 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 124 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 127 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Result result_type;
# 128 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 166 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 167 "/usr/include/c++/5/bits/stl_function.h" 3
struct plus : public binary_function< _Tp, _Tp, _Tp> {
# 171 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 172 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x + __y; }
# 173 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 176 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 177 "/usr/include/c++/5/bits/stl_function.h" 3
struct minus : public binary_function< _Tp, _Tp, _Tp> {
# 181 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 182 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x - __y; }
# 183 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 186 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 187 "/usr/include/c++/5/bits/stl_function.h" 3
struct multiplies : public binary_function< _Tp, _Tp, _Tp> {
# 191 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 192 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x * __y; }
# 193 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 196 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 197 "/usr/include/c++/5/bits/stl_function.h" 3
struct divides : public binary_function< _Tp, _Tp, _Tp> {
# 201 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 202 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x / __y; }
# 203 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 206 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 207 "/usr/include/c++/5/bits/stl_function.h" 3
struct modulus : public binary_function< _Tp, _Tp, _Tp> {
# 211 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 212 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x % __y; }
# 213 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 216 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 217 "/usr/include/c++/5/bits/stl_function.h" 3
struct negate : public unary_function< _Tp, _Tp> {
# 221 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 222 "/usr/include/c++/5/bits/stl_function.h" 3
{ return -__x; }
# 223 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 351 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 352 "/usr/include/c++/5/bits/stl_function.h" 3
struct equal_to : public binary_function< _Tp, _Tp, bool> {
# 356 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 357 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x == __y; }
# 358 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 361 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 362 "/usr/include/c++/5/bits/stl_function.h" 3
struct not_equal_to : public binary_function< _Tp, _Tp, bool> {
# 366 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 367 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x != __y; }
# 368 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 371 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 372 "/usr/include/c++/5/bits/stl_function.h" 3
struct greater : public binary_function< _Tp, _Tp, bool> {
# 376 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 377 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x > __y; }
# 378 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 381 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 382 "/usr/include/c++/5/bits/stl_function.h" 3
struct less : public binary_function< _Tp, _Tp, bool> {
# 386 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 387 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x < __y; }
# 388 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 391 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 392 "/usr/include/c++/5/bits/stl_function.h" 3
struct greater_equal : public binary_function< _Tp, _Tp, bool> {
# 396 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 397 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x >= __y; }
# 398 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 401 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 402 "/usr/include/c++/5/bits/stl_function.h" 3
struct less_equal : public binary_function< _Tp, _Tp, bool> {
# 406 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 407 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x <= __y; }
# 408 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 524 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 525 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_and : public binary_function< _Tp, _Tp, bool> {
# 529 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 530 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x && __y; }
# 531 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 534 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 535 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_or : public binary_function< _Tp, _Tp, bool> {
# 539 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 540 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x || __y; }
# 541 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 544 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 545 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_not : public unary_function< _Tp, bool> {
# 549 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x) const
# 550 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !__x; }
# 551 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 617 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 618 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_and : public binary_function< _Tp, _Tp, _Tp> {
# 622 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 623 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x & __y; }
# 624 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 626 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 627 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_or : public binary_function< _Tp, _Tp, _Tp> {
# 631 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 632 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x | __y; }
# 633 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 635 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 636 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_xor : public binary_function< _Tp, _Tp, _Tp> {
# 640 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 641 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x ^ __y; }
# 642 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 644 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 645 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_not : public unary_function< _Tp, _Tp> {
# 649 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 650 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ~__x; }
# 651 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 741 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate>
# 742 "/usr/include/c++/5/bits/stl_function.h" 3
class unary_negate : public unary_function< typename _Predicate::argument_type, bool> {
# 746 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 751 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit unary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 755 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const typename _Predicate::argument_type &__x) const
# 756 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !(_M_pred)(__x); }
# 757 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 760 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate> inline unary_negate< _Predicate>
# 763 "/usr/include/c++/5/bits/stl_function.h" 3
not1(const _Predicate &__pred)
# 764 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((unary_negate< _Predicate> )(__pred)); }
# 767 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate>
# 768 "/usr/include/c++/5/bits/stl_function.h" 3
class binary_negate : public binary_function< typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
# 773 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 778 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit binary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 782 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &
# 783 "/usr/include/c++/5/bits/stl_function.h" 3
__y) const
# 784 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !(_M_pred)(__x, __y); }
# 785 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 788 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate> inline binary_negate< _Predicate>
# 791 "/usr/include/c++/5/bits/stl_function.h" 3
not2(const _Predicate &__pred)
# 792 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((binary_negate< _Predicate> )(__pred)); }
# 818 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 819 "/usr/include/c++/5/bits/stl_function.h" 3
class pointer_to_unary_function : public unary_function< _Arg, _Result> {
# 822 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg);
# 825 "/usr/include/c++/5/bits/stl_function.h" 3
public: pointer_to_unary_function() { }
# 828 "/usr/include/c++/5/bits/stl_function.h" 3
explicit pointer_to_unary_function(_Result (*__x)(_Arg)) : _M_ptr(__x)
# 829 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 832 "/usr/include/c++/5/bits/stl_function.h" 3
_Result operator()(_Arg __x) const
# 833 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (_M_ptr)(__x); }
# 834 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 837 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result> inline pointer_to_unary_function< _Arg, _Result>
# 839 "/usr/include/c++/5/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg))
# 840 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((pointer_to_unary_function< _Arg, _Result> )(__x)); }
# 843 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 844 "/usr/include/c++/5/bits/stl_function.h" 3
class pointer_to_binary_function : public binary_function< _Arg1, _Arg2, _Result> {
# 848 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg1, _Arg2);
# 851 "/usr/include/c++/5/bits/stl_function.h" 3
public: pointer_to_binary_function() { }
# 854 "/usr/include/c++/5/bits/stl_function.h" 3
explicit pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr(__x)
# 855 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 858 "/usr/include/c++/5/bits/stl_function.h" 3
_Result operator()(_Arg1 __x, _Arg2 __y) const
# 859 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (_M_ptr)(__x, __y); }
# 860 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 863 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result> inline pointer_to_binary_function< _Arg1, _Arg2, _Result>
# 865 "/usr/include/c++/5/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg1, _Arg2))
# 866 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((pointer_to_binary_function< _Arg1, _Arg2, _Result> )(__x)); }
# 869 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 870 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Identity : public unary_function< _Tp, _Tp> {
# 874 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp &operator()(_Tp &__x) const
# 875 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x; }
# 878 "/usr/include/c++/5/bits/stl_function.h" 3
const _Tp &operator()(const _Tp &__x) const
# 879 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x; }
# 880 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 882 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair>
# 883 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Select1st : public unary_function< _Pair, typename _Pair::first_type> {
# 887 "/usr/include/c++/5/bits/stl_function.h" 3
typename _Pair::first_type &operator()(_Pair &__x) const
# 888 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 891 "/usr/include/c++/5/bits/stl_function.h" 3
const typename _Pair::first_type &operator()(const _Pair &__x) const
# 892 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 895 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair2> typename _Pair2::first_type &
# 897 "/usr/include/c++/5/bits/stl_function.h" 3
operator()(_Pair2 &__x) const
# 898 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 900 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair2> const typename _Pair2::first_type &
# 902 "/usr/include/c++/5/bits/stl_function.h" 3
operator()(const _Pair2 &__x) const
# 903 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 905 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 907 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair>
# 908 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Select2nd : public unary_function< _Pair, typename _Pair::second_type> {
# 912 "/usr/include/c++/5/bits/stl_function.h" 3
typename _Pair::second_type &operator()(_Pair &__x) const
# 913 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.second; }
# 916 "/usr/include/c++/5/bits/stl_function.h" 3
const typename _Pair::second_type &operator()(const _Pair &__x) const
# 917 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.second; }
# 918 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 938 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 939 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun_t : public unary_function< _Tp *, _Ret> {
# 943 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 944 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 947 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp *__p) const
# 948 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 951 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 952 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 956 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 957 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun_t : public unary_function< const _Tp *, _Ret> {
# 961 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 962 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 965 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p) const
# 966 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 969 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 970 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 974 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 975 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 979 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun_ref_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 980 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 983 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp &__r) const
# 984 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 987 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 988 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 992 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 993 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 997 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun_ref_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 998 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1001 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r) const
# 1002 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 1005 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 1006 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1010 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1011 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun1_t : public binary_function< _Tp *, _Arg, _Ret> {
# 1015 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun1_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 1016 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1019 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp *__p, _Arg __x) const
# 1020 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 1023 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 1024 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1028 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1029 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun1_t : public binary_function< const _Tp *, _Arg, _Ret> {
# 1033 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 1034 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1037 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p, _Arg __x) const
# 1038 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 1041 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 1042 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1046 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1047 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 1051 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 1052 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1055 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp &__r, _Arg __x) const
# 1056 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 1059 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 1060 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1064 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1065 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 1069 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 1070 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1073 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r, _Arg __x) const
# 1074 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 1077 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 1078 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1082 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_t< _Ret, _Tp>
# 1084 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void))
# 1085 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun_t< _Ret, _Tp> )(__f)); }
# 1087 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_t< _Ret, _Tp>
# 1089 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void) const)
# 1090 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun_t< _Ret, _Tp> )(__f)); }
# 1092 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_ref_t< _Ret, _Tp>
# 1094 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void))
# 1095 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 1097 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_ref_t< _Ret, _Tp>
# 1099 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void) const)
# 1100 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 1102 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_t< _Ret, _Tp, _Arg>
# 1104 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg))
# 1105 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 1107 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_t< _Ret, _Tp, _Arg>
# 1109 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg) const)
# 1110 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 1112 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 1114 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg))
# 1115 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 1117 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 1119 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)
# 1120 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 1125 "/usr/include/c++/5/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/5/backward/binders.h" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
# 63 "/usr/include/c++/5/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 107 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation>
# 108 "/usr/include/c++/5/backward/binders.h" 3
class binder1st : public unary_function< typename _Operation::second_argument_type, typename _Operation::result_type> {
# 113 "/usr/include/c++/5/backward/binders.h" 3
protected: _Operation op;
# 114 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::first_argument_type value;
# 117 "/usr/include/c++/5/backward/binders.h" 3
public: binder1st(const _Operation &__x, const typename _Operation::first_argument_type &
# 118 "/usr/include/c++/5/backward/binders.h" 3
__y) : op(__x), value(__y)
# 119 "/usr/include/c++/5/backward/binders.h" 3
{ }
# 122 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const
# 123 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(value, __x); }
# 128 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const
# 129 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(value, __x); }
# 130 "/usr/include/c++/5/backward/binders.h" 3
} __attribute((__deprecated__));
# 133 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder1st< _Operation>
# 135 "/usr/include/c++/5/backward/binders.h" 3
bind1st(const _Operation &__fn, const _Tp &__x)
# 136 "/usr/include/c++/5/backward/binders.h" 3
{
# 137 "/usr/include/c++/5/backward/binders.h" 3
typedef typename _Operation::first_argument_type _Arg1_type;
# 138 "/usr/include/c++/5/backward/binders.h" 3
return binder1st< _Operation> (__fn, (_Arg1_type)__x);
# 139 "/usr/include/c++/5/backward/binders.h" 3
}
# 142 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation>
# 143 "/usr/include/c++/5/backward/binders.h" 3
class binder2nd : public unary_function< typename _Operation::first_argument_type, typename _Operation::result_type> {
# 148 "/usr/include/c++/5/backward/binders.h" 3
protected: _Operation op;
# 149 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::second_argument_type value;
# 152 "/usr/include/c++/5/backward/binders.h" 3
public: binder2nd(const _Operation &__x, const typename _Operation::second_argument_type &
# 153 "/usr/include/c++/5/backward/binders.h" 3
__y) : op(__x), value(__y)
# 154 "/usr/include/c++/5/backward/binders.h" 3
{ }
# 157 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const
# 158 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(__x, value); }
# 163 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const
# 164 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(__x, value); }
# 165 "/usr/include/c++/5/backward/binders.h" 3
} __attribute((__deprecated__));
# 168 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder2nd< _Operation>
# 170 "/usr/include/c++/5/backward/binders.h" 3
bind2nd(const _Operation &__fn, const _Tp &__x)
# 171 "/usr/include/c++/5/backward/binders.h" 3
{
# 172 "/usr/include/c++/5/backward/binders.h" 3
typedef typename _Operation::second_argument_type _Arg2_type;
# 173 "/usr/include/c++/5/backward/binders.h" 3
return binder2nd< _Operation> (__fn, (_Arg2_type)__x);
# 174 "/usr/include/c++/5/backward/binders.h" 3
}
# 178 "/usr/include/c++/5/backward/binders.h" 3
}
# 180 "/usr/include/c++/5/backward/binders.h" 3
#pragma GCC diagnostic pop
# 39 "/usr/include/c++/5/initializer_list" 3
#pragma GCC visibility push ( default )
# 43 "/usr/include/c++/5/initializer_list" 3
namespace std {
# 46 "/usr/include/c++/5/initializer_list" 3
template< class _E>
# 47 "/usr/include/c++/5/initializer_list" 3
class initializer_list {
# 50 "/usr/include/c++/5/initializer_list" 3
public: typedef _E value_type;
# 51 "/usr/include/c++/5/initializer_list" 3
typedef const _E &reference;
# 52 "/usr/include/c++/5/initializer_list" 3
typedef const _E &const_reference;
# 53 "/usr/include/c++/5/initializer_list" 3
typedef size_t size_type;
# 54 "/usr/include/c++/5/initializer_list" 3
typedef const _E *iterator;
# 55 "/usr/include/c++/5/initializer_list" 3
typedef const _E *const_iterator;
# 58 "/usr/include/c++/5/initializer_list" 3
private: iterator _M_array;
# 59 "/usr/include/c++/5/initializer_list" 3
size_type _M_len;
# 62 "/usr/include/c++/5/initializer_list" 3
constexpr initializer_list(const_iterator __a, size_type __l) : _M_array(__a), _M_len(__l)
# 63 "/usr/include/c++/5/initializer_list" 3
{ }
# 66 "/usr/include/c++/5/initializer_list" 3
public: constexpr initializer_list() noexcept : _M_array((0)), _M_len((0))
# 67 "/usr/include/c++/5/initializer_list" 3
{ }
# 71 "/usr/include/c++/5/initializer_list" 3
constexpr size_type size() const noexcept { return _M_len; }
# 75 "/usr/include/c++/5/initializer_list" 3
constexpr const_iterator begin() const noexcept { return _M_array; }
# 79 "/usr/include/c++/5/initializer_list" 3
constexpr const_iterator end() const noexcept { return begin() + size(); }
# 80 "/usr/include/c++/5/initializer_list" 3
};
# 87 "/usr/include/c++/5/initializer_list" 3
template< class _Tp> constexpr const _Tp *
# 89 "/usr/include/c++/5/initializer_list" 3
begin(initializer_list< _Tp> __ils) noexcept
# 90 "/usr/include/c++/5/initializer_list" 3
{ return (__ils.begin()); }
# 97 "/usr/include/c++/5/initializer_list" 3
template< class _Tp> constexpr const _Tp *
# 99 "/usr/include/c++/5/initializer_list" 3
end(initializer_list< _Tp> __ils) noexcept
# 100 "/usr/include/c++/5/initializer_list" 3
{ return (__ils.end()); }
# 101 "/usr/include/c++/5/initializer_list" 3
}
# 103 "/usr/include/c++/5/initializer_list" 3
#pragma GCC visibility pop
# 37 "/usr/include/c++/5/bits/range_access.h" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 48 "/usr/include/c++/5/bits/range_access.h" 3
begin(_Container &__cont)->__decltype(((__cont.begin())))
# 49 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.begin()); }
# 56 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 58 "/usr/include/c++/5/bits/range_access.h" 3
begin(const _Container &__cont)->__decltype(((__cont.begin())))
# 59 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.begin()); }
# 66 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 68 "/usr/include/c++/5/bits/range_access.h" 3
end(_Container &__cont)->__decltype(((__cont.end())))
# 69 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.end()); }
# 76 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 78 "/usr/include/c++/5/bits/range_access.h" 3
end(const _Container &__cont)->__decltype(((__cont.end())))
# 79 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.end()); }
# 85 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Tp, size_t _Nm> inline _Tp *
# 87 "/usr/include/c++/5/bits/range_access.h" 3
begin(_Tp (&__arr)[_Nm])
# 88 "/usr/include/c++/5/bits/range_access.h" 3
{ return __arr; }
# 95 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Tp, size_t _Nm> inline _Tp *
# 97 "/usr/include/c++/5/bits/range_access.h" 3
end(_Tp (&__arr)[_Nm])
# 98 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__arr) + _Nm; }
# 234 "/usr/include/c++/5/bits/range_access.h" 3
}
# 30 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h" 3
#pragma GCC visibility push ( default )
# 72 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct sched_param {
# 74 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
int __sched_priority;
# 75 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
};
# 77 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" {
# 81 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int clone(int (* __fn)(void * __arg), void * __child_stack, int __flags, void * __arg, ...) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int unshare(int __flags) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int sched_getcpu() throw();
# 91 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int setns(int __fd, int __nstype) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
}
# 103 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct __sched_param {
# 105 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
int __sched_priority;
# 106 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
};
# 118 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 128 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
typedef
# 126 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct {
# 127 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 128 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
} cpu_set_t;
# 201 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" {
# 203 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int __sched_cpucount(::size_t __setsize, const cpu_set_t * __setp) throw();
# 205 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern cpu_set_t *__sched_cpualloc(::size_t __count) throw() __attribute((__warn_unused_result__));
# 206 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern void __sched_cpufree(cpu_set_t * __set) throw();
# 208 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
}
# 48 "/usr/include/sched.h" 3
extern "C" {
# 51 "/usr/include/sched.h" 3
extern int sched_setparam(__pid_t __pid, const sched_param * __param) throw();
# 55 "/usr/include/sched.h" 3
extern int sched_getparam(__pid_t __pid, sched_param * __param) throw();
# 58 "/usr/include/sched.h" 3
extern int sched_setscheduler(__pid_t __pid, int __policy, const sched_param * __param) throw();
# 62 "/usr/include/sched.h" 3
extern int sched_getscheduler(__pid_t __pid) throw();
# 65 "/usr/include/sched.h" 3
extern int sched_yield() throw();
# 68 "/usr/include/sched.h" 3
extern int sched_get_priority_max(int __algorithm) throw();
# 71 "/usr/include/sched.h" 3
extern int sched_get_priority_min(int __algorithm) throw();
# 74 "/usr/include/sched.h" 3
extern int sched_rr_get_interval(__pid_t __pid, timespec * __t) throw();
# 118 "/usr/include/sched.h" 3
extern int sched_setaffinity(__pid_t __pid, ::size_t __cpusetsize, const cpu_set_t * __cpuset) throw();
# 122 "/usr/include/sched.h" 3
extern int sched_getaffinity(__pid_t __pid, ::size_t __cpusetsize, cpu_set_t * __cpuset) throw();
# 126 "/usr/include/sched.h" 3
}
# 31 "/usr/include/x86_64-linux-gnu/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 33 "/usr/include/pthread.h" 3
enum {
# 34 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 36 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 38 "/usr/include/pthread.h" 3
};
# 43 "/usr/include/pthread.h" 3
enum {
# 44 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 45 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 50 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 57 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 59 "/usr/include/pthread.h" 3
};
# 65 "/usr/include/pthread.h" 3
enum {
# 66 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 67 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 70 "/usr/include/pthread.h" 3
};
# 77 "/usr/include/pthread.h" 3
enum {
# 78 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 79 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 81 "/usr/include/pthread.h" 3
};
# 115 "/usr/include/pthread.h" 3
enum {
# 116 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 117 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 118 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 119 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 120 "/usr/include/pthread.h" 3
};
# 156 "/usr/include/pthread.h" 3
enum {
# 157 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 159 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 161 "/usr/include/pthread.h" 3
};
# 166 "/usr/include/pthread.h" 3
enum {
# 167 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 169 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 171 "/usr/include/pthread.h" 3
};
# 176 "/usr/include/pthread.h" 3
enum {
# 177 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 179 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 181 "/usr/include/pthread.h" 3
};
# 190 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 192 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 193 "/usr/include/pthread.h" 3
void *__arg;
# 194 "/usr/include/pthread.h" 3
int __canceltype;
# 195 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 196 "/usr/include/pthread.h" 3
};
# 200 "/usr/include/pthread.h" 3
enum {
# 201 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 203 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 205 "/usr/include/pthread.h" 3
};
# 207 "/usr/include/pthread.h" 3
enum {
# 208 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 210 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 212 "/usr/include/pthread.h" 3
};
# 228 "/usr/include/pthread.h" 3
extern "C" {
# 233 "/usr/include/pthread.h" 3
extern int pthread_create(pthread_t *__restrict__ __newthread, const pthread_attr_t *__restrict__ __attr, void *(* __start_routine)(void *), void *__restrict__ __arg) throw()
# 236 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 242 "/usr/include/pthread.h" 3
extern void pthread_exit(void * __retval) __attribute((__noreturn__));
# 250 "/usr/include/pthread.h" 3
extern int pthread_join(pthread_t __th, void ** __thread_return);
# 255 "/usr/include/pthread.h" 3
extern int pthread_tryjoin_np(pthread_t __th, void ** __thread_return) throw();
# 263 "/usr/include/pthread.h" 3
extern int pthread_timedjoin_np(pthread_t __th, void ** __thread_return, const timespec * __abstime);
# 271 "/usr/include/pthread.h" 3
extern int pthread_detach(pthread_t __th) throw();
# 275 "/usr/include/pthread.h" 3
extern pthread_t pthread_self() throw() __attribute((const));
# 278 "/usr/include/pthread.h" 3
extern __attribute((gnu_inline)) inline int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 279 "/usr/include/pthread.h" 3
 __attribute((const));
# 287 "/usr/include/pthread.h" 3
extern int pthread_attr_init(pthread_attr_t * __attr) throw() __attribute((__nonnull__(1)));
# 290 "/usr/include/pthread.h" 3
extern int pthread_attr_destroy(pthread_attr_t * __attr) throw()
# 291 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 294 "/usr/include/pthread.h" 3
extern int pthread_attr_getdetachstate(const pthread_attr_t * __attr, int * __detachstate) throw()
# 296 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 299 "/usr/include/pthread.h" 3
extern int pthread_attr_setdetachstate(pthread_attr_t * __attr, int __detachstate) throw()
# 301 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/pthread.h" 3
extern int pthread_attr_getguardsize(const pthread_attr_t * __attr, ::size_t * __guardsize) throw()
# 307 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 310 "/usr/include/pthread.h" 3
extern int pthread_attr_setguardsize(pthread_attr_t * __attr, ::size_t __guardsize) throw()
# 312 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 316 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ __attr, sched_param *__restrict__ __param) throw()
# 318 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedparam(pthread_attr_t *__restrict__ __attr, const sched_param *__restrict__ __param) throw()
# 323 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 326 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __policy) throw()
# 328 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 331 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedpolicy(pthread_attr_t * __attr, int __policy) throw()
# 332 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 335 "/usr/include/pthread.h" 3
extern int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __inherit) throw()
# 337 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 340 "/usr/include/pthread.h" 3
extern int pthread_attr_setinheritsched(pthread_attr_t * __attr, int __inherit) throw()
# 342 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 346 "/usr/include/pthread.h" 3
extern int pthread_attr_getscope(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __scope) throw()
# 348 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 351 "/usr/include/pthread.h" 3
extern int pthread_attr_setscope(pthread_attr_t * __attr, int __scope) throw()
# 352 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 355 "/usr/include/pthread.h" 3
extern int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr) throw()
# 357 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 363 "/usr/include/pthread.h" 3
extern int pthread_attr_setstackaddr(pthread_attr_t * __attr, void * __stackaddr) throw()
# 365 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 368 "/usr/include/pthread.h" 3
extern int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ __attr, ::size_t *__restrict__ __stacksize) throw()
# 370 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 375 "/usr/include/pthread.h" 3
extern int pthread_attr_setstacksize(pthread_attr_t * __attr, ::size_t __stacksize) throw()
# 377 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 381 "/usr/include/pthread.h" 3
extern int pthread_attr_getstack(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr, ::size_t *__restrict__ __stacksize) throw()
# 384 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 389 "/usr/include/pthread.h" 3
extern int pthread_attr_setstack(pthread_attr_t * __attr, void * __stackaddr, ::size_t __stacksize) throw()
# 390 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 396 "/usr/include/pthread.h" 3
extern int pthread_attr_setaffinity_np(pthread_attr_t * __attr, ::size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 399 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 403 "/usr/include/pthread.h" 3
extern int pthread_attr_getaffinity_np(const pthread_attr_t * __attr, ::size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 406 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 409 "/usr/include/pthread.h" 3
extern int pthread_getattr_default_np(pthread_attr_t * __attr) throw()
# 410 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 414 "/usr/include/pthread.h" 3
extern int pthread_setattr_default_np(const pthread_attr_t * __attr) throw()
# 415 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 420 "/usr/include/pthread.h" 3
extern int pthread_getattr_np(pthread_t __th, pthread_attr_t * __attr) throw()
# 421 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 429 "/usr/include/pthread.h" 3
extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const sched_param * __param) throw()
# 431 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 434 "/usr/include/pthread.h" 3
extern int pthread_getschedparam(pthread_t __target_thread, int *__restrict__ __policy, sched_param *__restrict__ __param) throw()
# 437 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 440 "/usr/include/pthread.h" 3
extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
# 446 "/usr/include/pthread.h" 3
extern int pthread_getname_np(pthread_t __target_thread, char * __buf, ::size_t __buflen) throw()
# 448 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/pthread.h" 3
extern int pthread_setname_np(pthread_t __target_thread, const char * __name) throw()
# 452 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 458 "/usr/include/pthread.h" 3
extern int pthread_getconcurrency() throw();
# 461 "/usr/include/pthread.h" 3
extern int pthread_setconcurrency(int __level) throw();
# 469 "/usr/include/pthread.h" 3
extern int pthread_yield() throw();
# 474 "/usr/include/pthread.h" 3
extern int pthread_setaffinity_np(pthread_t __th, ::size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 476 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 479 "/usr/include/pthread.h" 3
extern int pthread_getaffinity_np(pthread_t __th, ::size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 481 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 494 "/usr/include/pthread.h" 3
extern int pthread_once(pthread_once_t * __once_control, void (* __init_routine)(void))
# 495 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 506 "/usr/include/pthread.h" 3
extern int pthread_setcancelstate(int __state, int * __oldstate);
# 510 "/usr/include/pthread.h" 3
extern int pthread_setcanceltype(int __type, int * __oldtype);
# 513 "/usr/include/pthread.h" 3
extern int pthread_cancel(pthread_t __th);
# 518 "/usr/include/pthread.h" 3
extern void pthread_testcancel();
# 531 "/usr/include/pthread.h" 3
typedef
# 524 "/usr/include/pthread.h" 3
struct {
# 526 "/usr/include/pthread.h" 3
struct {
# 527 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 528 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 529 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 530 "/usr/include/pthread.h" 3
void *__pad[4];
# 531 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__));
# 540 "/usr/include/pthread.h" 3
struct __pthread_cleanup_frame {
# 542 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 543 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 544 "/usr/include/pthread.h" 3
int __do_it;
# 545 "/usr/include/pthread.h" 3
int __cancel_type;
# 546 "/usr/include/pthread.h" 3
};
# 551 "/usr/include/pthread.h" 3
class __pthread_cleanup_class {
# 553 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 554 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 555 "/usr/include/pthread.h" 3
int __do_it;
# 556 "/usr/include/pthread.h" 3
int __cancel_type;
# 559 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 560 "/usr/include/pthread.h" 3
{ }
# 561 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 562 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 563 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 564 "/usr/include/pthread.h" 3
}
# 565 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 566 "/usr/include/pthread.h" 3
};
# 742 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 743 "/usr/include/pthread.h" 3
extern int __sigsetjmp(__jmp_buf_tag * __env, int __savemask) throw();
# 749 "/usr/include/pthread.h" 3
extern int pthread_mutex_init(pthread_mutex_t * __mutex, const pthread_mutexattr_t * __mutexattr) throw()
# 751 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 754 "/usr/include/pthread.h" 3
extern int pthread_mutex_destroy(pthread_mutex_t * __mutex) throw()
# 755 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 758 "/usr/include/pthread.h" 3
extern int pthread_mutex_trylock(pthread_mutex_t * __mutex) throw()
# 759 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 762 "/usr/include/pthread.h" 3
extern int pthread_mutex_lock(pthread_mutex_t * __mutex) throw()
# 763 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 767 "/usr/include/pthread.h" 3
extern int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime) throw()
# 769 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 773 "/usr/include/pthread.h" 3
extern int pthread_mutex_unlock(pthread_mutex_t * __mutex) throw()
# 774 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 778 "/usr/include/pthread.h" 3
extern int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ __mutex, int *__restrict__ __prioceiling) throw()
# 781 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 785 "/usr/include/pthread.h" 3
extern int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ __mutex, int __prioceiling, int *__restrict__ __old_ceiling) throw()
# 788 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 793 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent(pthread_mutex_t * __mutex) throw()
# 794 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 796 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent_np(pthread_mutex_t * __mutex) throw()
# 797 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 806 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_init(pthread_mutexattr_t * __attr) throw()
# 807 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 810 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_destroy(pthread_mutexattr_t * __attr) throw()
# 811 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 814 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 817 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 820 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setpshared(pthread_mutexattr_t * __attr, int __pshared) throw()
# 822 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 826 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __kind) throw()
# 828 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 833 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_settype(pthread_mutexattr_t * __attr, int __kind) throw()
# 834 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 838 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __protocol) throw()
# 841 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 845 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t * __attr, int __protocol) throw()
# 847 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 850 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __prioceiling) throw()
# 853 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 856 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * __attr, int __prioceiling) throw()
# 858 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 862 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 864 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 866 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 868 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 872 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust(pthread_mutexattr_t * __attr, int __robustness) throw()
# 874 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 876 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * __attr, int __robustness) throw()
# 878 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 888 "/usr/include/pthread.h" 3
extern int pthread_rwlock_init(pthread_rwlock_t *__restrict__ __rwlock, const pthread_rwlockattr_t *__restrict__ __attr) throw()
# 890 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 893 "/usr/include/pthread.h" 3
extern int pthread_rwlock_destroy(pthread_rwlock_t * __rwlock) throw()
# 894 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 897 "/usr/include/pthread.h" 3
extern int pthread_rwlock_rdlock(pthread_rwlock_t * __rwlock) throw()
# 898 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 901 "/usr/include/pthread.h" 3
extern int pthread_rwlock_tryrdlock(pthread_rwlock_t * __rwlock) throw()
# 902 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 906 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 908 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 912 "/usr/include/pthread.h" 3
extern int pthread_rwlock_wrlock(pthread_rwlock_t * __rwlock) throw()
# 913 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 916 "/usr/include/pthread.h" 3
extern int pthread_rwlock_trywrlock(pthread_rwlock_t * __rwlock) throw()
# 917 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 921 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 923 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 927 "/usr/include/pthread.h" 3
extern int pthread_rwlock_unlock(pthread_rwlock_t * __rwlock) throw()
# 928 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 934 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_init(pthread_rwlockattr_t * __attr) throw()
# 935 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 938 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t * __attr) throw()
# 939 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 942 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 945 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 948 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * __attr, int __pshared) throw()
# 950 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 953 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pref) throw()
# 956 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 959 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * __attr, int __pref) throw()
# 960 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 968 "/usr/include/pthread.h" 3
extern int pthread_cond_init(pthread_cond_t *__restrict__ __cond, const pthread_condattr_t *__restrict__ __cond_attr) throw()
# 970 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 973 "/usr/include/pthread.h" 3
extern int pthread_cond_destroy(pthread_cond_t * __cond) throw()
# 974 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 977 "/usr/include/pthread.h" 3
extern int pthread_cond_signal(pthread_cond_t * __cond) throw()
# 978 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 981 "/usr/include/pthread.h" 3
extern int pthread_cond_broadcast(pthread_cond_t * __cond) throw()
# 982 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 989 "/usr/include/pthread.h" 3
extern int pthread_cond_wait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex)
# 991 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1000 "/usr/include/pthread.h" 3
extern int pthread_cond_timedwait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime)
# 1003 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1008 "/usr/include/pthread.h" 3
extern int pthread_condattr_init(pthread_condattr_t * __attr) throw()
# 1009 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1012 "/usr/include/pthread.h" 3
extern int pthread_condattr_destroy(pthread_condattr_t * __attr) throw()
# 1013 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1016 "/usr/include/pthread.h" 3
extern int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1019 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1022 "/usr/include/pthread.h" 3
extern int pthread_condattr_setpshared(pthread_condattr_t * __attr, int __pshared) throw()
# 1023 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1027 "/usr/include/pthread.h" 3
extern int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ __attr, __clockid_t *__restrict__ __clock_id) throw()
# 1030 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1033 "/usr/include/pthread.h" 3
extern int pthread_condattr_setclock(pthread_condattr_t * __attr, __clockid_t __clock_id) throw()
# 1035 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1044 "/usr/include/pthread.h" 3
extern int pthread_spin_init(pthread_spinlock_t * __lock, int __pshared) throw()
# 1045 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1048 "/usr/include/pthread.h" 3
extern int pthread_spin_destroy(pthread_spinlock_t * __lock) throw()
# 1049 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1052 "/usr/include/pthread.h" 3
extern int pthread_spin_lock(pthread_spinlock_t * __lock) throw()
# 1053 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1056 "/usr/include/pthread.h" 3
extern int pthread_spin_trylock(pthread_spinlock_t * __lock) throw()
# 1057 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1060 "/usr/include/pthread.h" 3
extern int pthread_spin_unlock(pthread_spinlock_t * __lock) throw()
# 1061 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1068 "/usr/include/pthread.h" 3
extern int pthread_barrier_init(pthread_barrier_t *__restrict__ __barrier, const pthread_barrierattr_t *__restrict__ __attr, unsigned __count) throw()
# 1071 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1074 "/usr/include/pthread.h" 3
extern int pthread_barrier_destroy(pthread_barrier_t * __barrier) throw()
# 1075 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1078 "/usr/include/pthread.h" 3
extern int pthread_barrier_wait(pthread_barrier_t * __barrier) throw()
# 1079 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1083 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_init(pthread_barrierattr_t * __attr) throw()
# 1084 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1087 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_destroy(pthread_barrierattr_t * __attr) throw()
# 1088 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1091 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1094 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1097 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_setpshared(pthread_barrierattr_t * __attr, int __pshared) throw()
# 1099 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1111 "/usr/include/pthread.h" 3
extern int pthread_key_create(pthread_key_t * __key, void (* __destr_function)(void *)) throw()
# 1113 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1116 "/usr/include/pthread.h" 3
extern int pthread_key_delete(pthread_key_t __key) throw();
# 1119 "/usr/include/pthread.h" 3
extern void *pthread_getspecific(pthread_key_t __key) throw();
# 1122 "/usr/include/pthread.h" 3
extern int pthread_setspecific(pthread_key_t __key, const void * __pointer) throw();
# 1128 "/usr/include/pthread.h" 3
extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t * __clock_id) throw()
# 1130 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1145 "/usr/include/pthread.h" 3
extern int pthread_atfork(void (* __prepare)(void), void (* __parent)(void), void (* __child)(void)) throw();
# 1152 "/usr/include/pthread.h" 3
__attribute((__gnu_inline__)) extern inline int
# 1153 "/usr/include/pthread.h" 3
 __attribute((__leaf__)) pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 1154 "/usr/include/pthread.h" 3
{
# 1155 "/usr/include/pthread.h" 3
return __thread1 == __thread2;
# 1156 "/usr/include/pthread.h" 3
}
# 1159 "/usr/include/pthread.h" 3
}
# 47 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 101 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 102 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 103 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 105 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 106 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 107 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 111 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 113 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 115 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 116 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 118 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 120 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 121 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 122 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 124 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_init) __gthrw_pthread_cond_init __attribute((__weakref__("pthread_cond_init")));
# 125 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 126 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 127 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 128 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 129 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 131 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 132 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 133 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 134 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 135 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 236 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw___pthread_key_create __attribute((__weakref__("__pthread_key_create")));
# 247 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 248 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 249 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw___pthread_key_create));
# 251 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 252 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 659 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 660 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__args)
# 661 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 662 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 663 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 666 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 667 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 668 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 669 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 672 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 673 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 674 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 675 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 678 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 679 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 680 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 681 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 684 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 685 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 686 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 687 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 690 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 691 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 692 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 693 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 696 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 697 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 698 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 699 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 701 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return -1; }
# 702 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 705 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 706 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 707 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 708 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 711 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 712 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 713 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 714 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 717 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 718 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 719 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 720 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 723 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 724 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 725 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 726 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 729 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline void __gthread_mutex_init_function(__gthread_mutex_t *__mutex)
# 730 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 731 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 732 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__gthrw_pthread_mutex_init(__mutex, __null); }
# 733 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 736 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 737 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 738 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 739 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 741 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 742 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 745 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 746 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 747 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 748 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 750 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 751 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 754 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 755 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 756 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 757 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 759 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 760 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 764 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 765 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 766 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 767 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 768 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 770 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 771 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 775 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 776 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 777 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 778 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 780 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 781 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 808 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 809 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 810 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 811 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 814 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 815 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 816 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 817 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 821 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 822 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 823 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 824 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 825 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 829 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 830 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 831 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 832 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 835 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t *__mutex)
# 836 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 837 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_destroy(__mutex);
# 838 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 850 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 851 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 852 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 853 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 856 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 857 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 858 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 859 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 862 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 863 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 864 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 865 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 868 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 869 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 870 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 871 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 872 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 875 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 876 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__mutex)
# 877 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 878 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 879 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 882 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 883 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 884 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 885 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 151 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h" 3
#pragma GCC visibility pop
# 32 "/usr/include/x86_64-linux-gnu/c++/5/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 38 "/usr/include/c++/5/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 49 "/usr/include/c++/5/ext/atomicity.h" 3
{ return __atomic_fetch_add(__mem, __val, 4); }
# 52 "/usr/include/c++/5/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 53 "/usr/include/c++/5/ext/atomicity.h" 3
{ __atomic_fetch_add(__mem, __val, 4); }
# 65 "/usr/include/c++/5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 66 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 67 "/usr/include/c++/5/ext/atomicity.h" 3
_Atomic_word __result = *__mem;
# 68 "/usr/include/c++/5/ext/atomicity.h" 3
(*__mem) += __val;
# 69 "/usr/include/c++/5/ext/atomicity.h" 3
return __result;
# 70 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 73 "/usr/include/c++/5/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 74 "/usr/include/c++/5/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 77 "/usr/include/c++/5/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 78 "/usr/include/c++/5/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 79 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 81 "/usr/include/c++/5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 82 "/usr/include/c++/5/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 84 "/usr/include/c++/5/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 88 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 91 "/usr/include/c++/5/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 92 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 93 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 95 "/usr/include/c++/5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 96 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 98 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 102 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 105 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 39 "/usr/include/c++/5/bits/alloc_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp>
# 44 "/usr/include/c++/5/bits/alloc_traits.h" 3
class __alloctr_rebind_helper {
# 46 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class _Tp2> static constexpr true_type _S_chk(typename _Alloc2::template rebind< _Tp2> ::other *);
# 50 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class , class > static constexpr false_type _S_chk(...);
# 55 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: using __type = __decltype((_S_chk< _Alloc, _Tp> (nullptr)));
# 56 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 58 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp, bool
# 59 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __alloctr_rebind_helper< _Alloc, _Tp> ::__type::value> struct __alloctr_rebind;
# 62 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp>
# 63 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __alloctr_rebind< _Alloc, _Tp, true> {
# 65 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename _Alloc::template rebind< _Tp> ::other __type;
# 66 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 68 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< template< class , class ...> class _Alloc, class _Tp, class
# 69 "/usr/include/c++/5/bits/alloc_traits.h" 3
_Up, class ..._Args>
# 70 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __alloctr_rebind< _Alloc< _Up, _Args...> , _Tp, false> {
# 72 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef _Alloc< _Tp, _Args...> __type;
# 73 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 75 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp> using __alloc_rebind = typename __alloctr_rebind< _Alloc, _Tp> ::__type;
# 82 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc>
# 83 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct allocator_traits {
# 86 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef _Alloc allocator_type;
# 88 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename _Alloc::value_type value_type;
# 98 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::pointer _S_pointer_helper(_Tp *); static value_type *_S_pointer_helper(...); typedef __decltype((_S_pointer_helper((_Alloc *)0))) __pointer;
# 105 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __pointer pointer;
# 107 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::const_pointer _S_const_pointer_helper(_Tp *); static typename pointer_traits< __pointer> ::template rebind< const typename _Alloc::value_type> _S_const_pointer_helper(...); typedef __decltype((_S_const_pointer_helper((_Alloc *)0))) __const_pointer;
# 116 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __const_pointer const_pointer;
# 118 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::void_pointer _S_void_pointer_helper(_Tp *); static typename pointer_traits< __pointer> ::template rebind< void> _S_void_pointer_helper(...); typedef __decltype((_S_void_pointer_helper((_Alloc *)0))) __void_pointer;
# 127 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __void_pointer void_pointer;
# 129 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::const_void_pointer _S_const_void_pointer_helper(_Tp *); static typename pointer_traits< __pointer> ::template rebind< const void> _S_const_void_pointer_helper(...); typedef __decltype((_S_const_void_pointer_helper((_Alloc *)0))) __const_void_pointer;
# 138 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __const_void_pointer const_void_pointer;
# 140 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::difference_type _S_difference_type_helper(_Tp *); static typename pointer_traits< __pointer> ::difference_type _S_difference_type_helper(...); typedef __decltype((_S_difference_type_helper((_Alloc *)0))) __difference_type;
# 149 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __difference_type difference_type;
# 151 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::size_type _S_size_type_helper(_Tp *); static typename make_unsigned< __difference_type> ::type _S_size_type_helper(...); typedef __decltype((_S_size_type_helper((_Alloc *)0))) __size_type;
# 160 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __size_type size_type;
# 162 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::propagate_on_container_copy_assignment _S_propagate_on_container_copy_assignment_helper(_Tp *); static false_type _S_propagate_on_container_copy_assignment_helper(...); typedef __decltype((_S_propagate_on_container_copy_assignment_helper((_Alloc *)0))) __propagate_on_container_copy_assignment;
# 172 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __propagate_on_container_copy_assignment propagate_on_container_copy_assignment;
# 174 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::propagate_on_container_move_assignment _S_propagate_on_container_move_assignment_helper(_Tp *); static false_type _S_propagate_on_container_move_assignment_helper(...); typedef __decltype((_S_propagate_on_container_move_assignment_helper((_Alloc *)0))) __propagate_on_container_move_assignment;
# 184 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __propagate_on_container_move_assignment propagate_on_container_move_assignment;
# 186 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::propagate_on_container_swap _S_propagate_on_container_swap_helper(_Tp *); static false_type _S_propagate_on_container_swap_helper(...); typedef __decltype((_S_propagate_on_container_swap_helper((_Alloc *)0))) __propagate_on_container_swap;
# 195 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __propagate_on_container_swap propagate_on_container_swap;
# 199 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> using rebind_alloc = typename __alloctr_rebind< _Alloc, _Tp> ::__type;
# 201 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> using rebind_traits = std::allocator_traits< rebind_alloc< _Tp> > ;
# 206 "/usr/include/c++/5/bits/alloc_traits.h" 3
private:
# 205 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2>
# 206 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __allocate_helper {
# 208 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc3, class
# 209 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc3 *> ()->allocate(std::declval< size_type> (), std::declval< const_void_pointer> ()))))> static true_type
# 208 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 214 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 217 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc> (0)));
# 218 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 220 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2> using __has_allocate = typename __allocate_helper< _Alloc2> ::type;
# 223 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 224 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __has_allocate< _Alloc2> > > static pointer
# 226 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_allocate(_Alloc2 &__a, size_type __n, const_void_pointer __hint)
# 227 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n, __hint)); }
# 229 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class _UnusedHint, class
# 230 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __not_< __has_allocate< _Alloc2> > > > static pointer
# 232 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_allocate(_Alloc2 &__a, size_type __n, _UnusedHint)
# 233 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 235 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args>
# 236 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __construct_helper {
# 238 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 239 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc2 *> ()->construct(std::declval< _Tp *> (), std::declval< _Args> ()...))))> static true_type
# 238 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 243 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 246 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc> (0)));
# 247 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> using __has_construct = typename __construct_helper< _Tp, _Args...> ::type;
# 253 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> static _Require< __has_construct< _Tp, _Args...> >
# 255 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_construct(_Alloc &__a, _Tp *__p, _Args &&...__args)
# 256 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.construct(__p, std::forward< _Args> (__args)...)); }
# 258 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> static _Require< __and_< __not_< __has_construct< _Tp, _Args...> > , is_constructible< _Tp, _Args...> > >
# 262 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_construct(_Alloc &, _Tp *__p, _Args &&...__args)
# 263 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ ::new ((void *)__p) (_Tp)(std::forward< _Args> (__args)...); }
# 265 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp>
# 266 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __destroy_helper {
# 268 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 269 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc2 *> ()->destroy(std::declval< _Tp *> ()))))> static true_type
# 268 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 273 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 276 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc> (0)));
# 277 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 279 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> using __has_destroy = typename __destroy_helper< _Tp> ::type;
# 282 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> static _Require< __has_destroy< _Tp> >
# 284 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_destroy(_Alloc &__a, _Tp *__p)
# 285 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.destroy(__p)); }
# 287 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> static _Require< __not_< __has_destroy< _Tp> > >
# 289 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_destroy(_Alloc &, _Tp *__p)
# 290 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__p->~_Tp()); }
# 292 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2>
# 293 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __maxsize_helper {
# 295 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc3, class
# 296 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc3 *> ()->max_size())))> static true_type
# 295 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 299 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 302 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc2> (0)));
# 303 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 305 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2> using __has_max_size = typename __maxsize_helper< _Alloc2> ::type;
# 308 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 309 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __has_max_size< _Alloc2> > > static size_type
# 311 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_max_size(_Alloc2 &__a, int)
# 312 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.max_size()); }
# 314 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 315 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __not_< __has_max_size< _Alloc2> > > > static size_type
# 317 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_max_size(_Alloc2 &, ...)
# 318 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return __gnu_cxx::__numeric_traits< __size_type> ::__max; }
# 320 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2>
# 321 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __select_helper {
# 323 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc3, class
# 324 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc3 *> ()->select_on_container_copy_construction())))> static true_type
# 323 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 328 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 331 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc2> (0)));
# 332 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 334 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2> using __has_soccc = typename __select_helper< _Alloc2> ::type;
# 337 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 338 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __has_soccc< _Alloc2> > > static _Alloc2
# 340 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_select(_Alloc2 &__a, int)
# 341 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.select_on_container_copy_construction()); }
# 343 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 344 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __not_< __has_soccc< _Alloc2> > > > static _Alloc2
# 346 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_select(_Alloc2 &__a, ...)
# 347 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return __a; }
# 359 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: static pointer allocate(_Alloc &__a, size_type __n)
# 360 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 374 "/usr/include/c++/5/bits/alloc_traits.h" 3
static pointer allocate(_Alloc &__a, size_type __n, const_void_pointer __hint)
# 375 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return _S_allocate(__a, __n, __hint); }
# 385 "/usr/include/c++/5/bits/alloc_traits.h" 3
static void deallocate(_Alloc &__a, pointer __p, size_type __n)
# 386 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.deallocate(__p, __n)); }
# 399 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> static auto
# 400 "/usr/include/c++/5/bits/alloc_traits.h" 3
construct(_Alloc &__a, _Tp *__p, _Args &&...__args)->__decltype((_S_construct(__a, __p, std::forward< _Args> (__args)...)))
# 402 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ _S_construct(__a, __p, std::forward< _Args> (__args)...); }
# 412 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> static void
# 413 "/usr/include/c++/5/bits/alloc_traits.h" 3
destroy(_Alloc &__a, _Tp *__p)
# 414 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ _S_destroy(__a, __p); }
# 424 "/usr/include/c++/5/bits/alloc_traits.h" 3
static size_type max_size(const _Alloc &__a) noexcept
# 425 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return _S_max_size(__a, 0); }
# 436 "/usr/include/c++/5/bits/alloc_traits.h" 3
static _Alloc select_on_container_copy_construction(const _Alloc &__rhs)
# 437 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return _S_select(__rhs, 0); }
# 438 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 441 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp>
# 442 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct allocator_traits< allocator< _Tp> > {
# 445 "/usr/include/c++/5/bits/alloc_traits.h" 3
using allocator_type = allocator< _Tp> ;
# 447 "/usr/include/c++/5/bits/alloc_traits.h" 3
using value_type = _Tp;
# 450 "/usr/include/c++/5/bits/alloc_traits.h" 3
using pointer = _Tp *;
# 453 "/usr/include/c++/5/bits/alloc_traits.h" 3
using const_pointer = const _Tp *;
# 456 "/usr/include/c++/5/bits/alloc_traits.h" 3
using void_pointer = void *;
# 459 "/usr/include/c++/5/bits/alloc_traits.h" 3
using const_void_pointer = const void *;
# 462 "/usr/include/c++/5/bits/alloc_traits.h" 3
using difference_type = ptrdiff_t;
# 465 "/usr/include/c++/5/bits/alloc_traits.h" 3
using size_type = size_t;
# 468 "/usr/include/c++/5/bits/alloc_traits.h" 3
using propagate_on_container_copy_assignment = false_type;
# 471 "/usr/include/c++/5/bits/alloc_traits.h" 3
using propagate_on_container_move_assignment = true_type;
# 474 "/usr/include/c++/5/bits/alloc_traits.h" 3
using propagate_on_container_swap = false_type;
# 476 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> using rebind_alloc = allocator< _Up> ;
# 479 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> using rebind_traits = std::allocator_traits< allocator< _Up> > ;
# 490 "/usr/include/c++/5/bits/alloc_traits.h" 3
static pointer allocate(allocator_type &__a, size_type __n)
# 491 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 504 "/usr/include/c++/5/bits/alloc_traits.h" 3
static pointer allocate(allocator_type &__a, size_type __n, const_void_pointer __hint)
# 505 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n, __hint)); }
# 516 "/usr/include/c++/5/bits/alloc_traits.h" 3
static void deallocate(allocator_type &__a, pointer __p, size_type __n)
# 517 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.deallocate(__p, __n)); }
# 527 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up, class ..._Args> static void
# 529 "/usr/include/c++/5/bits/alloc_traits.h" 3
construct(allocator_type &__a, _Up *__p, _Args &&...__args)
# 530 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.construct(__p, std::forward< _Args> (__args)...)); }
# 539 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> static void
# 541 "/usr/include/c++/5/bits/alloc_traits.h" 3
destroy(allocator_type &__a, _Up *__p)
# 542 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.destroy(__p)); }
# 550 "/usr/include/c++/5/bits/alloc_traits.h" 3
static size_type max_size(const allocator_type &__a) noexcept
# 551 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.max_size()); }
# 559 "/usr/include/c++/5/bits/alloc_traits.h" 3
static allocator_type select_on_container_copy_construction(const allocator_type &__rhs)
# 560 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return __rhs; }
# 561 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 564 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 566 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_copy(_Alloc &__one, const _Alloc &__two, true_type)
# 567 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ __one = __two; }
# 569 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 571 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_copy(_Alloc &, const _Alloc &, false_type)
# 572 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ }
# 574 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 575 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_copy(_Alloc &__one, const _Alloc &__two)
# 576 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 577 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 578 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename allocator_traits< _Alloc> ::propagate_on_container_copy_assignment __pocca;
# 579 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_copy(__one, __two, __pocca());
# 580 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 582 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline _Alloc
# 583 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_copy(const _Alloc &__a)
# 584 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 585 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 586 "/usr/include/c++/5/bits/alloc_traits.h" 3
return __traits::select_on_container_copy_construction(__a);
# 587 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 589 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 590 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_move(_Alloc &__one, _Alloc &__two, true_type)
# 591 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ __one = std::move(__two); }
# 593 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 594 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_move(_Alloc &, _Alloc &, false_type)
# 595 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ }
# 597 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 598 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_move(_Alloc &__one, _Alloc &__two)
# 599 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 600 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 601 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename allocator_traits< _Alloc> ::propagate_on_container_move_assignment __pocma;
# 602 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_move(__one, __two, __pocma());
# 603 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 605 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 606 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_swap(_Alloc &__one, _Alloc &__two, true_type)
# 607 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 608 "/usr/include/c++/5/bits/alloc_traits.h" 3
using std::swap;
# 609 "/usr/include/c++/5/bits/alloc_traits.h" 3
swap(__one, __two);
# 610 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 612 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 613 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_swap(_Alloc &, _Alloc &, false_type)
# 614 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ }
# 616 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 617 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_swap(_Alloc &__one, _Alloc &__two)
# 618 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 619 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 620 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename allocator_traits< _Alloc> ::propagate_on_container_swap __pocs;
# 621 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_swap(__one, __two, __pocs());
# 622 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 624 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc>
# 625 "/usr/include/c++/5/bits/alloc_traits.h" 3
class __is_copy_insertable_impl {
# 627 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> _Traits;
# 629 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up, class
# 630 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype((_Traits::construct(std::declval< _Alloc &> (), std::declval< _Up *> (), std::declval< const _Up &> ())))> static true_type
# 629 "/usr/include/c++/5/bits/alloc_traits.h" 3
_M_select(int);
# 636 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> static false_type _M_select(...);
# 641 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __decltype((_M_select< typename _Alloc::value_type> (0))) type;
# 642 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 645 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc>
# 646 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __is_copy_insertable : public __is_copy_insertable_impl< _Alloc> ::type {
# 648 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 651 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp>
# 652 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __is_copy_insertable< allocator< _Tp> > : public is_copy_constructible< _Tp> {
# 654 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 657 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 41 "/usr/include/c++/5/ext/alloc_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Alloc>
# 47 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal : public std::false_type { };
# 49 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 50 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< std::allocator< _Tp> > : public std::true_type {
# 51 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 53 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class , class > struct array_allocator;
# 55 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp, class _Array>
# 56 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< array_allocator< _Tp, _Array> > : public std::true_type {
# 57 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 59 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct bitmap_allocator;
# 61 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 62 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< bitmap_allocator< _Tp> > : public std::true_type {
# 63 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 65 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct malloc_allocator;
# 67 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 68 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< malloc_allocator< _Tp> > : public std::true_type {
# 69 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 71 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct mt_allocator;
# 73 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 74 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< mt_allocator< _Tp> > : public std::true_type {
# 75 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 77 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > class new_allocator;
# 79 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 80 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< new_allocator< _Tp> > : public std::true_type {
# 81 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 83 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct pool_allocator;
# 85 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 86 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< pool_allocator< _Tp> > : public std::true_type {
# 87 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 94 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Alloc>
# 95 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __alloc_traits : public std::allocator_traits< _Alloc> {
# 100 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef _Alloc allocator_type;
# 102 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef ::std::allocator_traits< _Alloc> _Base_type;
# 103 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::value_type value_type;
# 104 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::pointer pointer;
# 105 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::const_pointer const_pointer;
# 106 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::size_type size_type;
# 107 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::difference_type difference_type;
# 109 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef value_type &reference;
# 110 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef const value_type &const_reference;
# 111 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::allocate;
# 112 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::deallocate;
# 113 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::construct;
# 114 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::destroy;
# 115 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::max_size;
# 119 "/usr/include/c++/5/ext/alloc_traits.h" 3
private:
# 118 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Ptr> using __is_custom_pointer = ::std::__and_< ::std::is_same< typename ::std::allocator_traits< _Alloc> ::pointer, _Ptr> , ::std::__not_< ::std::is_pointer< _Ptr> > > ;
# 127 "/usr/include/c++/5/ext/alloc_traits.h" 3
public:
# 125 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Ptr, class ..._Args> static typename ::std::enable_if< ::std::__and_< ::std::is_same< typename ::std::allocator_traits< _Alloc> ::pointer, _Ptr> , ::std::__not_< ::std::is_pointer< _Ptr> > > ::value> ::type
# 127 "/usr/include/c++/5/ext/alloc_traits.h" 3
construct(_Alloc &__a, _Ptr __p, _Args &&...__args)
# 128 "/usr/include/c++/5/ext/alloc_traits.h" 3
{
# 129 "/usr/include/c++/5/ext/alloc_traits.h" 3
_Base_type::construct(__a, ::std::addressof(*__p), ::std::forward< _Args> (__args)...);
# 131 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 134 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Ptr> static typename ::std::enable_if< ::std::__and_< ::std::is_same< typename ::std::allocator_traits< _Alloc> ::pointer, _Ptr> , ::std::__not_< ::std::is_pointer< _Ptr> > > ::value> ::type
# 136 "/usr/include/c++/5/ext/alloc_traits.h" 3
destroy(_Alloc &__a, _Ptr __p)
# 137 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ _Base_type::destroy(__a, ::std::addressof(*__p)); }
# 139 "/usr/include/c++/5/ext/alloc_traits.h" 3
static _Alloc _S_select_on_copy(const _Alloc &__a)
# 140 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::select_on_container_copy_construction(__a); }
# 142 "/usr/include/c++/5/ext/alloc_traits.h" 3
static void _S_on_swap(_Alloc &__a, _Alloc &__b)
# 143 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ ::std::__alloc_on_swap(__a, __b); }
# 145 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_propagate_on_copy_assign()
# 146 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::propagate_on_container_copy_assignment::value; }
# 148 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_propagate_on_move_assign()
# 149 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::propagate_on_container_move_assignment::value; }
# 151 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_propagate_on_swap()
# 152 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::propagate_on_container_swap::value; }
# 154 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_always_equal()
# 155 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return __allocator_always_compares_equal< _Alloc> ::value; }
# 157 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_nothrow_move()
# 158 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return (_S_propagate_on_move_assign)() || (_S_always_equal)(); }
# 160 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_nothrow_swap()
# 161 "/usr/include/c++/5/ext/alloc_traits.h" 3
{
# 162 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::swap;
# 163 "/usr/include/c++/5/ext/alloc_traits.h" 3
return (!(_S_propagate_on_swap)()) || noexcept(swap(::std::declval< _Alloc &> (), ::std::declval< _Alloc &> ()));
# 165 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 167 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 168 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct rebind {
# 169 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::template rebind_alloc< _Tp> other; };
# 210 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 213 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 46 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/5/bits/basic_string.h" 3
inline namespace __cxx11 {
# 70 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc>
# 71 "/usr/include/c++/5/bits/basic_string.h" 3
class basic_string {
# 74 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other _Char_alloc_type;
# 75 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> _Alloc_traits;
# 79 "/usr/include/c++/5/bits/basic_string.h" 3
public: typedef _Traits traits_type;
# 80 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename _Traits::char_type value_type;
# 81 "/usr/include/c++/5/bits/basic_string.h" 3
typedef _Char_alloc_type allocator_type;
# 82 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::size_type size_type;
# 83 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::difference_type difference_type;
# 84 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::reference reference;
# 85 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_reference const_reference;
# 86 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer pointer;
# 87 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer const_pointer;
# 88 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer, basic_string> iterator;
# 90 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer, basic_string> const_iterator;
# 91 "/usr/include/c++/5/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer, basic_string> > const_reverse_iterator;
# 92 "/usr/include/c++/5/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer, basic_string> > reverse_iterator;
# 95 "/usr/include/c++/5/bits/basic_string.h" 3
static const size_type npos = (static_cast< size_type>(-1));
# 102 "/usr/include/c++/5/bits/basic_string.h" 3
private: typedef const_iterator __const_iterator;
# 106 "/usr/include/c++/5/bits/basic_string.h" 3
struct _Alloc_hider : public allocator_type {
# 108 "/usr/include/c++/5/bits/basic_string.h" 3
_Alloc_hider(typename ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer __dat, const _Alloc &__a = _Alloc()) : ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::allocator_type(__a), _M_p(__dat)
# 109 "/usr/include/c++/5/bits/basic_string.h" 3
{ }
# 111 "/usr/include/c++/5/bits/basic_string.h" 3
typename ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer _M_p;
# 112 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 114 "/usr/include/c++/5/bits/basic_string.h" 3
_Alloc_hider _M_dataplus;
# 115 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_string_length;
# 117 "/usr/include/c++/5/bits/basic_string.h" 3
enum { _S_local_capacity = (15) / sizeof(_CharT)};
# 120 "/usr/include/c++/5/bits/basic_string.h" 3
union {
# 121 "/usr/include/c++/5/bits/basic_string.h" 3
_CharT _M_local_buf[(_S_local_capacity) + 1];
# 122 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_allocated_capacity;
# 123 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 126 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_data(pointer __p)
# 127 "/usr/include/c++/5/bits/basic_string.h" 3
{ ((_M_dataplus)._M_p) = __p; }
# 130 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_length(size_type __length)
# 131 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_M_string_length) = __length; }
# 134 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_data() const
# 135 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (_M_dataplus)._M_p; }
# 138 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_local_data()
# 139 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 141 "/usr/include/c++/5/bits/basic_string.h" 3
return std::pointer_traits< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer> ::pointer_to(*(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 145 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 148 "/usr/include/c++/5/bits/basic_string.h" 3
const_pointer _M_local_data() const
# 149 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 151 "/usr/include/c++/5/bits/basic_string.h" 3
return std::pointer_traits< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer> ::pointer_to(*(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 155 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 158 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_capacity(size_type __capacity)
# 159 "/usr/include/c++/5/bits/basic_string.h" 3
{ (__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity) = __capacity; }
# 162 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_set_length(size_type __n)
# 163 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 164 "/usr/include/c++/5/bits/basic_string.h" 3
_M_length(__n);
# 165 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(_M_data()[__n], _CharT());
# 166 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 169 "/usr/include/c++/5/bits/basic_string.h" 3
bool _M_is_local() const
# 170 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data() == this->_M_local_data(); }
# 174 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_create(size_type &, size_type);
# 177 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_dispose()
# 178 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 179 "/usr/include/c++/5/bits/basic_string.h" 3
if (!_M_is_local()) {
# 180 "/usr/include/c++/5/bits/basic_string.h" 3
_M_destroy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity); }
# 181 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 184 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_destroy(size_type __size) throw()
# 185 "/usr/include/c++/5/bits/basic_string.h" 3
{ _Alloc_traits::deallocate(this->_M_get_allocator(), _M_data(), __size + 1); }
# 189 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void
# 191 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(_InIterator __beg, _InIterator __end, __false_type)
# 193 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 194 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename iterator_traits< _InIterator> ::iterator_category _Tag;
# 195 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__beg, __end, _Tag());
# 196 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 200 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Integer> void
# 202 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(_Integer __beg, _Integer __end, __true_type)
# 203 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct_aux_2(static_cast< size_type>(__beg), __end); }
# 206 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_construct_aux_2(size_type __req, _CharT __c)
# 207 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__req, __c); }
# 209 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void
# 211 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(_InIterator __beg, _InIterator __end)
# 212 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 213 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __is_integer< _InIterator> ::__type _Integral;
# 214 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(__beg, __end, _Integral());
# 215 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 218 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void _M_construct(_InIterator __beg, _InIterator __end, input_iterator_tag);
# 225 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _FwdIterator> void _M_construct(_FwdIterator __beg, _FwdIterator __end, forward_iterator_tag);
# 231 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_construct(size_type __req, _CharT __c);
# 234 "/usr/include/c++/5/bits/basic_string.h" 3
allocator_type &_M_get_allocator()
# 235 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_dataplus; }
# 238 "/usr/include/c++/5/bits/basic_string.h" 3
const allocator_type &_M_get_allocator() const
# 239 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_dataplus; }
# 258 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_check(size_type __pos, const char *__s) const
# 259 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 260 "/usr/include/c++/5/bits/basic_string.h" 3
if (__pos > this->size()) {
# 261 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("%s: __pos (which is %zu) > this->size() (which is %zu)", __s, __pos, this->size()); }
# 264 "/usr/include/c++/5/bits/basic_string.h" 3
return __pos;
# 265 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 268 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_check_length(size_type __n1, size_type __n2, const char *__s) const
# 269 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 270 "/usr/include/c++/5/bits/basic_string.h" 3
if ((this->max_size() - (this->size() - __n1)) < __n2) {
# 271 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_length_error(__s); }
# 272 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 277 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_limit(size_type __pos, size_type __off) const noexcept
# 278 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 279 "/usr/include/c++/5/bits/basic_string.h" 3
const bool __testoff = __off < (this->size() - __pos);
# 280 "/usr/include/c++/5/bits/basic_string.h" 3
return __testoff ? __off : (this->size() - __pos);
# 281 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 285 "/usr/include/c++/5/bits/basic_string.h" 3
bool _M_disjunct(const _CharT *__s) const noexcept
# 286 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 287 "/usr/include/c++/5/bits/basic_string.h" 3
return less< const _CharT *> ()(__s, _M_data()) || less< const _CharT *> ()(_M_data() + this->size(), __s);
# 289 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 294 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy(_CharT *__d, const _CharT *__s, size_type __n)
# 295 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 296 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 297 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 299 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::copy(__d, __s, __n); }
# 300 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 303 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_move(_CharT *__d, const _CharT *__s, size_type __n)
# 304 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 305 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 306 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 308 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::move(__d, __s, __n); }
# 309 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 312 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_assign(_CharT *__d, size_type __n, _CharT __c)
# 313 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 314 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 315 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, __c); } else {
# 317 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(__d, __n, __c); }
# 318 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 322 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Iterator> static void
# 324 "/usr/include/c++/5/bits/basic_string.h" 3
_S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2)
# 325 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 326 "/usr/include/c++/5/bits/basic_string.h" 3
for (; __k1 != __k2; (++__k1), (++__p)) {
# 327 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__p, *__k1); }
# 328 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 331 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) noexcept
# 332 "/usr/include/c++/5/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 335 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) noexcept
# 337 "/usr/include/c++/5/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 340 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) noexcept
# 341 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_S_copy)(__p, __k1, __k2 - __k1); }
# 344 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) noexcept
# 346 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_S_copy)(__p, __k1, __k2 - __k1); }
# 349 "/usr/include/c++/5/bits/basic_string.h" 3
static int _S_compare(size_type __n1, size_type __n2) noexcept
# 350 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 351 "/usr/include/c++/5/bits/basic_string.h" 3
const difference_type __d = (difference_type)(__n1 - __n2);
# 353 "/usr/include/c++/5/bits/basic_string.h" 3
if (__d > __gnu_cxx::__numeric_traits< int> ::__max) {
# 354 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__max; } else {
# 355 "/usr/include/c++/5/bits/basic_string.h" 3
if (__d < __gnu_cxx::__numeric_traits< int> ::__min) {
# 356 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__min; } else {
# 358 "/usr/include/c++/5/bits/basic_string.h" 3
return (int)__d; } }
# 359 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 362 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_assign(const basic_string & __rcs);
# 365 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_mutate(size_type __pos, size_type __len1, const _CharT * __s, size_type __len2);
# 369 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_erase(size_type __pos, size_type __n);
# 379 "/usr/include/c++/5/bits/basic_string.h" 3
public: basic_string() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _M_dataplus(this->_M_local_data())
# 384 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 390 "/usr/include/c++/5/bits/basic_string.h" 3
explicit basic_string(const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 392 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 398 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str) : _M_dataplus(this->_M_local_data(), __str._M_get_allocator())
# 400 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct((__str._M_data()), (__str._M_data()) + __str.length()); }
# 410 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, size_type __pos, size_type
# 411 "/usr/include/c++/5/bits/basic_string.h" 3
__n = npos) : _M_dataplus(this->_M_local_data())
# 413 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 414 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *__start = (__str._M_data()) + __str._M_check(__pos, "basic_string::basic_string");
# 416 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__start, __start + __str._M_limit(__pos, __n));
# 417 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 426 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, size_type __pos, size_type
# 427 "/usr/include/c++/5/bits/basic_string.h" 3
__n, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 429 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 430 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *__start = (__str._M_data()) + __str._M_check(__pos, "string::string");
# 432 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__start, __start + __str._M_limit(__pos, __n));
# 433 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 444 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const _CharT *__s, size_type __n, const _Alloc &
# 445 "/usr/include/c++/5/bits/basic_string.h" 3
__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 447 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__s, __s + __n); }
# 454 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const _CharT *__s, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 456 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__s, (__s) ? __s + traits_type::length(__s) : (__s + npos)); }
# 464 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(size_type __n, _CharT __c, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 466 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__n, __c); }
# 476 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(basic_string &&__str) noexcept : _M_dataplus(this->_M_local_data(), std::move(__str._M_get_allocator()))
# 478 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 479 "/usr/include/c++/5/bits/basic_string.h" 3
if (__str._M_is_local())
# 480 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 481 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __str.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 483 "/usr/include/c++/5/bits/basic_string.h" 3
} else
# 485 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 486 "/usr/include/c++/5/bits/basic_string.h" 3
_M_data((__str._M_data()));
# 487 "/usr/include/c++/5/bits/basic_string.h" 3
_M_capacity(__str.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 488 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 493 "/usr/include/c++/5/bits/basic_string.h" 3
_M_length(__str.length());
# 494 "/usr/include/c++/5/bits/basic_string.h" 3
(__str._M_data(__str._M_local_data()));
# 495 "/usr/include/c++/5/bits/basic_string.h" 3
__str._M_set_length(0);
# 496 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 503 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(initializer_list< _CharT> __l, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 505 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct((__l.begin()), (__l.end())); }
# 507 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 509 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__str.begin(), __str.end()); }
# 511 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(basic_string &&__str, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 513 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 514 "/usr/include/c++/5/bits/basic_string.h" 3
if (__str.get_allocator() == __a) {
# 515 "/usr/include/c++/5/bits/basic_string.h" 3
(*this) = std::move(__str); } else {
# 517 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__str.begin(), __str.end()); }
# 518 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 529 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 530 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> >
# 534 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc &
# 535 "/usr/include/c++/5/bits/basic_string.h" 3
__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 537 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__beg, __end); }
# 542 "/usr/include/c++/5/bits/basic_string.h" 3
~basic_string()
# 543 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_dispose(); }
# 550 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(const basic_string &__str)
# 551 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign(__str)); }
# 558 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(const _CharT *__s)
# 559 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign(__s)); }
# 569 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(_CharT __c)
# 570 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 571 "/usr/include/c++/5/bits/basic_string.h" 3
(this->assign(1, __c));
# 572 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 573 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 587 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(basic_string &&__str)
# 588 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 589 "/usr/include/c++/5/bits/basic_string.h" 3
this->swap(__str);
# 590 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 591 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 598 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(initializer_list< _CharT> __l)
# 599 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 600 "/usr/include/c++/5/bits/basic_string.h" 3
(this->assign((__l.begin()), (__l.size())));
# 601 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 602 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 611 "/usr/include/c++/5/bits/basic_string.h" 3
iterator begin() noexcept
# 612 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((iterator)(_M_data())); }
# 619 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator begin() const noexcept
# 620 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)(_M_data())); }
# 627 "/usr/include/c++/5/bits/basic_string.h" 3
iterator end() noexcept
# 628 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((iterator)(_M_data() + this->size())); }
# 635 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator end() const noexcept
# 636 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)(_M_data() + this->size())); }
# 644 "/usr/include/c++/5/bits/basic_string.h" 3
reverse_iterator rbegin() noexcept
# 645 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((reverse_iterator)(this->end())); }
# 653 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator rbegin() const noexcept
# 654 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 662 "/usr/include/c++/5/bits/basic_string.h" 3
reverse_iterator rend() noexcept
# 663 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 671 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator rend() const noexcept
# 672 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 680 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator cbegin() const noexcept
# 681 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)((this->_M_data()))); }
# 688 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator cend() const noexcept
# 689 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)((this->_M_data()) + this->size())); }
# 697 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator crbegin() const noexcept
# 698 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 706 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator crend() const noexcept
# 707 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 715 "/usr/include/c++/5/bits/basic_string.h" 3
size_type size() const noexcept
# 716 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_string_length; }
# 721 "/usr/include/c++/5/bits/basic_string.h" 3
size_type length() const noexcept
# 722 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_string_length; }
# 726 "/usr/include/c++/5/bits/basic_string.h" 3
size_type max_size() const noexcept
# 727 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (_Alloc_traits::max_size(this->_M_get_allocator()) - 1) / 2; }
# 740 "/usr/include/c++/5/bits/basic_string.h" 3
void resize(size_type __n, _CharT __c);
# 753 "/usr/include/c++/5/bits/basic_string.h" 3
void resize(size_type __n)
# 754 "/usr/include/c++/5/bits/basic_string.h" 3
{ (this->resize(__n, _CharT())); }
# 759 "/usr/include/c++/5/bits/basic_string.h" 3
void shrink_to_fit() noexcept
# 760 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 762 "/usr/include/c++/5/bits/basic_string.h" 3
if (capacity() > size())
# 763 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 764 "/usr/include/c++/5/bits/basic_string.h" 3
try
# 765 "/usr/include/c++/5/bits/basic_string.h" 3
{ reserve(0); }
# 766 "/usr/include/c++/5/bits/basic_string.h" 3
catch (...)
# 767 "/usr/include/c++/5/bits/basic_string.h" 3
{ }
# 768 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 770 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 778 "/usr/include/c++/5/bits/basic_string.h" 3
size_type capacity() const noexcept
# 779 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 780 "/usr/include/c++/5/bits/basic_string.h" 3
return (_M_is_local()) ? (size_type)(_S_local_capacity) : (__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 782 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 802 "/usr/include/c++/5/bits/basic_string.h" 3
void reserve(size_type __res_arg = 0);
# 808 "/usr/include/c++/5/bits/basic_string.h" 3
void clear() noexcept
# 809 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 816 "/usr/include/c++/5/bits/basic_string.h" 3
bool empty() const noexcept
# 817 "/usr/include/c++/5/bits/basic_string.h" 3
{ return this->size() == 0; }
# 831 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference operator[](size_type __pos) const noexcept
# 832 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 833 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 834 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__pos];
# 835 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 848 "/usr/include/c++/5/bits/basic_string.h" 3
reference operator[](size_type __pos)
# 849 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 852 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 854 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 855 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__pos];
# 856 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 869 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference at(size_type __n) const
# 870 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 871 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n >= this->size()) {
# 872 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 876 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__n];
# 877 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 890 "/usr/include/c++/5/bits/basic_string.h" 3
reference at(size_type __n)
# 891 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 892 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n >= size()) {
# 893 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 897 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__n];
# 898 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 906 "/usr/include/c++/5/bits/basic_string.h" 3
reference front() noexcept
# 907 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](0); }
# 914 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference front() const noexcept
# 915 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](0); }
# 922 "/usr/include/c++/5/bits/basic_string.h" 3
reference back() noexcept
# 923 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](this->size() - 1); }
# 930 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference back() const noexcept
# 931 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](this->size() - 1); }
# 941 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(const basic_string &__str)
# 942 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append(__str)); }
# 950 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(const _CharT *__s)
# 951 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append(__s)); }
# 959 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(_CharT __c)
# 960 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 961 "/usr/include/c++/5/bits/basic_string.h" 3
this->push_back(__c);
# 962 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 963 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 972 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(initializer_list< _CharT> __l)
# 973 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append((__l.begin()), (__l.size()))); }
# 982 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const basic_string &__str)
# 983 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_append((__str._M_data()), __str.size()); }
# 999 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const basic_string &__str, size_type __pos, size_type __n)
# 1000 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_append((__str._M_data()) + __str._M_check(__pos, "basic_string::append"), __str._M_limit(__pos, __n));
# 1002 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1011 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const _CharT *__s, size_type __n)
# 1012 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1013 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1014 "/usr/include/c++/5/bits/basic_string.h" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 1015 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_append(__s, __n);
# 1016 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1024 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const _CharT *__s)
# 1025 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1026 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1027 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __n = traits_type::length(__s);
# 1028 "/usr/include/c++/5/bits/basic_string.h" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 1029 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_append(__s, __n);
# 1030 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1041 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(size_type __n, _CharT __c)
# 1042 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(this->size(), (size_type)0, __n, __c); }
# 1051 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(initializer_list< _CharT> __l)
# 1052 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append((__l.begin()), (__l.size()))); }
# 1064 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1065 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > basic_string &
# 1070 "/usr/include/c++/5/bits/basic_string.h" 3
append(_InputIterator __first, _InputIterator __last)
# 1071 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(this->end(), this->end(), __first, __last)); }
# 1078 "/usr/include/c++/5/bits/basic_string.h" 3
void push_back(_CharT __c)
# 1079 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1080 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __size = this->size();
# 1081 "/usr/include/c++/5/bits/basic_string.h" 3
if ((__size + 1) > this->capacity()) {
# 1082 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_mutate(__size, (size_type)0, 0, (size_type)1); }
# 1083 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign((this->_M_data())[__size], __c);
# 1084 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_set_length(__size + 1);
# 1085 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1093 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str)
# 1094 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1095 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_assign(__str);
# 1096 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 1097 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1109 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(basic_string &&__str)
# 1110 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1113 "/usr/include/c++/5/bits/basic_string.h" 3
return (*this) = std::move(__str);
# 1114 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1131 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str, size_type __pos, size_type __n)
# 1132 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace((size_type)0, this->size(), (__str._M_data()) + __str._M_check(__pos, "basic_string::assign"), __str._M_limit(__pos, __n));
# 1134 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1147 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s, size_type __n)
# 1148 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1149 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1150 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace((size_type)0, this->size(), __s, __n);
# 1151 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1163 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s)
# 1164 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1165 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1166 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace((size_type)0, this->size(), __s, traits_type::length(__s));
# 1168 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1180 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(size_type __n, _CharT __c)
# 1181 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux((size_type)0, this->size(), __n, __c); }
# 1192 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1193 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > basic_string &
# 1198 "/usr/include/c++/5/bits/basic_string.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 1199 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(this->begin(), this->end(), __first, __last)); }
# 1208 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(initializer_list< _CharT> __l)
# 1209 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign((__l.begin()), (__l.size()))); }
# 1229 "/usr/include/c++/5/bits/basic_string.h" 3
iterator insert(const_iterator __p, size_type __n, _CharT __c)
# 1230 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1231 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1232 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1233 "/usr/include/c++/5/bits/basic_string.h" 3
(this->replace(__p, __p, __n, __c));
# 1234 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1235 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1270 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1271 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > iterator
# 1273 "/usr/include/c++/5/bits/basic_string.h" 3
insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
# 1274 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1275 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1276 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1277 "/usr/include/c++/5/bits/basic_string.h" 3
(this->replace(__p, __p, __beg, __end));
# 1278 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1279 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1307 "/usr/include/c++/5/bits/basic_string.h" 3
void insert(iterator __p, initializer_list< _CharT> __l)
# 1308 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1309 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1310 "/usr/include/c++/5/bits/basic_string.h" 3
(this->insert(__p - this->begin(), (__l.begin()), (__l.size())));
# 1311 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1327 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str)
# 1328 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, (size_type)0, (__str._M_data()), __str.size()));
# 1329 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1350 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str, size_type
# 1351 "/usr/include/c++/5/bits/basic_string.h" 3
__pos2, size_type __n)
# 1352 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, (size_type)0, (__str._M_data()) + __str._M_check(__pos2, "basic_string::insert"), __str._M_limit(__pos2, __n)));
# 1354 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1373 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s, size_type __n)
# 1374 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos, (size_type)0, __s, __n)); }
# 1392 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s)
# 1393 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1394 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1395 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__pos, (size_type)0, __s, traits_type::length(__s)));
# 1397 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1416 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, size_type __n, _CharT __c)
# 1417 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::insert"), (size_type)0, __n, __c);
# 1418 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1434 "/usr/include/c++/5/bits/basic_string.h" 3
iterator insert(__const_iterator __p, _CharT __c)
# 1435 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1436 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1437 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1438 "/usr/include/c++/5/bits/basic_string.h" 3
_M_replace_aux(__pos, (size_type)0, (size_type)1, __c);
# 1439 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)(_M_data() + __pos));
# 1440 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1458 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &erase(size_type __pos = 0, size_type __n = npos)
# 1459 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1460 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(_M_check(__pos, "basic_string::erase"), _M_limit(__pos, __n));
# 1462 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 1463 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1474 "/usr/include/c++/5/bits/basic_string.h" 3
iterator erase(__const_iterator __position)
# 1475 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1477 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1478 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __position - this->begin();
# 1479 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(__pos, (size_type)1);
# 1480 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)(_M_data() + __pos));
# 1481 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1493 "/usr/include/c++/5/bits/basic_string.h" 3
iterator erase(__const_iterator __first, __const_iterator __last)
# 1494 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1496 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1497 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __first - this->begin();
# 1498 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(__pos, __last - __first);
# 1499 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1500 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1509 "/usr/include/c++/5/bits/basic_string.h" 3
void pop_back() noexcept
# 1510 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_erase(size() - 1, 1); }
# 1531 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n, const basic_string &__str)
# 1532 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos, __n, (__str._M_data()), __str.size())); }
# 1553 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1554 "/usr/include/c++/5/bits/basic_string.h" 3
__pos2, size_type __n2)
# 1555 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, __n1, (__str._M_data()) + __str._M_check(__pos2, "basic_string::replace"), __str._M_limit(__pos2, __n2)));
# 1557 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1578 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 1579 "/usr/include/c++/5/bits/basic_string.h" 3
__n2)
# 1580 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1581 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1582 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __s, __n2);
# 1584 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1603 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s)
# 1604 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1605 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1606 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__pos, __n1, __s, traits_type::length(__s)));
# 1607 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1627 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
# 1628 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __n2, __c);
# 1629 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1645 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const basic_string &
# 1646 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 1647 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__i1, __i2, (__str._M_data()), __str.size())); }
# 1665 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *
# 1666 "/usr/include/c++/5/bits/basic_string.h" 3
__s, size_type __n)
# 1667 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1669 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1670 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __s, __n));
# 1671 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1687 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *__s)
# 1688 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1689 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1690 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1, __i2, __s, traits_type::length(__s)));
# 1691 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1708 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, size_type __n, _CharT
# 1709 "/usr/include/c++/5/bits/basic_string.h" 3
__c)
# 1710 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1712 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1713 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace_aux(__i1 - this->begin(), __i2 - __i1, __n, __c);
# 1714 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1732 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1733 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > basic_string &
# 1735 "/usr/include/c++/5/bits/basic_string.h" 3
replace(const_iterator __i1, const_iterator __i2, _InputIterator
# 1736 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, _InputIterator __k2)
# 1737 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1739 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1740 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1741 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->_M_replace_dispatch(__i1, __i2, __k1, __k2, __false_type()));
# 1743 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1765 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, _CharT *
# 1766 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, _CharT *__k2)
# 1767 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1769 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1770 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1771 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __k1, __k2 - __k1));
# 1773 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1776 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *
# 1777 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, const _CharT *__k2)
# 1778 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1780 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1781 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1782 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __k1, __k2 - __k1));
# 1784 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1787 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, iterator
# 1788 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, iterator __k2)
# 1789 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1791 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1792 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1793 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1795 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1798 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const_iterator
# 1799 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, const_iterator __k2)
# 1800 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1802 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1803 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1804 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1806 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1823 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(const_iterator __i1, const_iterator __i2, initializer_list< _CharT>
# 1824 "/usr/include/c++/5/bits/basic_string.h" 3
__l)
# 1825 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__i1, __i2, (__l.begin()), (__l.end()))); }
# 1831 "/usr/include/c++/5/bits/basic_string.h" 3
private:
# 1829 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Integer> basic_string &
# 1831 "/usr/include/c++/5/bits/basic_string.h" 3
_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _Integer
# 1832 "/usr/include/c++/5/bits/basic_string.h" 3
__n, _Integer __val, __true_type)
# 1833 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(__i1 - this->begin(), __i2 - __i1, __n, __val); }
# 1835 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> basic_string &_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _InputIterator __k1, _InputIterator __k2, __false_type);
# 1842 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
# 1846 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_replace(size_type __pos, size_type __len1, const _CharT * __s, const size_type __len2);
# 1850 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_append(const _CharT * __s, size_type __n);
# 1867 "/usr/include/c++/5/bits/basic_string.h" 3
public: size_type copy(_CharT * __s, size_type __n, size_type __pos = 0) const;
# 1877 "/usr/include/c++/5/bits/basic_string.h" 3
void swap(basic_string & __s) noexcept;
# 1887 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *c_str() const noexcept
# 1888 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data(); }
# 1897 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *data() const noexcept
# 1898 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data(); }
# 1904 "/usr/include/c++/5/bits/basic_string.h" 3
allocator_type get_allocator() const noexcept
# 1905 "/usr/include/c++/5/bits/basic_string.h" 3
{ return this->_M_get_allocator(); }
# 1920 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const _CharT * __s, size_type __pos, size_type __n) const;
# 1933 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const basic_string &__str, size_type __pos = 0) const noexcept
# 1935 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find(__str.data(), __pos, __str.size())); }
# 1948 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const _CharT *__s, size_type __pos = 0) const
# 1949 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1950 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1951 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find(__s, __pos, traits_type::length(__s)));
# 1952 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1965 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(_CharT __c, size_type __pos = 0) const noexcept;
# 1978 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const basic_string &__str, size_type __pos = npos) const noexcept
# 1980 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->rfind(__str.data(), __pos, __str.size())); }
# 1995 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const _CharT * __s, size_type __pos, size_type __n) const;
# 2008 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const _CharT *__s, size_type __pos = npos) const
# 2009 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2010 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2011 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->rfind(__s, __pos, traits_type::length(__s)));
# 2012 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2025 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(_CharT __c, size_type __pos = npos) const noexcept;
# 2039 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const basic_string &__str, size_type __pos = 0) const noexcept
# 2041 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_first_of(__str.data(), __pos, __str.size())); }
# 2056 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2069 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const _CharT *__s, size_type __pos = 0) const
# 2070 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2071 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2072 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_first_of(__s, __pos, traits_type::length(__s)));
# 2073 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2088 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(_CharT __c, size_type __pos = 0) const noexcept
# 2089 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find(__c, __pos)); }
# 2103 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const basic_string &__str, size_type __pos = npos) const noexcept
# 2105 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_last_of(__str.data(), __pos, __str.size())); }
# 2120 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2133 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const _CharT *__s, size_type __pos = npos) const
# 2134 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2135 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2136 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_last_of(__s, __pos, traits_type::length(__s)));
# 2137 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2152 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(_CharT __c, size_type __pos = npos) const noexcept
# 2153 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->rfind(__c, __pos)); }
# 2166 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const basic_string &__str, size_type __pos = 0) const noexcept
# 2168 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_first_not_of(__str.data(), __pos, __str.size())); }
# 2183 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2197 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT *__s, size_type __pos = 0) const
# 2198 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2199 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2200 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_first_not_of(__s, __pos, traits_type::length(__s)));
# 2201 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2214 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(_CharT __c, size_type __pos = 0) const noexcept;
# 2229 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const basic_string &__str, size_type __pos = npos) const noexcept
# 2231 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_last_not_of(__str.data(), __pos, __str.size())); }
# 2246 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2260 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT *__s, size_type __pos = npos) const
# 2261 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2262 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2263 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_last_not_of(__s, __pos, traits_type::length(__s)));
# 2264 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2277 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(_CharT __c, size_type __pos = npos) const noexcept;
# 2293 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string substr(size_type __pos = 0, size_type __n = npos) const
# 2294 "/usr/include/c++/5/bits/basic_string.h" 3
{ return basic_string(*this, _M_check(__pos, "basic_string::substr"), __n);
# 2295 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2312 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(const basic_string &__str) const
# 2313 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2314 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __size = this->size();
# 2315 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __osize = __str.size();
# 2316 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __len = std::min(__size, __osize);
# 2318 "/usr/include/c++/5/bits/basic_string.h" 3
int __r = traits_type::compare(_M_data(), __str.data(), __len);
# 2319 "/usr/include/c++/5/bits/basic_string.h" 3
if (!__r) {
# 2320 "/usr/include/c++/5/bits/basic_string.h" 3
__r = (_S_compare)(__size, __osize); }
# 2321 "/usr/include/c++/5/bits/basic_string.h" 3
return __r;
# 2322 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2344 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n, const basic_string & __str) const;
# 2370 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos1, size_type __n1, const basic_string & __str, size_type __pos2, size_type __n2) const;
# 2388 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(const _CharT * __s) const;
# 2412 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s) const;
# 2439 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s, size_type __n2) const;
# 2441 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 2442 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4781 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4783 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4784 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4785 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4786 "/usr/include/c++/5/bits/basic_string.h" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 4787 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append(__rhs));
# 4788 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4789 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4797 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> operator+(const _CharT * __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 4808 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> operator+(_CharT __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 4818 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4820 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4821 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4822 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4823 "/usr/include/c++/5/bits/basic_string.h" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 4824 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append(__rhs));
# 4825 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4826 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4834 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4836 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, _CharT __rhs)
# 4837 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4838 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 4839 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 4840 "/usr/include/c++/5/bits/basic_string.h" 3
__string_type __str(__lhs);
# 4841 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append((__size_type)1, __rhs));
# 4842 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4843 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4846 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4848 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4849 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4850 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__lhs.append(__rhs))); }
# 4852 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4854 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4855 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4856 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__rhs.insert(0, __lhs))); }
# 4858 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4860 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4861 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4862 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4863 "/usr/include/c++/5/bits/basic_string.h" 3
const auto __size = (__lhs.size()) + (__rhs.size());
# 4864 "/usr/include/c++/5/bits/basic_string.h" 3
const bool __cond = (__size > (__lhs.capacity())) && (__size <= (__rhs.capacity()));
# 4866 "/usr/include/c++/5/bits/basic_string.h" 3
return __cond ? std::move((__rhs.insert(0, __lhs))) : std::move((__lhs.append(__rhs)));
# 4868 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4870 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4872 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const _CharT *__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4873 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4874 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__rhs.insert(0, __lhs))); }
# 4876 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4878 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(_CharT __lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4879 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4880 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__rhs.insert(0, 1, __lhs))); }
# 4882 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4884 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, const _CharT *
# 4885 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4886 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__lhs.append(__rhs))); }
# 4888 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4890 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, _CharT
# 4891 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4892 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__lhs.append(1, __rhs))); }
# 4902 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4904 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4905 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4906 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 4908 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT> inline typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, bool> ::__type
# 4911 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__lhs, const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &
# 4912 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4913 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((__lhs.size()) == (__rhs.size())) && (!std::char_traits< _CharT> ::compare((__lhs.data()), (__rhs.data()), (__lhs.size())));
# 4915 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4923 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4925 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4926 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4927 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) == 0; }
# 4935 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4937 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4938 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4939 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 4948 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4950 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4951 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4952 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4960 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4962 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4963 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4964 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4972 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4974 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4975 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4976 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4985 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4987 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4988 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4989 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 4997 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4999 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5000 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5001 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 5009 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5011 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5012 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5013 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) > 0; }
# 5022 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5024 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5025 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5026 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 5034 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5036 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5037 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5038 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 5046 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5048 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5049 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5050 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) < 0; }
# 5059 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5061 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5062 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5063 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 5071 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5073 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5074 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5075 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 5083 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5085 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5086 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5087 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) >= 0; }
# 5096 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5098 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5099 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5100 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 5108 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5110 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5111 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5112 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 5120 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5122 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5123 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5124 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) <= 0; }
# 5133 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline void
# 5135 "/usr/include/c++/5/bits/basic_string.h" 3
swap(__cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5136 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5137 "/usr/include/c++/5/bits/basic_string.h" 3
{ (__lhs.swap(__rhs)); }
# 5152 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __is, __cxx11::basic_string< _CharT, _Traits, _Alloc> & __str);
# 5159 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< char> &operator>>(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 5170 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_ostream< _CharT, _Traits> &
# 5172 "/usr/include/c++/5/bits/basic_string.h" 3
operator<<(basic_ostream< _CharT, _Traits> &__os, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5173 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5174 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5177 "/usr/include/c++/5/bits/basic_string.h" 3
return __ostream_insert(__os, (__str.data()), (__str.size()));
# 5178 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5193 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &getline(basic_istream< _CharT, _Traits> & __is, __cxx11::basic_string< _CharT, _Traits, _Alloc> & __str, _CharT __delim);
# 5210 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5212 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5213 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5214 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str, (__is.widen('\n'))); }
# 5218 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5220 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &&__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5221 "/usr/include/c++/5/bits/basic_string.h" 3
__str, _CharT __delim)
# 5222 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str, __delim); }
# 5225 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5227 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &&__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5228 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5229 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str); }
# 5234 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< char> &getline(basic_istream< char> & __in, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 5240 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __in, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 5245 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 29 "/usr/include/stdio.h" 3
extern "C" {
# 25 "/usr/include/_G_config.h" 3
typedef
# 22 "/usr/include/_G_config.h" 3
struct {
# 23 "/usr/include/_G_config.h" 3
__off_t __pos;
# 24 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 25 "/usr/include/_G_config.h" 3
} _G_fpos_t;
# 30 "/usr/include/_G_config.h" 3
typedef
# 27 "/usr/include/_G_config.h" 3
struct {
# 28 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 29 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 30 "/usr/include/_G_config.h" 3
} _G_fpos64_t;
# 144 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 150 "/usr/include/libio.h" 3
typedef void _IO_lock_t;
# 156 "/usr/include/libio.h" 3
struct _IO_marker {
# 157 "/usr/include/libio.h" 3
_IO_marker *_next;
# 158 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 162 "/usr/include/libio.h" 3
int _pos;
# 173 "/usr/include/libio.h" 3
};
# 176 "/usr/include/libio.h" 3
enum __codecvt_result {
# 178 "/usr/include/libio.h" 3
__codecvt_ok,
# 179 "/usr/include/libio.h" 3
__codecvt_partial,
# 180 "/usr/include/libio.h" 3
__codecvt_error,
# 181 "/usr/include/libio.h" 3
__codecvt_noconv
# 182 "/usr/include/libio.h" 3
};
# 241 "/usr/include/libio.h" 3
struct _IO_FILE {
# 242 "/usr/include/libio.h" 3
int _flags;
# 247 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 248 "/usr/include/libio.h" 3
char *_IO_read_end;
# 249 "/usr/include/libio.h" 3
char *_IO_read_base;
# 250 "/usr/include/libio.h" 3
char *_IO_write_base;
# 251 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 252 "/usr/include/libio.h" 3
char *_IO_write_end;
# 253 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 254 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 256 "/usr/include/libio.h" 3
char *_IO_save_base;
# 257 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 258 "/usr/include/libio.h" 3
char *_IO_save_end;
# 260 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 262 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 264 "/usr/include/libio.h" 3
int _fileno;
# 268 "/usr/include/libio.h" 3
int _flags2;
# 270 "/usr/include/libio.h" 3
__off_t _old_offset;
# 274 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 275 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 276 "/usr/include/libio.h" 3
char _shortbuf[1];
# 280 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3
__off64_t _offset;
# 297 "/usr/include/libio.h" 3
void *__pad1;
# 298 "/usr/include/libio.h" 3
void *__pad2;
# 299 "/usr/include/libio.h" 3
void *__pad3;
# 300 "/usr/include/libio.h" 3
void *__pad4;
# 302 "/usr/include/libio.h" 3
::size_t __pad5;
# 303 "/usr/include/libio.h" 3
int _mode;
# 305 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(::size_t)];
# 307 "/usr/include/libio.h" 3
};
# 313 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 315 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdin_;
# 316 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdout_;
# 317 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3
typedef __ssize_t __io_read_fn(void * __cookie, char * __buf, ::size_t __nbytes);
# 341 "/usr/include/libio.h" 3
typedef __ssize_t __io_write_fn(void * __cookie, const char * __buf, ::size_t __n);
# 350 "/usr/include/libio.h" 3
typedef int __io_seek_fn(void * __cookie, __off64_t * __pos, int __w);
# 353 "/usr/include/libio.h" 3
typedef int __io_close_fn(void * __cookie);
# 358 "/usr/include/libio.h" 3
typedef __io_read_fn cookie_read_function_t;
# 359 "/usr/include/libio.h" 3
typedef __io_write_fn cookie_write_function_t;
# 360 "/usr/include/libio.h" 3
typedef __io_seek_fn cookie_seek_function_t;
# 361 "/usr/include/libio.h" 3
typedef __io_close_fn cookie_close_function_t;
# 370 "/usr/include/libio.h" 3
typedef
# 365 "/usr/include/libio.h" 3
struct {
# 366 "/usr/include/libio.h" 3
__io_read_fn *read;
# 367 "/usr/include/libio.h" 3
__io_write_fn *write;
# 368 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 369 "/usr/include/libio.h" 3
__io_close_fn *close;
# 370 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t;
# 371 "/usr/include/libio.h" 3
typedef _IO_cookie_io_functions_t cookie_io_functions_t;
# 373 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 376 "/usr/include/libio.h" 3
extern void _IO_cookie_init(_IO_cookie_file * __cfile, int __read_write, void * __cookie, _IO_cookie_io_functions_t __fns);
# 382 "/usr/include/libio.h" 3
extern "C" {
# 385 "/usr/include/libio.h" 3
extern int __underflow(_IO_FILE *);
# 386 "/usr/include/libio.h" 3
extern int __uflow(_IO_FILE *);
# 387 "/usr/include/libio.h" 3
extern int __overflow(_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3
extern int _IO_getc(_IO_FILE * __fp);
# 430 "/usr/include/libio.h" 3
extern int _IO_putc(int __c, _IO_FILE * __fp);
# 431 "/usr/include/libio.h" 3
extern int _IO_feof(_IO_FILE * __fp) throw();
# 432 "/usr/include/libio.h" 3
extern int _IO_ferror(_IO_FILE * __fp) throw();
# 434 "/usr/include/libio.h" 3
extern int _IO_peekc_locked(_IO_FILE * __fp);
# 440 "/usr/include/libio.h" 3
extern void _IO_flockfile(_IO_FILE *) throw();
# 441 "/usr/include/libio.h" 3
extern void _IO_funlockfile(_IO_FILE *) throw();
# 442 "/usr/include/libio.h" 3
extern int _IO_ftrylockfile(_IO_FILE *) throw();
# 459 "/usr/include/libio.h" 3
extern int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 461 "/usr/include/libio.h" 3
extern int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 463 "/usr/include/libio.h" 3
extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 464 "/usr/include/libio.h" 3
extern ::size_t _IO_sgetn(_IO_FILE *, void *, ::size_t);
# 466 "/usr/include/libio.h" 3
extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 467 "/usr/include/libio.h" 3
extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 469 "/usr/include/libio.h" 3
extern void _IO_free_backup_area(_IO_FILE *) throw();
# 521 "/usr/include/libio.h" 3
}
# 79 "/usr/include/stdio.h" 3
typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3
typedef _G_fpos_t fpos_t;
# 116 "/usr/include/stdio.h" 3
typedef _G_fpos64_t fpos64_t;
# 168 "/usr/include/stdio.h" 3
extern _IO_FILE *stdin;
# 169 "/usr/include/stdio.h" 3
extern _IO_FILE *stdout;
# 170 "/usr/include/stdio.h" 3
extern _IO_FILE *stderr;
# 178 "/usr/include/stdio.h" 3
extern int remove(const char * __filename) throw();
# 180 "/usr/include/stdio.h" 3
extern int rename(const char * __old, const char * __new) throw();
# 185 "/usr/include/stdio.h" 3
extern int renameat(int __oldfd, const char * __old, int __newfd, const char * __new) throw();
# 195 "/usr/include/stdio.h" 3
extern FILE *tmpfile() __attribute((__warn_unused_result__));
# 205 "/usr/include/stdio.h" 3
extern FILE *tmpfile64() __attribute((__warn_unused_result__));
# 209 "/usr/include/stdio.h" 3
extern char *tmpnam(char * __s) throw() __attribute((__warn_unused_result__));
# 215 "/usr/include/stdio.h" 3
extern char *tmpnam_r(char * __s) throw() __attribute((__warn_unused_result__));
# 227 "/usr/include/stdio.h" 3
extern char *tempnam(const char * __dir, const char * __pfx) throw()
# 228 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__warn_unused_result__));
# 237 "/usr/include/stdio.h" 3
extern int fclose(FILE * __stream);
# 242 "/usr/include/stdio.h" 3
extern int fflush(FILE * __stream);
# 252 "/usr/include/stdio.h" 3
extern int fflush_unlocked(FILE * __stream);
# 262 "/usr/include/stdio.h" 3
extern int fcloseall();
# 272 "/usr/include/stdio.h" 3
extern FILE *fopen(const char *__restrict__ __filename, const char *__restrict__ __modes)
# 273 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 278 "/usr/include/stdio.h" 3
extern FILE *freopen(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream)
# 280 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 297 "/usr/include/stdio.h" 3
extern FILE *fopen64(const char *__restrict__ __filename, const char *__restrict__ __modes)
# 298 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 299 "/usr/include/stdio.h" 3
extern FILE *freopen64(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream)
# 301 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 306 "/usr/include/stdio.h" 3
extern FILE *fdopen(int __fd, const char * __modes) throw() __attribute((__warn_unused_result__));
# 312 "/usr/include/stdio.h" 3
extern FILE *fopencookie(void *__restrict__ __magic_cookie, const char *__restrict__ __modes, _IO_cookie_io_functions_t __io_funcs) throw()
# 314 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 319 "/usr/include/stdio.h" 3
extern FILE *fmemopen(void * __s, ::size_t __len, const char * __modes) throw()
# 320 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 325 "/usr/include/stdio.h" 3
extern FILE *open_memstream(char ** __bufloc, ::size_t * __sizeloc) throw() __attribute((__warn_unused_result__));
# 332 "/usr/include/stdio.h" 3
extern void setbuf(FILE *__restrict__ __stream, char *__restrict__ __buf) throw();
# 336 "/usr/include/stdio.h" 3
extern int setvbuf(FILE *__restrict__ __stream, char *__restrict__ __buf, int __modes, ::size_t __n) throw();
# 343 "/usr/include/stdio.h" 3
extern void setbuffer(FILE *__restrict__ __stream, char *__restrict__ __buf, ::size_t __size) throw();
# 347 "/usr/include/stdio.h" 3
extern void setlinebuf(FILE * __stream) throw();
# 356 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int fprintf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...);
# 362 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int printf(const char *__restrict__ __format, ...);
# 364 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int sprintf(char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 371 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vfprintf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg);
# 377 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vprintf(const char *__restrict__ __format, __gnuc_va_list __arg);
# 379 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vsprintf(char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw();
# 386 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int snprintf(char *__restrict__ __s, ::size_t __maxlen, const char *__restrict__ __format, ...) throw()
# 388 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 390 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vsnprintf(char *__restrict__ __s, ::size_t __maxlen, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 392 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 399 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vasprintf(char **__restrict__ __ptr, const char *__restrict__ __f, __gnuc_va_list __arg) throw()
# 401 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0))) __attribute((__warn_unused_result__));
# 402 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 404 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__));
# 405 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 407 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3))) __attribute((__warn_unused_result__));
# 412 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 414 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 415 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 416 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 425 "/usr/include/stdio.h" 3
extern int fscanf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...)
# 426 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 431 "/usr/include/stdio.h" 3
extern int scanf(const char *__restrict__ __format, ...) __attribute((__warn_unused_result__));
# 433 "/usr/include/stdio.h" 3
extern int sscanf(const char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 471 "/usr/include/stdio.h" 3
extern int vfscanf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg)
# 473 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0))) __attribute((__warn_unused_result__));
# 479 "/usr/include/stdio.h" 3
extern int vscanf(const char *__restrict__ __format, __gnuc_va_list __arg)
# 480 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0))) __attribute((__warn_unused_result__));
# 483 "/usr/include/stdio.h" 3
extern int vsscanf(const char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 485 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 531 "/usr/include/stdio.h" 3
extern int fgetc(FILE * __stream);
# 532 "/usr/include/stdio.h" 3
extern int getc(FILE * __stream);
# 538 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int getchar();
# 550 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int getc_unlocked(FILE * __stream);
# 551 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int getchar_unlocked();
# 561 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int fgetc_unlocked(FILE * __stream);
# 573 "/usr/include/stdio.h" 3
extern int fputc(int __c, FILE * __stream);
# 574 "/usr/include/stdio.h" 3
extern int putc(int __c, FILE * __stream);
# 580 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int putchar(int __c);
# 594 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int fputc_unlocked(int __c, FILE * __stream);
# 602 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int putc_unlocked(int __c, FILE * __stream);
# 603 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int putchar_unlocked(int __c);
# 610 "/usr/include/stdio.h" 3
extern int getw(FILE * __stream);
# 613 "/usr/include/stdio.h" 3
extern int putw(int __w, FILE * __stream);
# 622 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline char *fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 623 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 638 "/usr/include/stdio.h" 3
extern char *gets(char * __s) __attribute((__warn_unused_result__)) __attribute((__deprecated__));
# 649 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline char *fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 650 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 665 "/usr/include/stdio.h" 3
extern __ssize_t __getdelim(char **__restrict__ __lineptr, ::size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream)
# 667 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 668 "/usr/include/stdio.h" 3
extern __ssize_t getdelim(char **__restrict__ __lineptr, ::size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream)
# 670 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 678 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline __ssize_t getline(char **__restrict__ __lineptr, ::size_t *__restrict__ __n, FILE *__restrict__ __stream)
# 680 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 689 "/usr/include/stdio.h" 3
extern int fputs(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 695 "/usr/include/stdio.h" 3
extern int puts(const char * __s);
# 702 "/usr/include/stdio.h" 3
extern int ungetc(int __c, FILE * __stream);
# 709 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline ::size_t fread(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream)
# 710 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 715 "/usr/include/stdio.h" 3
extern ::size_t fwrite(const void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __s);
# 726 "/usr/include/stdio.h" 3
extern int fputs_unlocked(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 737 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline ::size_t fread_unlocked(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream)
# 738 "/usr/include/stdio.h" 3
 __attribute((__warn_unused_result__));
# 739 "/usr/include/stdio.h" 3
extern ::size_t fwrite_unlocked(const void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream);
# 749 "/usr/include/stdio.h" 3
extern int fseek(FILE * __stream, long __off, int __whence);
# 754 "/usr/include/stdio.h" 3
extern long ftell(FILE * __stream) __attribute((__warn_unused_result__));
# 759 "/usr/include/stdio.h" 3
extern void rewind(FILE * __stream);
# 773 "/usr/include/stdio.h" 3
extern int fseeko(FILE * __stream, __off_t __off, int __whence);
# 778 "/usr/include/stdio.h" 3
extern __off_t ftello(FILE * __stream) __attribute((__warn_unused_result__));
# 798 "/usr/include/stdio.h" 3
extern int fgetpos(FILE *__restrict__ __stream, fpos_t *__restrict__ __pos);
# 803 "/usr/include/stdio.h" 3
extern int fsetpos(FILE * __stream, const fpos_t * __pos);
# 818 "/usr/include/stdio.h" 3
extern int fseeko64(FILE * __stream, __off64_t __off, int __whence);
# 819 "/usr/include/stdio.h" 3
extern __off64_t ftello64(FILE * __stream) __attribute((__warn_unused_result__));
# 820 "/usr/include/stdio.h" 3
extern int fgetpos64(FILE *__restrict__ __stream, fpos64_t *__restrict__ __pos);
# 821 "/usr/include/stdio.h" 3
extern int fsetpos64(FILE * __stream, const fpos64_t * __pos);
# 826 "/usr/include/stdio.h" 3
extern void clearerr(FILE * __stream) throw();
# 828 "/usr/include/stdio.h" 3
extern int feof(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 830 "/usr/include/stdio.h" 3
extern int ferror(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 835 "/usr/include/stdio.h" 3
extern void clearerr_unlocked(FILE * __stream) throw();
# 836 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int feof_unlocked(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 837 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int ferror_unlocked(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 846 "/usr/include/stdio.h" 3
extern void perror(const char * __s);
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern int sys_nerr;
# 27 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern const char *const sys_errlist[];
# 30 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern int _sys_nerr;
# 31 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern const char *const _sys_errlist[];
# 858 "/usr/include/stdio.h" 3
extern int fileno(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 863 "/usr/include/stdio.h" 3
extern int fileno_unlocked(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 872 "/usr/include/stdio.h" 3
extern FILE *popen(const char * __command, const char * __modes) __attribute((__warn_unused_result__));
# 878 "/usr/include/stdio.h" 3
extern int pclose(FILE * __stream);
# 884 "/usr/include/stdio.h" 3
extern char *ctermid(char * __s) throw();
# 890 "/usr/include/stdio.h" 3
extern char *cuserid(char * __s);
# 895 "/usr/include/stdio.h" 3
struct obstack;
# 898 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __format, ...) throw()
# 900 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 901 "/usr/include/stdio.h" 3
extern __attribute((gnu_inline)) inline int obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __format, __gnuc_va_list __args) throw()
# 904 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 912 "/usr/include/stdio.h" 3
extern void flockfile(FILE * __stream) throw();
# 916 "/usr/include/stdio.h" 3
extern int ftrylockfile(FILE * __stream) throw() __attribute((__warn_unused_result__));
# 919 "/usr/include/stdio.h" 3
extern void funlockfile(FILE * __stream) throw();
# 43 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 44 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar()
# 45 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return _IO_getc(stdin);
# 47 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 53 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fgetc_unlocked(FILE *__fp)
# 54 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 56 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 62 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 63 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getc_unlocked(FILE *__fp)
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 65 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__fp->_IO_read_ptr) >= (__fp->_IO_read_end), 0)) ? __uflow(__fp) : (*((unsigned char *)((__fp->_IO_read_ptr)++)));
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 69 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 70 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getchar_unlocked()
# 71 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 72 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdin->_IO_read_ptr) >= (stdin->_IO_read_end), 0)) ? __uflow(stdin) : (*((unsigned char *)((stdin->_IO_read_ptr)++)));
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 78 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 79 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar(int __c)
# 80 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 81 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return _IO_putc(__c, stdout);
# 82 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 87 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 88 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
fputc_unlocked(int __c, FILE *__stream)
# 89 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 91 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 97 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 98 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putc_unlocked(int __c, FILE *__stream)
# 99 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 100 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((__stream->_IO_write_ptr) >= (__stream->_IO_write_end), 0)) ? __overflow(__stream, (unsigned char)__c) : ((unsigned char)((*((__stream->_IO_write_ptr)++)) = __c));
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
putchar_unlocked(int __c)
# 106 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 107 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return (__builtin_expect((stdout->_IO_write_ptr) >= (stdout->_IO_write_end), 0)) ? __overflow(stdout, (unsigned char)__c) : ((unsigned char)((*((stdout->_IO_write_ptr)++)) = __c));
# 108 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 114 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline __ssize_t
# 115 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
getline(char **__lineptr, ::size_t *__n, FILE *__stream)
# 116 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return __getdelim(__lineptr, __n, '\n', __stream);
# 118 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 124 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 125 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
 __attribute((__leaf__)) feof_unlocked(FILE *__stream) throw()
# 126 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 16) != 0;
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
__attribute((__gnu_inline__)) extern inline int
# 132 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
 __attribute((__leaf__)) ferror_unlocked(FILE *__stream) throw()
# 133 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
{
# 134 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
return ((__stream->_flags) & 32) != 0;
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3
}
# 23 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __sprintf_chk(char *__restrict__ __s, int __flag, ::size_t __slen, const char *__restrict__ __format, ...) throw();
# 25 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vsprintf_chk(char *__restrict__ __s, int __flag, ::size_t __slen, const char *__restrict__ __format, __gnuc_va_list __ap) throw();
# 30 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 31 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) sprintf(char *__restrict__ __s, const char *__restrict__ __fmt, ...) throw()
# 32 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 33 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___sprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 35 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 42 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 43 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) vsprintf(char *__restrict__ __s, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 45 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsprintf_chk(__s, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 48 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 52 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __snprintf_chk(char *__restrict__ __s, ::size_t __n, int __flag, ::size_t __slen, const char *__restrict__ __format, ...) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vsnprintf_chk(char *__restrict__ __s, ::size_t __n, int __flag, ::size_t __slen, const char *__restrict__ __format, __gnuc_va_list __ap) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 61 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) snprintf(char *__restrict__ __s, ::size_t __n, const char *__restrict__ __fmt, ...) throw()
# 63 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 64 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___snprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __builtin_va_arg_pack());
# 66 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 74 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) vsnprintf(char *__restrict__ __s, ::size_t __n, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 76 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 77 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __builtin___vsnprintf_chk(__s, __n, 2 - 1, __builtin_object_size(__s, 2 > 1), __fmt, __ap);
# 79 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 85 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __fprintf_chk(FILE *__restrict__ __stream, int __flag, const char *__restrict__ __format, ...);
# 87 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __printf_chk(int __flag, const char *__restrict__ __format, ...);
# 88 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vfprintf_chk(FILE *__restrict__ __stream, int __flag, const char *__restrict__ __format, __gnuc_va_list __ap);
# 90 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vprintf_chk(int __flag, const char *__restrict__ __format, __gnuc_va_list __ap);
# 94 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 95 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fprintf(FILE *__restrict__ __stream, const char *__restrict__ __fmt, ...)
# 96 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 97 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fprintf_chk(__stream, 2 - 1, __fmt, __builtin_va_arg_pack());
# 99 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 101 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 102 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
printf(const char *__restrict__ __fmt, ...)
# 103 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 104 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __printf_chk(2 - 1, __fmt, __builtin_va_arg_pack());
# 105 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 113 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 114 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vprintf(const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 115 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 117 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(stdout, 2 - 1, __fmt, __ap);
# 121 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 123 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 124 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vfprintf(FILE *__restrict__ __stream, const char *__restrict__
# 125 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__fmt, __gnuc_va_list __ap)
# 126 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vfprintf_chk(__stream, 2 - 1, __fmt, __ap);
# 128 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 131 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __dprintf_chk(int __fd, int __flag, const char *__restrict__ __fmt, ...)
# 132 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 133 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vdprintf_chk(int __fd, int __flag, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 135 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 138 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 139 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 140 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 141 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __dprintf_chk(__fd, 2 - 1, __fmt, __builtin_va_arg_pack());
# 143 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 149 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 150 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __ap)
# 151 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 152 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vdprintf_chk(__fd, 2 - 1, __fmt, __ap);
# 153 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 158 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __asprintf_chk(char **__restrict__ __ptr, int __flag, const char *__restrict__ __fmt, ...) throw()
# 160 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4))) __attribute((__warn_unused_result__));
# 161 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __vasprintf_chk(char **__restrict__ __ptr, int __flag, const char *__restrict__ __fmt, __gnuc_va_list __arg) throw()
# 163 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0))) __attribute((__warn_unused_result__));
# 164 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __obstack_printf_chk(obstack *__restrict__ __obstack, int __flag, const char *__restrict__ __format, ...) throw()
# 167 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 168 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern int __obstack_vprintf_chk(obstack *__restrict__ __obstack, int __flag, const char *__restrict__ __format, __gnuc_va_list __args) throw()
# 172 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 175 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 176 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 177 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 178 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 180 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 182 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 183 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 185 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 186 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __asprintf_chk(__ptr, 2 - 1, __fmt, __builtin_va_arg_pack());
# 188 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 190 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 191 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, ...) throw()
# 193 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 194 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_printf_chk(__obstack, 2 - 1, __fmt, __builtin_va_arg_pack());
# 196 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 206 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 207 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) vasprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 209 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 210 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __vasprintf_chk(__ptr, 2 - 1, __fmt, __ap);
# 211 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 213 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) extern inline int
# 214 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__leaf__)) obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __fmt, __gnuc_va_list __ap) throw()
# 216 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 217 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __obstack_vprintf_chk(__obstack, 2 - 1, __fmt, __ap);
# 219 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 241 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_chk(char *__restrict__ __s, ::size_t __size, int __n, FILE *__restrict__ __stream)
# 242 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 243 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_alias(char *__restrict__ __s, int __n, FILE *__restrict__ __stream) __asm__("fgets")
# 245 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 246 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_chk_warn(char *__restrict__ __s, ::size_t __size, int __n, FILE *__restrict__ __stream) __asm__("__fgets_chk")
# 249 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets called with bigger size than length of destination buffer")));
# 252 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 253 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 254 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 255 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1)))
# 256 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 257 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 258 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 260 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((::size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 261 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 262 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 263 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_alias(__s, __n, __stream);
# 264 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 266 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern ::size_t __fread_chk(void *__restrict__ __ptr, ::size_t __ptrlen, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream)
# 268 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 269 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern ::size_t __fread_alias(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream) __asm__("fread")
# 272 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 273 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern ::size_t __fread_chk_warn(void *__restrict__ __ptr, ::size_t __ptrlen, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream) __asm__("__fread_chk")
# 278 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread called with bigger size * nmemb than length of destination buffer")));
# 281 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ::size_t
# 282 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__
# 283 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 284 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 285 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((::size_t)(-1)))
# 286 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 287 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((::size_t)1) << (((8) * sizeof(::size_t)) / (2))))) {
# 290 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 292 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 293 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 294 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 295 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_alias(__ptr, __size, __n, __stream);
# 296 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 299 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_unlocked_chk(char *__restrict__ __s, ::size_t __size, int __n, FILE *__restrict__ __stream)
# 300 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 301 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_unlocked_alias(char *__restrict__ __s, int __n, FILE *__restrict__ __stream) __asm__("fgets_unlocked")
# 303 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 304 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern char *__fgets_unlocked_chk_warn(char *__restrict__ __s, ::size_t __size, int __n, FILE *__restrict__ __stream) __asm__("__fgets_unlocked_chk")
# 307 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fgets_unlocked called with bigger size than length of destination buffer")));
# 310 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline char *
# 311 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 312 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 313 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__s, 2 > 1) != ((::size_t)(-1)))
# 314 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 315 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((!(0)) || (__n <= 0)) {
# 316 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 318 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((::size_t)__n) > __builtin_object_size(__s, 2 > 1)) {
# 319 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_chk_warn(__s, __builtin_object_size(__s, 2 > 1), __n, __stream); }
# 320 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 321 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fgets_unlocked_alias(__s, __n, __stream);
# 322 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 327 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern ::size_t __fread_unlocked_chk(void *__restrict__ __ptr, ::size_t __ptrlen, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream)
# 329 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 330 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern ::size_t __fread_unlocked_alias(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream) __asm__("fread_unlocked")
# 333 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__));
# 334 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
extern ::size_t __fread_unlocked_chk_warn(void *__restrict__ __ptr, ::size_t __ptrlen, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream) __asm__("__fread_unlocked_chk")
# 339 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
 __attribute((__warn_unused_result__)) __attribute((__warning__("fread_unlocked called with bigger size * nmemb than length of destination buffer")));
# 342 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__attribute((__always_inline__)) __attribute((__gnu_inline__)) __attribute((__artificial__)) __attribute((__warn_unused_result__)) extern inline ::size_t
# 343 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
fread_unlocked(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__
# 344 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
__stream)
# 345 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 346 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__builtin_object_size(__ptr, 0) != ((::size_t)(-1)))
# 347 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 348 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (((!(0)) || (!(0))) || ((__size | __n) >= (((::size_t)1) << (((8) * sizeof(::size_t)) / (2))))) {
# 351 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 354 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((__size * __n) > __builtin_object_size(__ptr, 0)) {
# 355 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_chk_warn(__ptr, __builtin_object_size(__ptr, 0), __size, __n, __stream); }
# 357 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 360 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if ((0) && (0) && ((__size | __n) < (((::size_t)1) << (((8) * sizeof(::size_t)) / (2)))) && ((__size * __n) <= (8)))
# 364 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 365 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
::size_t __cnt = __size * __n;
# 366 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
char *__cptr = (char *)__ptr;
# 367 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__cnt == (0)) {
# 368 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return 0; }
# 370 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
for (; __cnt > (0); --__cnt)
# 371 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
{
# 372 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
int __c = (__builtin_expect((__stream->_IO_read_ptr) >= (__stream->_IO_read_end), 0)) ? __uflow(__stream) : (*((unsigned char *)((__stream->_IO_read_ptr)++)));
# 373 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
if (__c == (-1)) {
# 374 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
break; }
# 375 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
(*(__cptr++)) = __c;
# 376 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 377 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return (__cptr - ((char *)__ptr)) / __size;
# 378 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 380 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
return __fread_unlocked_alias(__ptr, __size, __n, __stream);
# 381 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3
}
# 942 "/usr/include/stdio.h" 3
}
# 96 "/usr/include/c++/5/cstdio" 3
namespace std {
# 98 "/usr/include/c++/5/cstdio" 3
using ::FILE;
# 99 "/usr/include/c++/5/cstdio" 3
using ::fpos_t;
# 101 "/usr/include/c++/5/cstdio" 3
using ::clearerr;
# 102 "/usr/include/c++/5/cstdio" 3
using ::fclose;
# 103 "/usr/include/c++/5/cstdio" 3
using ::feof;
# 104 "/usr/include/c++/5/cstdio" 3
using ::ferror;
# 105 "/usr/include/c++/5/cstdio" 3
using ::fflush;
# 106 "/usr/include/c++/5/cstdio" 3
using ::fgetc;
# 107 "/usr/include/c++/5/cstdio" 3
using ::fgetpos;
# 108 "/usr/include/c++/5/cstdio" 3
using ::fgets;
# 109 "/usr/include/c++/5/cstdio" 3
using ::fopen;
# 110 "/usr/include/c++/5/cstdio" 3
using ::fprintf;
# 111 "/usr/include/c++/5/cstdio" 3
using ::fputc;
# 112 "/usr/include/c++/5/cstdio" 3
using ::fputs;
# 113 "/usr/include/c++/5/cstdio" 3
using ::fread;
# 114 "/usr/include/c++/5/cstdio" 3
using ::freopen;
# 115 "/usr/include/c++/5/cstdio" 3
using ::fscanf;
# 116 "/usr/include/c++/5/cstdio" 3
using ::fseek;
# 117 "/usr/include/c++/5/cstdio" 3
using ::fsetpos;
# 118 "/usr/include/c++/5/cstdio" 3
using ::ftell;
# 119 "/usr/include/c++/5/cstdio" 3
using ::fwrite;
# 120 "/usr/include/c++/5/cstdio" 3
using ::getc;
# 121 "/usr/include/c++/5/cstdio" 3
using ::getchar;
# 124 "/usr/include/c++/5/cstdio" 3
using ::gets;
# 126 "/usr/include/c++/5/cstdio" 3
using ::perror;
# 127 "/usr/include/c++/5/cstdio" 3
using ::printf;
# 128 "/usr/include/c++/5/cstdio" 3
using ::putc;
# 129 "/usr/include/c++/5/cstdio" 3
using ::putchar;
# 130 "/usr/include/c++/5/cstdio" 3
using ::puts;
# 131 "/usr/include/c++/5/cstdio" 3
using ::remove;
# 132 "/usr/include/c++/5/cstdio" 3
using ::rename;
# 133 "/usr/include/c++/5/cstdio" 3
using ::rewind;
# 134 "/usr/include/c++/5/cstdio" 3
using ::scanf;
# 135 "/usr/include/c++/5/cstdio" 3
using ::setbuf;
# 136 "/usr/include/c++/5/cstdio" 3
using ::setvbuf;
# 137 "/usr/include/c++/5/cstdio" 3
using ::sprintf;
# 138 "/usr/include/c++/5/cstdio" 3
using ::sscanf;
# 139 "/usr/include/c++/5/cstdio" 3
using ::tmpfile;
# 141 "/usr/include/c++/5/cstdio" 3
using ::tmpnam;
# 143 "/usr/include/c++/5/cstdio" 3
using ::ungetc;
# 144 "/usr/include/c++/5/cstdio" 3
using ::vfprintf;
# 145 "/usr/include/c++/5/cstdio" 3
using ::vprintf;
# 146 "/usr/include/c++/5/cstdio" 3
using ::vsprintf;
# 147 "/usr/include/c++/5/cstdio" 3
}
# 157 "/usr/include/c++/5/cstdio" 3
namespace __gnu_cxx {
# 175 "/usr/include/c++/5/cstdio" 3
using ::snprintf;
# 176 "/usr/include/c++/5/cstdio" 3
using ::vfscanf;
# 177 "/usr/include/c++/5/cstdio" 3
using ::vscanf;
# 178 "/usr/include/c++/5/cstdio" 3
using ::vsnprintf;
# 179 "/usr/include/c++/5/cstdio" 3
using ::vsscanf;
# 181 "/usr/include/c++/5/cstdio" 3
}
# 183 "/usr/include/c++/5/cstdio" 3
namespace std {
# 185 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::snprintf;
# 186 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vfscanf;
# 187 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vscanf;
# 188 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vsnprintf;
# 189 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vsscanf;
# 190 "/usr/include/c++/5/cstdio" 3
}
# 31 "/usr/include/errno.h" 3
extern "C" {
# 50 "/usr/include/x86_64-linux-gnu/bits/errno.h" 3
extern int *__errno_location() throw() __attribute((const));
# 54 "/usr/include/errno.h" 3
extern char *program_invocation_name, *program_invocation_short_name;
# 58 "/usr/include/errno.h" 3
}
# 68 "/usr/include/errno.h" 3
typedef int error_t;
# 46 "/usr/include/c++/5/ext/string_conversions.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/5/ext/string_conversions.h" 3
template< class _TRet, class _Ret = _TRet, class _CharT, class ...
# 52 "/usr/include/c++/5/ext/string_conversions.h" 3
_Base> _Ret
# 54 "/usr/include/c++/5/ext/string_conversions.h" 3
__stoa(_TRet (*__convf)(const _CharT *, _CharT **, _Base ...), const char *
# 55 "/usr/include/c++/5/ext/string_conversions.h" 3
__name, const _CharT *__str, std::size_t *__idx, _Base ...
# 56 "/usr/include/c++/5/ext/string_conversions.h" 3
__base)
# 57 "/usr/include/c++/5/ext/string_conversions.h" 3
{
# 58 "/usr/include/c++/5/ext/string_conversions.h" 3
_Ret __ret;
# 60 "/usr/include/c++/5/ext/string_conversions.h" 3
_CharT *__endptr;
# 61 "/usr/include/c++/5/ext/string_conversions.h" 3
(*__errno_location()) = 0;
# 62 "/usr/include/c++/5/ext/string_conversions.h" 3
const _TRet __tmp = __convf(__str, &__endptr, __base...);
# 64 "/usr/include/c++/5/ext/string_conversions.h" 3
if (__endptr == __str) {
# 65 "/usr/include/c++/5/ext/string_conversions.h" 3
std::__throw_invalid_argument(__name); } else {
# 66 "/usr/include/c++/5/ext/string_conversions.h" 3
if (((*__errno_location()) == 34) || (std::__are_same< _Ret, int> ::__value && ((__tmp < __numeric_traits< int> ::__min) || (__tmp > __numeric_traits< int> ::__max)))) {
# 70 "/usr/include/c++/5/ext/string_conversions.h" 3
std::__throw_out_of_range(__name); } else {
# 72 "/usr/include/c++/5/ext/string_conversions.h" 3
__ret = __tmp; } }
# 74 "/usr/include/c++/5/ext/string_conversions.h" 3
if (__idx) {
# 75 "/usr/include/c++/5/ext/string_conversions.h" 3
(*__idx) = (__endptr - __str); }
# 77 "/usr/include/c++/5/ext/string_conversions.h" 3
return __ret;
# 78 "/usr/include/c++/5/ext/string_conversions.h" 3
}
# 81 "/usr/include/c++/5/ext/string_conversions.h" 3
template< class _String, class _CharT = typename _String::value_type> _String
# 83 "/usr/include/c++/5/ext/string_conversions.h" 3
__to_xstring(int (*__convf)(_CharT *, std::size_t, const _CharT *, __builtin_va_list), std::size_t
# 84 "/usr/include/c++/5/ext/string_conversions.h" 3
__n, const _CharT *
# 85 "/usr/include/c++/5/ext/string_conversions.h" 3
__fmt, ...)
# 86 "/usr/include/c++/5/ext/string_conversions.h" 3
{
# 89 "/usr/include/c++/5/ext/string_conversions.h" 3
_CharT *__s = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __n));
# 92 "/usr/include/c++/5/ext/string_conversions.h" 3
__builtin_va_list __args;
# 93 "/usr/include/c++/5/ext/string_conversions.h" 3
__builtin_va_start((__args),__fmt);
# 95 "/usr/include/c++/5/ext/string_conversions.h" 3
const int __len = __convf(__s, __n, __fmt, __args);
# 97 "/usr/include/c++/5/ext/string_conversions.h" 3
__builtin_va_end(__args);
# 99 "/usr/include/c++/5/ext/string_conversions.h" 3
return _String(__s, __s + __len);
# 100 "/usr/include/c++/5/ext/string_conversions.h" 3
}
# 103 "/usr/include/c++/5/ext/string_conversions.h" 3
}
# 5251 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 5254 "/usr/include/c++/5/bits/basic_string.h" 3
inline namespace __cxx11 {
# 5258 "/usr/include/c++/5/bits/basic_string.h" 3
inline int stoi(const string &__str, size_t *__idx = 0, int __base = 10)
# 5259 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa< long, int> (&std::strtol, "stoi", __str.c_str(), __idx, __base);
# 5260 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5263 "/usr/include/c++/5/bits/basic_string.h" 3
inline long stol(const string &__str, size_t *__idx = 0, int __base = 10)
# 5264 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(), __idx, __base);
# 5265 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5268 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long stoul(const string &__str, size_t *__idx = 0, int __base = 10)
# 5269 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(), __idx, __base);
# 5270 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5273 "/usr/include/c++/5/bits/basic_string.h" 3
inline long long stoll(const string &__str, size_t *__idx = 0, int __base = 10)
# 5274 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(), __idx, __base);
# 5275 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5278 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long long stoull(const string &__str, size_t *__idx = 0, int __base = 10)
# 5279 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(), __idx, __base);
# 5280 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5284 "/usr/include/c++/5/bits/basic_string.h" 3
inline float stof(const string &__str, size_t *__idx = 0)
# 5285 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
# 5288 "/usr/include/c++/5/bits/basic_string.h" 3
inline double stod(const string &__str, size_t *__idx = 0)
# 5289 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
# 5292 "/usr/include/c++/5/bits/basic_string.h" 3
inline long double stold(const string &__str, size_t *__idx = 0)
# 5293 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
# 5299 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(int __val)
# 5300 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(int), "%d", __val);
# 5301 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5304 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(unsigned __val)
# 5305 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(unsigned), "%u", __val);
# 5307 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5310 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(long __val)
# 5311 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(long), "%ld", __val);
# 5312 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5315 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(unsigned long __val)
# 5316 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(unsigned long), "%lu", __val);
# 5318 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5321 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(long long __val)
# 5322 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(long long), "%lld", __val);
# 5324 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5327 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(unsigned long long __val)
# 5328 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(unsigned long long), "%llu", __val);
# 5330 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5333 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(float __val)
# 5334 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5335 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< float> ::__max_exponent10 + 20);
# 5337 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, __n, "%f", __val);
# 5339 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5342 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(double __val)
# 5343 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5344 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< double> ::__max_exponent10 + 20);
# 5346 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, __n, "%f", __val);
# 5348 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5351 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(long double __val)
# 5352 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5353 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< long double> ::__max_exponent10 + 20);
# 5355 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, __n, "%Lf", __val);
# 5357 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5361 "/usr/include/c++/5/bits/basic_string.h" 3
inline int stoi(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5362 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa< long, int> (&std::wcstol, "stoi", __str.c_str(), __idx, __base);
# 5363 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5366 "/usr/include/c++/5/bits/basic_string.h" 3
inline long stol(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5367 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(), __idx, __base);
# 5368 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5371 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long stoul(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5372 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(), __idx, __base);
# 5373 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5376 "/usr/include/c++/5/bits/basic_string.h" 3
inline long long stoll(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5377 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(), __idx, __base);
# 5378 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5381 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long long stoull(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5382 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(), __idx, __base);
# 5383 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5387 "/usr/include/c++/5/bits/basic_string.h" 3
inline float stof(const wstring &__str, size_t *__idx = 0)
# 5388 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
# 5391 "/usr/include/c++/5/bits/basic_string.h" 3
inline double stod(const wstring &__str, size_t *__idx = 0)
# 5392 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
# 5395 "/usr/include/c++/5/bits/basic_string.h" 3
inline long double stold(const wstring &__str, size_t *__idx = 0)
# 5396 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
# 5401 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(int __val)
# 5402 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(int), L"\x25\x64", __val);
# 5403 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5406 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(unsigned __val)
# 5407 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(unsigned), L"\x25\x75", __val);
# 5409 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5412 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(long __val)
# 5413 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(long), L"\x25\x6c\x64", __val);
# 5414 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5417 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(unsigned long __val)
# 5418 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(unsigned long), L"\x25\x6c\x75", __val);
# 5420 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5423 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(long long __val)
# 5424 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(long long), L"\x25\x6c\x6c\x64", __val);
# 5426 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5429 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(unsigned long long __val)
# 5430 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(unsigned long long), L"\x25\x6c\x6c\x75", __val);
# 5432 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5435 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(float __val)
# 5436 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5437 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< float> ::__max_exponent10 + 20);
# 5439 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, __n, L"\x25\x66", __val);
# 5441 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5444 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(double __val)
# 5445 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5446 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< double> ::__max_exponent10 + 20);
# 5448 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, __n, L"\x25\x66", __val);
# 5450 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5453 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(long double __val)
# 5454 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5455 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< long double> ::__max_exponent10 + 20);
# 5457 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, __n, L"\x25\x4c\x66", __val);
# 5459 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5463 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5465 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 37 "/usr/include/c++/5/bits/hash_bytes.h" 3
namespace std {
# 47 "/usr/include/c++/5/bits/hash_bytes.h" 3
size_t _Hash_bytes(const void * __ptr, size_t __len, size_t __seed);
# 54 "/usr/include/c++/5/bits/hash_bytes.h" 3
size_t _Fnv_hash_bytes(const void * __ptr, size_t __len, size_t __seed);
# 57 "/usr/include/c++/5/bits/hash_bytes.h" 3
}
# 37 "/usr/include/c++/5/bits/functional_hash.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Result, class _Arg>
# 50 "/usr/include/c++/5/bits/functional_hash.h" 3
struct __hash_base {
# 52 "/usr/include/c++/5/bits/functional_hash.h" 3
typedef _Result result_type;
# 53 "/usr/include/c++/5/bits/functional_hash.h" 3
typedef _Arg argument_type;
# 54 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 57 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> struct hash;
# 61 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp>
# 62 "/usr/include/c++/5/bits/functional_hash.h" 3
struct hash< _Tp *> : public __hash_base< unsigned long, _Tp *> {
# 65 "/usr/include/c++/5/bits/functional_hash.h" 3
::std::size_t operator()(_Tp *__p) const noexcept
# 66 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return reinterpret_cast< ::std::size_t>(__p); }
# 67 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 80 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< bool> : public __hash_base< unsigned long, bool> { size_t operator()(bool __val) const noexcept { return static_cast< size_t>(__val); } };
# 83 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< char> : public __hash_base< unsigned long, char> { size_t operator()(char __val) const noexcept { return static_cast< size_t>(__val); } };
# 86 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< signed char> : public __hash_base< unsigned long, signed char> { size_t operator()(signed char __val) const noexcept { return static_cast< size_t>(__val); } };
# 89 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned char> : public __hash_base< unsigned long, unsigned char> { size_t operator()(unsigned char __val) const noexcept { return static_cast< size_t>(__val); } };
# 92 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< wchar_t> : public __hash_base< unsigned long, wchar_t> { size_t operator()(wchar_t __val) const noexcept { return static_cast< size_t>(__val); } };
# 95 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< char16_t> : public __hash_base< unsigned long, char16_t> { size_t operator()(char16_t __val) const noexcept { return static_cast< size_t>(__val); } };
# 98 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< char32_t> : public __hash_base< unsigned long, char32_t> { size_t operator()(char32_t __val) const noexcept { return static_cast< size_t>(__val); } };
# 101 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< short> : public __hash_base< unsigned long, short> { size_t operator()(short __val) const noexcept { return static_cast< size_t>(__val); } };
# 104 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< int> : public __hash_base< unsigned long, int> { size_t operator()(int __val) const noexcept { return static_cast< size_t>(__val); } };
# 107 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< long> : public __hash_base< unsigned long, long> { size_t operator()(long __val) const noexcept { return static_cast< size_t>(__val); } };
# 110 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< long long> : public __hash_base< unsigned long, long long> { size_t operator()(long long __val) const noexcept { return static_cast< size_t>(__val); } };
# 113 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned short> : public __hash_base< unsigned long, unsigned short> { size_t operator()(unsigned short __val) const noexcept { return static_cast< size_t>(__val); } };
# 116 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned> : public __hash_base< unsigned long, unsigned> { size_t operator()(unsigned __val) const noexcept { return static_cast< size_t>(__val); } };
# 119 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned long> : public __hash_base< unsigned long, unsigned long> { size_t operator()(unsigned long __val) const noexcept { return static_cast< size_t>(__val); } };
# 122 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned long long> : public __hash_base< unsigned long, unsigned long long> { size_t operator()(unsigned long long __val) const noexcept { return static_cast< size_t>(__val); } };
# 126 "/usr/include/c++/5/bits/functional_hash.h" 3
struct _Hash_impl {
# 129 "/usr/include/c++/5/bits/functional_hash.h" 3
static size_t hash(const void *__ptr, size_t __clength, size_t
# 130 "/usr/include/c++/5/bits/functional_hash.h" 3
__seed = static_cast< size_t>(3339675911UL))
# 131 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return _Hash_bytes(__ptr, __clength, __seed); }
# 133 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 135 "/usr/include/c++/5/bits/functional_hash.h" 3
hash(const _Tp &__val)
# 136 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val)); }
# 138 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 140 "/usr/include/c++/5/bits/functional_hash.h" 3
__hash_combine(const _Tp &__val, size_t __hash)
# 141 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val), __hash); }
# 142 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 144 "/usr/include/c++/5/bits/functional_hash.h" 3
struct _Fnv_hash_impl {
# 147 "/usr/include/c++/5/bits/functional_hash.h" 3
static size_t hash(const void *__ptr, size_t __clength, size_t
# 148 "/usr/include/c++/5/bits/functional_hash.h" 3
__seed = static_cast< size_t>(2166136261UL))
# 149 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return _Fnv_hash_bytes(__ptr, __clength, __seed); }
# 151 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 153 "/usr/include/c++/5/bits/functional_hash.h" 3
hash(const _Tp &__val)
# 154 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val)); }
# 156 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 158 "/usr/include/c++/5/bits/functional_hash.h" 3
__hash_combine(const _Tp &__val, size_t __hash)
# 159 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val), __hash); }
# 160 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 164 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< float> : public __hash_base< unsigned long, float> {
# 167 "/usr/include/c++/5/bits/functional_hash.h" 3
size_t operator()(float __val) const noexcept
# 168 "/usr/include/c++/5/bits/functional_hash.h" 3
{
# 170 "/usr/include/c++/5/bits/functional_hash.h" 3
return (__val != (0.0F)) ? std::_Hash_impl::hash(__val) : (0);
# 171 "/usr/include/c++/5/bits/functional_hash.h" 3
}
# 172 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 176 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< double> : public __hash_base< unsigned long, double> {
# 179 "/usr/include/c++/5/bits/functional_hash.h" 3
size_t operator()(double __val) const noexcept
# 180 "/usr/include/c++/5/bits/functional_hash.h" 3
{
# 182 "/usr/include/c++/5/bits/functional_hash.h" 3
return (__val != (0.0)) ? std::_Hash_impl::hash(__val) : (0);
# 183 "/usr/include/c++/5/bits/functional_hash.h" 3
}
# 184 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 188 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< long double> : public __hash_base< unsigned long, long double> {
# 191 "/usr/include/c++/5/bits/functional_hash.h" 3
__attribute((__pure__)) size_t
# 192 "/usr/include/c++/5/bits/functional_hash.h" 3
operator()(long double __val) const noexcept;
# 193 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 201 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Hash>
# 202 "/usr/include/c++/5/bits/functional_hash.h" 3
struct __is_fast_hash : public true_type {
# 203 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 206 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct __is_fast_hash< hash< long double> > : public false_type {
# 207 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 210 "/usr/include/c++/5/bits/functional_hash.h" 3
}
# 5473 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 5482 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< char, char_traits< char> , allocator< char> > > : public __hash_base< unsigned long, __cxx11::basic_string< char, char_traits< char> , allocator< char> > > {
# 5486 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::string &__s) const noexcept
# 5487 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length()); }
# 5488 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5491 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< char, char_traits< char> , allocator< char> > > > : public false_type {
# 5492 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5497 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > : public __hash_base< unsigned long, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > {
# 5501 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::wstring &__s) const noexcept
# 5502 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length() * sizeof(wchar_t));
# 5503 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5504 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5507 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > > : public false_type {
# 5508 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5515 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< char16_t, char_traits< char16_t> , allocator< char16_t> > > : public __hash_base< unsigned long, __cxx11::basic_string< char16_t, char_traits< char16_t> , allocator< char16_t> > > {
# 5519 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::u16string &__s) const noexcept
# 5520 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length() * sizeof(char16_t));
# 5521 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5522 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5525 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< char16_t, char_traits< char16_t> , allocator< char16_t> > > > : public false_type {
# 5526 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5530 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< char32_t, char_traits< char32_t> , allocator< char32_t> > > : public __hash_base< unsigned long, __cxx11::basic_string< char32_t, char_traits< char32_t> , allocator< char32_t> > > {
# 5534 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::u32string &__s) const noexcept
# 5535 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length() * sizeof(char32_t));
# 5536 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5537 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5540 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< char32_t, char_traits< char32_t> , allocator< char32_t> > > > : public false_type {
# 5541 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5583 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/5/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 54 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::npos;
# 56 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 59 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::swap(basic_string &__s) noexcept
# 60 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 61 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (this == (&__s)) {
# 62 "/usr/include/c++/5/bits/basic_string.tcc" 3
return; }
# 67 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__alloc_swap< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::_S_do_it(this->_M_get_allocator(), __s._M_get_allocator());
# 70 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_M_is_local()) {
# 71 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s._M_is_local())
# 72 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 73 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (length() && __s.length())
# 74 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 75 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT __tmp_data[(_S_local_capacity) + 1];
# 76 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__tmp_data, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 78 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 80 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __tmp_data, (_S_local_capacity) + 1);
# 82 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 83 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s.length())
# 84 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 85 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 87 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_length(__s.length());
# 88 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_set_length(0);
# 89 "/usr/include/c++/5/bits/basic_string.tcc" 3
return;
# 90 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 91 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (length())
# 92 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 93 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 95 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_length(length());
# 96 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(0);
# 97 "/usr/include/c++/5/bits/basic_string.tcc" 3
return;
# 98 "/usr/include/c++/5/bits/basic_string.tcc" 3
} } }
# 99 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 101 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 102 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_capacity = __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity;
# 103 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 105 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 106 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 107 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__tmp_capacity);
# 108 "/usr/include/c++/5/bits/basic_string.tcc" 3
} } else
# 110 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 111 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_capacity = __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity;
# 112 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s._M_is_local())
# 113 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 114 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 116 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(_M_data()));
# 117 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf);
# 118 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 120 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 121 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp_ptr = _M_data();
# 122 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 123 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(__tmp_ptr));
# 124 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 125 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 126 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_capacity(__tmp_capacity);
# 127 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 129 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_length = length();
# 130 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_length(__s.length());
# 131 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_length(__tmp_length);
# 132 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 134 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer
# 137 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_create(size_type &__capacity, size_type __old_capacity)
# 138 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 141 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__capacity > max_size()) {
# 142 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__throw_length_error("basic_string::_M_create"); }
# 147 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__capacity > __old_capacity) && (__capacity < (2 * __old_capacity)))
# 148 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 149 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = (2 * __old_capacity);
# 151 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__capacity > max_size()) {
# 152 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = max_size(); }
# 153 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 157 "/usr/include/c++/5/bits/basic_string.tcc" 3
return _Alloc_traits::allocate(this->_M_get_allocator(), __capacity + 1);
# 158 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 164 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 165 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InIterator> void
# 168 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(_InIterator __beg, _InIterator __end, input_iterator_tag)
# 170 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 171 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __len = (0);
# 172 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __capacity = ((size_type)(_S_local_capacity));
# 174 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__beg != __end) && (__len < __capacity))
# 175 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 176 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_M_data()[__len++]) = (*__beg);
# 177 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__beg;
# 178 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 180 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 181 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 182 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__beg != __end)
# 183 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 184 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len == __capacity)
# 185 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 187 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = (__len + 1);
# 188 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __another = _M_create(__capacity, __len);
# 189 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__another, _M_data(), __len));
# 190 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 191 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__another);
# 192 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__capacity);
# 193 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 194 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_M_data()[__len++]) = (*__beg);
# 195 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__beg;
# 196 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 197 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 198 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 199 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 200 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 201 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 202 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 204 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__len);
# 205 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 207 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 208 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InIterator> void
# 211 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(_InIterator __beg, _InIterator __end, forward_iterator_tag)
# 213 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 215 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__gnu_cxx::__is_null_pointer(__beg) && (__beg != __end)) {
# 216 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__throw_logic_error("basic_string::_M_construct null not valid"); }
# 219 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __dnew = static_cast< size_type>(std::distance(__beg, __end));
# 221 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__dnew > ((size_type)(_S_local_capacity)))
# 222 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 223 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(_M_create(__dnew, (size_type)0));
# 224 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__dnew);
# 225 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 228 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 229 "/usr/include/c++/5/bits/basic_string.tcc" 3
{ (this->_S_copy_chars(_M_data(), __beg, __end)); }
# 230 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 231 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 232 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 233 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 234 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 236 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__dnew);
# 237 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 239 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 242 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(size_type __n, _CharT __c)
# 243 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 244 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n > ((size_type)(_S_local_capacity)))
# 245 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 246 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(_M_create(__n, (size_type)0));
# 247 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__n);
# 248 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 250 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 251 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_assign(_M_data(), __n, __c)); }
# 253 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__n);
# 254 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 256 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 259 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_assign(const basic_string &__str)
# 260 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 261 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (this != (&__str))
# 262 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 263 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __rsize = __str.length();
# 264 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __capacity = capacity();
# 266 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__rsize > __capacity)
# 267 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 268 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __new_capacity = __rsize;
# 269 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp = _M_create(__new_capacity, __capacity);
# 270 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 271 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__tmp);
# 272 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__new_capacity);
# 273 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 275 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__rsize) {
# 276 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(_M_data(), (__str._M_data()), __rsize)); }
# 278 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__rsize);
# 279 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 280 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 282 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 285 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::reserve(size_type __res)
# 286 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 288 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__res < length()) {
# 289 "/usr/include/c++/5/bits/basic_string.tcc" 3
__res = length(); }
# 291 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __capacity = capacity();
# 292 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__res != __capacity)
# 293 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 294 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__res > __capacity) || (__res > ((size_type)(_S_local_capacity))))
# 296 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 297 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp = _M_create(__res, __capacity);
# 298 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__tmp, _M_data(), length() + 1));
# 299 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 300 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__tmp);
# 301 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__res);
# 302 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 303 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!_M_is_local())
# 304 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 305 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(this->_M_local_data(), _M_data(), length() + 1));
# 306 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_destroy(__capacity);
# 307 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(this->_M_local_data());
# 308 "/usr/include/c++/5/bits/basic_string.tcc" 3
} }
# 309 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 310 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 312 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 315 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_mutate(size_type __pos, size_type __len1, const _CharT *__s, size_type
# 316 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len2)
# 317 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 318 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (length() - __pos) - __len1;
# 320 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __new_capacity = (length() + __len2) - __len1;
# 321 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __r = _M_create(__new_capacity, capacity());
# 323 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__pos) {
# 324 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__r, _M_data(), __pos)); }
# 325 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s && __len2) {
# 326 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__r + __pos, __s, __len2)); }
# 327 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much) {
# 328 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy((__r + __pos) + __len2, (_M_data() + __pos) + __len1, __how_much)); }
# 331 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 332 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__r);
# 333 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__new_capacity);
# 334 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 336 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 339 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_erase(size_type __pos, size_type __n)
# 340 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 341 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (length() - __pos) - __n;
# 343 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && __n) {
# 344 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(_M_data() + __pos, (_M_data() + __pos) + __n, __how_much)); }
# 346 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(length() - __n);
# 347 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 349 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 352 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::resize(size_type __n, _CharT __c)
# 353 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 354 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 355 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size < __n) {
# 356 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->append(__n - __size, __c)); } else {
# 357 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n < __size) {
# 358 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_erase(__n, __size - __n); } }
# 359 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 361 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 364 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_append(const _CharT *__s, size_type __n)
# 365 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 366 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = __n + this->size();
# 368 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len <= this->capacity())
# 369 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 370 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 371 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy((this->_M_data()) + this->size(), __s, __n)); }
# 372 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 374 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(this->size(), (size_type)0, __s, __n); }
# 376 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__len);
# 377 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 378 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 380 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 381 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InputIterator> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 384 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _InputIterator
# 385 "/usr/include/c++/5/bits/basic_string.tcc" 3
__k1, _InputIterator __k2, __false_type)
# 387 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 388 "/usr/include/c++/5/bits/basic_string.tcc" 3
const basic_string __s(__k1, __k2);
# 389 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __n1 = __i2 - __i1;
# 390 "/usr/include/c++/5/bits/basic_string.tcc" 3
return _M_replace(__i1 - this->begin(), __n1, (__s._M_data()), __s.size());
# 392 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 394 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 397 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT
# 398 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c)
# 399 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 400 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
# 402 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 403 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __n2) - __n1;
# 405 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__new_size <= this->capacity())
# 406 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 407 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT *__p = (this->_M_data()) + __pos1;
# 409 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos1) - __n1;
# 410 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__n1 != __n2)) {
# 411 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __n2, __p + __n1, __how_much)); }
# 412 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 414 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(__pos1, __n1, 0, __n2); }
# 416 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n2) {
# 417 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_assign((this->_M_data()) + __pos1, __n2, __c)); }
# 419 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__new_size);
# 420 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 421 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 423 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 426 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace(size_type __pos, size_type __len1, const _CharT *__s, const typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::size_type
# 427 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len2)
# 428 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 429 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check_length(__len1, __len2, "basic_string::_M_replace");
# 431 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 432 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __len2) - __len1;
# 434 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__new_size <= this->capacity())
# 435 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 436 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT *__p = (this->_M_data()) + __pos;
# 438 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos) - __len1;
# 439 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_M_disjunct(__s))
# 440 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 441 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2)) {
# 442 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __len2, __p + __len1, __how_much)); }
# 443 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2) {
# 444 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p, __s, __len2)); }
# 445 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 447 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 449 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2 && (__len2 <= __len1)) {
# 450 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __len2)); }
# 451 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2)) {
# 452 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __len2, __p + __len1, __how_much)); }
# 453 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2 > __len1)
# 454 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 455 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__s + __len2) <= (__p + __len1)) {
# 456 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __len2)); } else {
# 457 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s >= (__p + __len1)) {
# 458 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p, (__s + __len2) - __len1, __len2)); } else
# 460 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 461 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __nleft = (__p + __len1) - __s;
# 462 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __nleft));
# 463 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p + __nleft, __p + __len2, __len2 - __nleft));
# 465 "/usr/include/c++/5/bits/basic_string.tcc" 3
} }
# 466 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 467 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 468 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 470 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(__pos, __len1, __s, __len2); }
# 472 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__new_size);
# 473 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 474 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 476 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 479 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::copy(_CharT *__s, size_type __n, size_type __pos) const
# 480 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 481 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::copy");
# 482 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 483 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 484 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 485 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_S_copy)(__s, _M_data() + __pos, __n); }
# 487 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __n;
# 488 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1149 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 1151 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator+(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1152 "/usr/include/c++/5/bits/basic_string.tcc" 3
__rhs)
# 1153 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1154 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1155 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1156 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1157 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __len = _Traits::length(__lhs);
# 1158 "/usr/include/c++/5/bits/basic_string.tcc" 3
__string_type __str;
# 1159 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.reserve(__len + (__rhs.size())));
# 1160 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__lhs, __len));
# 1161 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 1162 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __str;
# 1163 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1165 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 1167 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator+(_CharT __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__rhs)
# 1168 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1169 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1170 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1171 "/usr/include/c++/5/bits/basic_string.tcc" 3
__string_type __str;
# 1172 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __len = (__rhs.size());
# 1173 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.reserve(__len + 1));
# 1174 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append((__size_type)1, __lhs));
# 1175 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 1176 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __str;
# 1177 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1179 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1182 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find(const _CharT *__s, size_type __pos, size_type __n) const
# 1183 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1184 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1185 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1186 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1188 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n == 0) {
# 1189 "/usr/include/c++/5/bits/basic_string.tcc" 3
return (__pos <= __size) ? __pos : npos; }
# 1191 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n <= __size)
# 1192 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1193 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos <= (__size - __n); ++__pos) {
# 1194 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::eq(__data[__pos], __s[0]) && (traits_type::compare((__data + __pos) + 1, __s + 1, __n - 1) == 0)) {
# 1197 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1198 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1199 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1200 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1202 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1205 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find(_CharT __c, size_type __pos) const noexcept
# 1206 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1207 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __ret = npos;
# 1208 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1209 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__pos < __size)
# 1210 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1211 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1212 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __n = __size - __pos;
# 1213 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__data + __pos, __n, __c);
# 1214 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__p) {
# 1215 "/usr/include/c++/5/bits/basic_string.tcc" 3
__ret = (__p - __data); }
# 1216 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1217 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __ret;
# 1218 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1220 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1223 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::rfind(const _CharT *__s, size_type __pos, size_type __n) const
# 1224 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1225 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1226 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1227 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n <= __size)
# 1228 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1229 "/usr/include/c++/5/bits/basic_string.tcc" 3
__pos = std::min((size_type)(__size - __n), __pos);
# 1230 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1231 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1232 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1233 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::compare(__data + __pos, __s, __n) == 0) {
# 1234 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; }
# 1235 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1236 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__pos--) > 0);
# 1237 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1238 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1239 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1241 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1244 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::rfind(_CharT __c, size_type __pos) const noexcept
# 1245 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1246 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1247 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1248 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1249 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1250 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1251 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (++__size; (__size--) > 0;) {
# 1252 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::eq(_M_data()[__size], __c)) {
# 1253 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; } }
# 1254 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1255 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1256 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1258 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1261 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1262 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1263 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1264 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __n && (__pos < this->size()); ++__pos)
# 1265 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1266 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__s, __n, _M_data()[__pos]);
# 1267 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__p) {
# 1268 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; }
# 1269 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1270 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1271 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1273 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1276 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1277 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1278 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1279 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1280 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size && __n)
# 1281 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1282 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1283 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1284 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1285 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1286 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::find(__s, __n, _M_data()[__size])) {
# 1287 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1288 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1289 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__size--) != 0);
# 1290 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1291 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1292 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1294 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1297 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1298 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1299 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1300 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 1301 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__pos])) {
# 1302 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1303 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1304 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1306 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1309 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(_CharT __c, size_type __pos) const noexcept
# 1310 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1311 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 1312 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__pos], __c)) {
# 1313 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1314 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1315 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1317 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1320 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1321 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1322 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1323 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1324 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1325 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1326 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1327 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1328 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1329 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1330 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__size])) {
# 1331 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1332 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1333 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__size--);
# 1334 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1335 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1336 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1338 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1341 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(_CharT __c, size_type __pos) const noexcept
# 1342 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1343 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1344 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1345 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1346 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1347 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1348 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1349 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1350 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__size], __c)) {
# 1351 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1352 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1353 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__size--);
# 1354 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1355 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1356 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1358 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1361 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n, const basic_string &__str) const
# 1362 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1363 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1364 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 1365 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = __str.size();
# 1366 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n, __osize);
# 1367 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);
# 1368 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1369 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n, __osize); }
# 1370 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1371 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1373 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1376 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1377 "/usr/include/c++/5/bits/basic_string.tcc" 3
__pos2, size_type __n2) const
# 1378 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1379 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos1, "basic_string::compare");
# 1380 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str._M_check(__pos2, "basic_string::compare");
# 1381 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos1, __n1);
# 1382 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n2 = __str._M_limit(__pos2, __n2);
# 1383 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 1384 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos1, __str.data() + __pos2, __len);
# 1386 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1387 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 1388 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1389 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1391 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1394 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(const _CharT *__s) const
# 1395 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1396 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1397 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1398 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 1399 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__size, __osize);
# 1400 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data(), __s, __len);
# 1401 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1402 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__size, __osize); }
# 1403 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1404 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1406 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1409 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s) const
# 1410 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1411 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1412 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1413 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 1414 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 1415 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __osize);
# 1416 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 1417 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1418 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __osize); }
# 1419 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1420 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1422 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1425 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 1426 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n2) const
# 1427 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1428 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1429 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1430 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 1431 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 1432 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 1433 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1434 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 1435 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1436 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1439 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1441 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1442 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str)
# 1443 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1444 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1445 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1446 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1447 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1448 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1449 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1450 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename ctype< _CharT> ::ctype_base __ctype_base;
# 1452 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1453 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1454 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 1455 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__cerb)
# 1456 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1457 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 1458 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1460 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.erase());
# 1461 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT __buf[128];
# 1462 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __len = (0);
# 1463 "/usr/include/c++/5/bits/basic_string.tcc" 3
const streamsize __w = (__in.width());
# 1464 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __n = (__w > (0)) ? static_cast< __size_type>(__w) : (__str.max_size());
# 1466 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1467 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1468 "/usr/include/c++/5/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1470 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(__ctype_base::space, _Traits::to_char_type(__c)))))
# 1474 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1475 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len == (sizeof(__buf) / sizeof(_CharT)))
# 1476 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1477 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__buf, sizeof(__buf) / sizeof(_CharT)));
# 1478 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len = 0;
# 1479 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1480 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__buf[__len++]) = _Traits::to_char_type(__c);
# 1481 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1482 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1483 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1484 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__buf, __len));
# 1486 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1487 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; }
# 1488 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.width(0));
# 1489 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1490 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1491 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1492 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1493 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 1494 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1495 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 1496 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1500 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1501 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1502 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1504 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__extracted) {
# 1505 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1506 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__err) {
# 1507 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1508 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __in;
# 1509 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1511 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1513 "/usr/include/c++/5/bits/basic_string.tcc" 3
getline(basic_istream< _CharT, _Traits> &__in, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1514 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str, _CharT __delim)
# 1515 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1516 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1517 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1518 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1519 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1520 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1522 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1523 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __n = (__str.max_size());
# 1524 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1525 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, true);
# 1526 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__cerb)
# 1527 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1528 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 1529 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1530 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.erase());
# 1531 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __idelim = _Traits::to_int_type(__delim);
# 1532 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1533 "/usr/include/c++/5/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1535 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!_Traits::eq_int_type(__c, __idelim)))
# 1538 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1539 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str += _Traits::to_char_type(__c);
# 1540 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1541 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1542 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1544 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1545 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; } else {
# 1546 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __idelim))
# 1547 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1548 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1549 "/usr/include/c++/5/bits/basic_string.tcc" 3
((__in.rdbuf())->sbumpc());
# 1550 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 1552 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; } }
# 1553 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1554 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1555 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1556 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1557 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 1558 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1559 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 1560 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1564 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1565 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1566 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1567 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__extracted) {
# 1568 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1569 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__err) {
# 1570 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1571 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __in;
# 1572 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1577 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template class __cxx11::basic_string< char, char_traits< char> , allocator< char> > ;
# 1578 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &operator>>(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1581 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_ostream< char> &operator<<(basic_ostream< char> & __os, const __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1584 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 1587 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1592 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template class __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1593 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &operator>>(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1596 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t> &operator<<(basic_ostream< wchar_t> & __os, const __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1599 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 1602 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1609 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 64 "/usr/include/c++/5/bits/stl_list.h" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/5/bits/stl_list.h" 3
namespace __detail {
# 77 "/usr/include/c++/5/bits/stl_list.h" 3
struct _List_node_base {
# 79 "/usr/include/c++/5/bits/stl_list.h" 3
_List_node_base *_M_next;
# 80 "/usr/include/c++/5/bits/stl_list.h" 3
_List_node_base *_M_prev;
# 83 "/usr/include/c++/5/bits/stl_list.h" 3
static void swap(_List_node_base & __x, _List_node_base & __y) noexcept;
# 86 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_transfer(_List_node_base *const __first, _List_node_base *const __last) noexcept;
# 90 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_reverse() noexcept;
# 93 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_hook(_List_node_base *const __position) noexcept;
# 96 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_unhook() noexcept;
# 97 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 100 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 105 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/bits/stl_list.h" 3
struct _List_node : public __detail::_List_node_base {
# 109 "/usr/include/c++/5/bits/stl_list.h" 3
_Tp _M_data;
# 112 "/usr/include/c++/5/bits/stl_list.h" 3
template< class ..._Args>
# 113 "/usr/include/c++/5/bits/stl_list.h" 3
_List_node(_Args &&...__args) : __detail::_List_node_base(), _M_data(std::forward< _Args> (__args)...)
# 115 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 117 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 124 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp>
# 125 "/usr/include/c++/5/bits/stl_list.h" 3
struct _List_iterator {
# 127 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _List_iterator _Self;
# 128 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _List_node< _Tp> _Node;
# 130 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ptrdiff_t difference_type;
# 131 "/usr/include/c++/5/bits/stl_list.h" 3
typedef bidirectional_iterator_tag iterator_category;
# 132 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _Tp value_type;
# 133 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _Tp *pointer;
# 134 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _Tp &reference;
# 136 "/usr/include/c++/5/bits/stl_list.h" 3
_List_iterator() noexcept : _M_node()
# 137 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 140 "/usr/include/c++/5/bits/stl_list.h" 3
explicit _List_iterator(__detail::_List_node_base *__x) noexcept : _M_node(__x)
# 141 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 144 "/usr/include/c++/5/bits/stl_list.h" 3
_Self _M_const_cast() const noexcept
# 145 "/usr/include/c++/5/bits/stl_list.h" 3
{ return *this; }
# 149 "/usr/include/c++/5/bits/stl_list.h" 3
reference operator*() const noexcept
# 150 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (static_cast< _Node *>(_M_node))->_M_data; }
# 153 "/usr/include/c++/5/bits/stl_list.h" 3
pointer operator->() const noexcept
# 154 "/usr/include/c++/5/bits/stl_list.h" 3
{ return std::__addressof(((static_cast< _Node *>(_M_node))->_M_data)); }
# 157 "/usr/include/c++/5/bits/stl_list.h" 3
_Self &operator++() noexcept
# 158 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 159 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_next);
# 160 "/usr/include/c++/5/bits/stl_list.h" 3
return *this;
# 161 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_list.h" 3
_Self operator++(int) noexcept
# 165 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 166 "/usr/include/c++/5/bits/stl_list.h" 3
_Self __tmp = *this;
# 167 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_next);
# 168 "/usr/include/c++/5/bits/stl_list.h" 3
return __tmp;
# 169 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 172 "/usr/include/c++/5/bits/stl_list.h" 3
_Self &operator--() noexcept
# 173 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 174 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_prev);
# 175 "/usr/include/c++/5/bits/stl_list.h" 3
return *this;
# 176 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 179 "/usr/include/c++/5/bits/stl_list.h" 3
_Self operator--(int) noexcept
# 180 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 181 "/usr/include/c++/5/bits/stl_list.h" 3
_Self __tmp = *this;
# 182 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_prev);
# 183 "/usr/include/c++/5/bits/stl_list.h" 3
return __tmp;
# 184 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 187 "/usr/include/c++/5/bits/stl_list.h" 3
bool operator==(const _Self &__x) const noexcept
# 188 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_M_node) == (__x._M_node); }
# 191 "/usr/include/c++/5/bits/stl_list.h" 3
bool operator!=(const _Self &__x) const noexcept
# 192 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_M_node) != (__x._M_node); }
# 195 "/usr/include/c++/5/bits/stl_list.h" 3
__detail::_List_node_base *_M_node;
# 196 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 203 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp>
# 204 "/usr/include/c++/5/bits/stl_list.h" 3
struct _List_const_iterator {
# 206 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _List_const_iterator _Self;
# 207 "/usr/include/c++/5/bits/stl_list.h" 3
typedef const _List_node< _Tp> _Node;
# 208 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _List_iterator< _Tp> iterator;
# 210 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ptrdiff_t difference_type;
# 211 "/usr/include/c++/5/bits/stl_list.h" 3
typedef bidirectional_iterator_tag iterator_category;
# 212 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _Tp value_type;
# 213 "/usr/include/c++/5/bits/stl_list.h" 3
typedef const _Tp *pointer;
# 214 "/usr/include/c++/5/bits/stl_list.h" 3
typedef const _Tp &reference;
# 216 "/usr/include/c++/5/bits/stl_list.h" 3
_List_const_iterator() noexcept : _M_node()
# 217 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 220 "/usr/include/c++/5/bits/stl_list.h" 3
explicit _List_const_iterator(const __detail::_List_node_base *__x) noexcept : _M_node(__x)
# 222 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 224 "/usr/include/c++/5/bits/stl_list.h" 3
_List_const_iterator(const iterator &__x) noexcept : _M_node(((__x._M_node)))
# 225 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 228 "/usr/include/c++/5/bits/stl_list.h" 3
iterator _M_const_cast() const noexcept
# 229 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((iterator)(const_cast< __detail::_List_node_base *>(_M_node))); }
# 234 "/usr/include/c++/5/bits/stl_list.h" 3
reference operator*() const noexcept
# 235 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (static_cast< _Node *>(_M_node))->_M_data; }
# 238 "/usr/include/c++/5/bits/stl_list.h" 3
pointer operator->() const noexcept
# 239 "/usr/include/c++/5/bits/stl_list.h" 3
{ return std::__addressof(((static_cast< _Node *>(_M_node))->_M_data)); }
# 242 "/usr/include/c++/5/bits/stl_list.h" 3
_Self &operator++() noexcept
# 243 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 244 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_next);
# 245 "/usr/include/c++/5/bits/stl_list.h" 3
return *this;
# 246 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 249 "/usr/include/c++/5/bits/stl_list.h" 3
_Self operator++(int) noexcept
# 250 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 251 "/usr/include/c++/5/bits/stl_list.h" 3
_Self __tmp = *this;
# 252 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_next);
# 253 "/usr/include/c++/5/bits/stl_list.h" 3
return __tmp;
# 254 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 257 "/usr/include/c++/5/bits/stl_list.h" 3
_Self &operator--() noexcept
# 258 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 259 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_prev);
# 260 "/usr/include/c++/5/bits/stl_list.h" 3
return *this;
# 261 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 264 "/usr/include/c++/5/bits/stl_list.h" 3
_Self operator--(int) noexcept
# 265 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_list.h" 3
_Self __tmp = *this;
# 267 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_node) = ((_M_node)->_M_prev);
# 268 "/usr/include/c++/5/bits/stl_list.h" 3
return __tmp;
# 269 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 272 "/usr/include/c++/5/bits/stl_list.h" 3
bool operator==(const _Self &__x) const noexcept
# 273 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_M_node) == (__x._M_node); }
# 276 "/usr/include/c++/5/bits/stl_list.h" 3
bool operator!=(const _Self &__x) const noexcept
# 277 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_M_node) != (__x._M_node); }
# 280 "/usr/include/c++/5/bits/stl_list.h" 3
const __detail::_List_node_base *_M_node;
# 281 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 283 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Val> inline bool
# 285 "/usr/include/c++/5/bits/stl_list.h" 3
operator==(const _List_iterator< _Val> &__x, const _List_const_iterator< _Val> &
# 286 "/usr/include/c++/5/bits/stl_list.h" 3
__y) noexcept
# 287 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (__x._M_node) == (__y._M_node); }
# 289 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Val> inline bool
# 291 "/usr/include/c++/5/bits/stl_list.h" 3
operator!=(const _List_iterator< _Val> &__x, const _List_const_iterator< _Val> &
# 292 "/usr/include/c++/5/bits/stl_list.h" 3
__y) noexcept
# 293 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (__x._M_node) != (__y._M_node); }
# 295 "/usr/include/c++/5/bits/stl_list.h" 3
inline namespace __cxx11 {
# 297 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc>
# 298 "/usr/include/c++/5/bits/stl_list.h" 3
class _List_base {
# 315 "/usr/include/c++/5/bits/stl_list.h" 3
protected: typedef typename _Alloc::template rebind< _List_node< _Tp> > ::other _Node_alloc_type;
# 317 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename _Alloc::template rebind< _Tp> ::other _Tp_alloc_type;
# 320 "/usr/include/c++/5/bits/stl_list.h" 3
static size_t _S_distance(const __detail::_List_node_base *__first, const __detail::_List_node_base *
# 321 "/usr/include/c++/5/bits/stl_list.h" 3
__last)
# 322 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 323 "/usr/include/c++/5/bits/stl_list.h" 3
size_t __n = (0);
# 324 "/usr/include/c++/5/bits/stl_list.h" 3
while (__first != __last)
# 325 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 326 "/usr/include/c++/5/bits/stl_list.h" 3
__first = (__first->_M_next);
# 327 "/usr/include/c++/5/bits/stl_list.h" 3
++__n;
# 328 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 329 "/usr/include/c++/5/bits/stl_list.h" 3
return __n;
# 330 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 332 "/usr/include/c++/5/bits/stl_list.h" 3
struct _List_impl : public _Node_alloc_type {
# 336 "/usr/include/c++/5/bits/stl_list.h" 3
::std::_List_node< unsigned long> _M_node;
# 341 "/usr/include/c++/5/bits/stl_list.h" 3
_List_impl() : ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type(), _M_node()
# 343 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 345 "/usr/include/c++/5/bits/stl_list.h" 3
_List_impl(const typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type &__a) noexcept : ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type(__a), _M_node()
# 347 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 350 "/usr/include/c++/5/bits/stl_list.h" 3
_List_impl(typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type &&__a) noexcept : ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type(::std::move(__a)), _M_node()
# 352 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 354 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 356 "/usr/include/c++/5/bits/stl_list.h" 3
_List_impl _M_impl;
# 359 "/usr/include/c++/5/bits/stl_list.h" 3
size_t _M_get_size() const { return ((_M_impl)._M_node)._M_data; }
# 361 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_set_size(size_t __n) { (((_M_impl)._M_node)._M_data) = __n; }
# 363 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_inc_size(size_t __n) { (((_M_impl)._M_node)._M_data) += __n; }
# 365 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_dec_size(size_t __n) { (((_M_impl)._M_node)._M_data) -= __n; }
# 368 "/usr/include/c++/5/bits/stl_list.h" 3
size_t _M_distance(const __detail::_List_node_base *__first, const __detail::_List_node_base *
# 369 "/usr/include/c++/5/bits/stl_list.h" 3
__last) const
# 370 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_S_distance)(__first, __last); }
# 373 "/usr/include/c++/5/bits/stl_list.h" 3
size_t _M_node_count() const { return ((_M_impl)._M_node)._M_data; }
# 391 "/usr/include/c++/5/bits/stl_list.h" 3
_List_node< _Tp> *_M_get_node()
# 392 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((_M_impl)._Node_alloc_type::allocate(1)); }
# 395 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_put_node(_List_node< _Tp> *__p) noexcept
# 396 "/usr/include/c++/5/bits/stl_list.h" 3
{ ((_M_impl)._Node_alloc_type::deallocate(__p, 1)); }
# 399 "/usr/include/c++/5/bits/stl_list.h" 3
public: typedef _Alloc allocator_type;
# 402 "/usr/include/c++/5/bits/stl_list.h" 3
_Node_alloc_type &_M_get_Node_allocator() noexcept
# 403 "/usr/include/c++/5/bits/stl_list.h" 3
{ return *(static_cast< _Node_alloc_type *>(&(_M_impl))); }
# 406 "/usr/include/c++/5/bits/stl_list.h" 3
const _Node_alloc_type &_M_get_Node_allocator() const noexcept
# 407 "/usr/include/c++/5/bits/stl_list.h" 3
{ return *(static_cast< const _Node_alloc_type *>(&(_M_impl))); }
# 410 "/usr/include/c++/5/bits/stl_list.h" 3
_Tp_alloc_type _M_get_Tp_allocator() const noexcept
# 411 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_Tp_alloc_type)this->_M_get_Node_allocator(); }
# 414 "/usr/include/c++/5/bits/stl_list.h" 3
allocator_type get_allocator() const noexcept
# 415 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (allocator_type)this->_M_get_Node_allocator(); }
# 417 "/usr/include/c++/5/bits/stl_list.h" 3
_List_base() : _M_impl()
# 419 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_init(); }
# 421 "/usr/include/c++/5/bits/stl_list.h" 3
_List_base(const _Node_alloc_type &__a) noexcept : _M_impl(__a)
# 423 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_init(); }
# 426 "/usr/include/c++/5/bits/stl_list.h" 3
_List_base(_List_base &&__x) noexcept : _M_impl(std::move(__x._M_get_Node_allocator()))
# 428 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 429 "/usr/include/c++/5/bits/stl_list.h" 3
auto *const __xnode = std::__addressof(((__x._M_impl)._M_node));
# 430 "/usr/include/c++/5/bits/stl_list.h" 3
if ((__xnode->_M_next) == __xnode) {
# 431 "/usr/include/c++/5/bits/stl_list.h" 3
_M_init(); } else
# 433 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 434 "/usr/include/c++/5/bits/stl_list.h" 3
auto *const __node = std::__addressof(((_M_impl)._M_node));
# 435 "/usr/include/c++/5/bits/stl_list.h" 3
(__node->_M_next) = (__xnode->_M_next);
# 436 "/usr/include/c++/5/bits/stl_list.h" 3
(__node->_M_prev) = (__xnode->_M_prev);
# 437 "/usr/include/c++/5/bits/stl_list.h" 3
((__node->_M_next)->_M_prev) = (((__node->_M_prev)->_M_next) = __node);
# 438 "/usr/include/c++/5/bits/stl_list.h" 3
_M_set_size(__x._M_get_size());
# 439 "/usr/include/c++/5/bits/stl_list.h" 3
__x._M_init();
# 440 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 441 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 445 "/usr/include/c++/5/bits/stl_list.h" 3
~_List_base() noexcept
# 446 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_clear(); }
# 449 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_clear() noexcept;
# 452 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_init() noexcept
# 453 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 454 "/usr/include/c++/5/bits/stl_list.h" 3
(((this->_M_impl)._M_node)._M_next) = (&((this->_M_impl)._M_node));
# 455 "/usr/include/c++/5/bits/stl_list.h" 3
(((this->_M_impl)._M_node)._M_prev) = (&((this->_M_impl)._M_node));
# 456 "/usr/include/c++/5/bits/stl_list.h" 3
_M_set_size(0);
# 457 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 458 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 506 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc = allocator< _Tp> >
# 507 "/usr/include/c++/5/bits/stl_list.h" 3
class list : protected _List_base< _Tp, _Alloc> {
# 510 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename _Alloc::value_type _Alloc_value_type;
# 514 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ::std::__cxx11::_List_base< _Tp, _Alloc> _Base;
# 515 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Tp_alloc_type _Tp_alloc_type;
# 516 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type _Node_alloc_type;
# 519 "/usr/include/c++/5/bits/stl_list.h" 3
public: typedef _Tp value_type;
# 520 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Tp_alloc_type::pointer pointer;
# 521 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Tp_alloc_type::const_pointer const_pointer;
# 522 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Tp_alloc_type::reference reference;
# 523 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Tp_alloc_type::const_reference const_reference;
# 524 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _List_iterator< _Tp> iterator;
# 525 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _List_const_iterator< _Tp> const_iterator;
# 526 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ::std::reverse_iterator< _List_const_iterator< _Tp> > const_reverse_iterator;
# 527 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ::std::reverse_iterator< _List_iterator< _Tp> > reverse_iterator;
# 528 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ::std::size_t size_type;
# 529 "/usr/include/c++/5/bits/stl_list.h" 3
typedef ::std::ptrdiff_t difference_type;
# 530 "/usr/include/c++/5/bits/stl_list.h" 3
typedef _Alloc allocator_type;
# 535 "/usr/include/c++/5/bits/stl_list.h" 3
protected: typedef _List_node< _Tp> _Node;
# 537 "/usr/include/c++/5/bits/stl_list.h" 3
using ::std::__cxx11::_List_base< _Tp, _Alloc> ::_M_impl;
# 538 "/usr/include/c++/5/bits/stl_list.h" 3
using ::std::__cxx11::_List_base< _Tp, _Alloc> ::_M_put_node;
# 539 "/usr/include/c++/5/bits/stl_list.h" 3
using ::std::__cxx11::_List_base< _Tp, _Alloc> ::_M_get_node;
# 540 "/usr/include/c++/5/bits/stl_list.h" 3
using ::std::__cxx11::_List_base< _Tp, _Alloc> ::_M_get_Tp_allocator;
# 541 "/usr/include/c++/5/bits/stl_list.h" 3
using ::std::__cxx11::_List_base< _Tp, _Alloc> ::_M_get_Node_allocator;
# 567 "/usr/include/c++/5/bits/stl_list.h" 3
template< class ..._Args> _Node *
# 569 "/usr/include/c++/5/bits/stl_list.h" 3
_M_create_node(_Args &&...__args)
# 570 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 571 "/usr/include/c++/5/bits/stl_list.h" 3
_Node *__p = (this->_M_get_node());
# 572 "/usr/include/c++/5/bits/stl_list.h" 3
try
# 573 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 574 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_get_Node_allocator().construct(__p, ::std::forward< _Args> (__args)...));
# 576 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 577 "/usr/include/c++/5/bits/stl_list.h" 3
catch (...)
# 578 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 579 "/usr/include/c++/5/bits/stl_list.h" 3
_M_put_node(__p);
# 580 "/usr/include/c++/5/bits/stl_list.h" 3
throw;
# 581 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 582 "/usr/include/c++/5/bits/stl_list.h" 3
return __p;
# 583 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 593 "/usr/include/c++/5/bits/stl_list.h" 3
public: list() noexcept(is_nothrow_default_constructible< typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type> ::value) : _Base()
# 597 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 604 "/usr/include/c++/5/bits/stl_list.h" 3
explicit list(const allocator_type &__a) noexcept : _Base((_Node_alloc_type)__a)
# 605 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 616 "/usr/include/c++/5/bits/stl_list.h" 3
explicit list(size_type __n) : _Base()
# 618 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_default_initialize(__n); }
# 628 "/usr/include/c++/5/bits/stl_list.h" 3
list(size_type __n, const value_type &__value, const allocator_type &
# 629 "/usr/include/c++/5/bits/stl_list.h" 3
__a = allocator_type()) : _Base((_Node_alloc_type)__a)
# 631 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_fill_initialize(__n, __value); }
# 655 "/usr/include/c++/5/bits/stl_list.h" 3
list(const list &__x) : _Base((__x._M_get_Node_allocator()))
# 657 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_initialize_dispatch(__x.begin(), __x.end(), ::std::__false_type()); }
# 667 "/usr/include/c++/5/bits/stl_list.h" 3
list(list &&__x) noexcept : _Base(::std::move(__x))
# 668 "/usr/include/c++/5/bits/stl_list.h" 3
{ }
# 678 "/usr/include/c++/5/bits/stl_list.h" 3
list(initializer_list< _Tp> __l, const allocator_type &
# 679 "/usr/include/c++/5/bits/stl_list.h" 3
__a = allocator_type()) : _Base((_Node_alloc_type)__a)
# 681 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_initialize_dispatch((__l.begin()), (__l.end()), ::std::__false_type()); }
# 695 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _InputIterator, class
# 696 "/usr/include/c++/5/bits/stl_list.h" 3
 = ::std::_RequireInputIter< _InputIterator> >
# 697 "/usr/include/c++/5/bits/stl_list.h" 3
list(_InputIterator __first, _InputIterator __last, const allocator_type &
# 698 "/usr/include/c++/5/bits/stl_list.h" 3
__a = allocator_type()) : _Base((_Node_alloc_type)__a)
# 700 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_initialize_dispatch(__first, __last, ::std::__false_type()); }
# 729 "/usr/include/c++/5/bits/stl_list.h" 3
list &operator=(const list & __x);
# 740 "/usr/include/c++/5/bits/stl_list.h" 3
list &operator=(list &&__x)
# 741 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 744 "/usr/include/c++/5/bits/stl_list.h" 3
this->clear();
# 745 "/usr/include/c++/5/bits/stl_list.h" 3
this->swap(__x);
# 746 "/usr/include/c++/5/bits/stl_list.h" 3
return *this;
# 747 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 757 "/usr/include/c++/5/bits/stl_list.h" 3
list &operator=(initializer_list< _Tp> __l)
# 758 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 759 "/usr/include/c++/5/bits/stl_list.h" 3
(this->assign((__l.begin()), (__l.end())));
# 760 "/usr/include/c++/5/bits/stl_list.h" 3
return *this;
# 761 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 775 "/usr/include/c++/5/bits/stl_list.h" 3
void assign(size_type __n, const value_type &__val)
# 776 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_fill_assign(__n, __val); }
# 791 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _InputIterator, class
# 792 "/usr/include/c++/5/bits/stl_list.h" 3
 = ::std::_RequireInputIter< _InputIterator> > void
# 794 "/usr/include/c++/5/bits/stl_list.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 795 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_assign_dispatch(__first, __last, ::std::__false_type()); }
# 816 "/usr/include/c++/5/bits/stl_list.h" 3
void assign(initializer_list< _Tp> __l)
# 817 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->assign((__l.begin()), (__l.end()))); }
# 822 "/usr/include/c++/5/bits/stl_list.h" 3
allocator_type get_allocator() const noexcept
# 823 "/usr/include/c++/5/bits/stl_list.h" 3
{ return _Base::get_allocator(); }
# 831 "/usr/include/c++/5/bits/stl_list.h" 3
iterator begin() noexcept
# 832 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((iterator)((((this->_M_impl)._M_node)._M_next))); }
# 840 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator begin() const noexcept
# 841 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_iterator)((((this->_M_impl)._M_node)._M_next))); }
# 849 "/usr/include/c++/5/bits/stl_list.h" 3
iterator end() noexcept
# 850 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((iterator)(&((this->_M_impl)._M_node))); }
# 858 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator end() const noexcept
# 859 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_iterator)(&((this->_M_impl)._M_node))); }
# 867 "/usr/include/c++/5/bits/stl_list.h" 3
reverse_iterator rbegin() noexcept
# 868 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((reverse_iterator)(this->end())); }
# 876 "/usr/include/c++/5/bits/stl_list.h" 3
const_reverse_iterator rbegin() const noexcept
# 877 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 885 "/usr/include/c++/5/bits/stl_list.h" 3
reverse_iterator rend() noexcept
# 886 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 894 "/usr/include/c++/5/bits/stl_list.h" 3
const_reverse_iterator rend() const noexcept
# 895 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 904 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator cbegin() const noexcept
# 905 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_iterator)((((this->_M_impl)._M_node)._M_next))); }
# 913 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator cend() const noexcept
# 914 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_iterator)(&((this->_M_impl)._M_node))); }
# 922 "/usr/include/c++/5/bits/stl_list.h" 3
const_reverse_iterator crbegin() const noexcept
# 923 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 931 "/usr/include/c++/5/bits/stl_list.h" 3
const_reverse_iterator crend() const noexcept
# 932 "/usr/include/c++/5/bits/stl_list.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 941 "/usr/include/c++/5/bits/stl_list.h" 3
bool empty() const noexcept
# 942 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (((this->_M_impl)._M_node)._M_next) == (&((this->_M_impl)._M_node)); }
# 946 "/usr/include/c++/5/bits/stl_list.h" 3
size_type size() const noexcept
# 947 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (this->_M_node_count()); }
# 951 "/usr/include/c++/5/bits/stl_list.h" 3
size_type max_size() const noexcept
# 952 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (_M_get_Node_allocator().max_size()); }
# 965 "/usr/include/c++/5/bits/stl_list.h" 3
void resize(size_type __new_size);
# 978 "/usr/include/c++/5/bits/stl_list.h" 3
void resize(size_type __new_size, const value_type & __x);
# 1000 "/usr/include/c++/5/bits/stl_list.h" 3
reference front() noexcept
# 1001 "/usr/include/c++/5/bits/stl_list.h" 3
{ return *this->begin(); }
# 1008 "/usr/include/c++/5/bits/stl_list.h" 3
const_reference front() const noexcept
# 1009 "/usr/include/c++/5/bits/stl_list.h" 3
{ return *this->begin(); }
# 1016 "/usr/include/c++/5/bits/stl_list.h" 3
reference back() noexcept
# 1017 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1018 "/usr/include/c++/5/bits/stl_list.h" 3
iterator __tmp = this->end();
# 1019 "/usr/include/c++/5/bits/stl_list.h" 3
--__tmp;
# 1020 "/usr/include/c++/5/bits/stl_list.h" 3
return *__tmp;
# 1021 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1028 "/usr/include/c++/5/bits/stl_list.h" 3
const_reference back() const noexcept
# 1029 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1030 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator __tmp = this->end();
# 1031 "/usr/include/c++/5/bits/stl_list.h" 3
--__tmp;
# 1032 "/usr/include/c++/5/bits/stl_list.h" 3
return *__tmp;
# 1033 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1047 "/usr/include/c++/5/bits/stl_list.h" 3
void push_front(const value_type &__x)
# 1048 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->_M_insert(this->begin(), __x)); }
# 1052 "/usr/include/c++/5/bits/stl_list.h" 3
void push_front(value_type &&__x)
# 1053 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->_M_insert(this->begin(), ::std::move(__x))); }
# 1055 "/usr/include/c++/5/bits/stl_list.h" 3
template< class ..._Args> void
# 1057 "/usr/include/c++/5/bits/stl_list.h" 3
emplace_front(_Args &&...__args)
# 1058 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->_M_insert(this->begin(), ::std::forward< _Args> (__args)...)); }
# 1074 "/usr/include/c++/5/bits/stl_list.h" 3
void pop_front() noexcept
# 1075 "/usr/include/c++/5/bits/stl_list.h" 3
{ this->_M_erase(this->begin()); }
# 1088 "/usr/include/c++/5/bits/stl_list.h" 3
void push_back(const value_type &__x)
# 1089 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->_M_insert(this->end(), __x)); }
# 1093 "/usr/include/c++/5/bits/stl_list.h" 3
void push_back(value_type &&__x)
# 1094 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->_M_insert(this->end(), ::std::move(__x))); }
# 1096 "/usr/include/c++/5/bits/stl_list.h" 3
template< class ..._Args> void
# 1098 "/usr/include/c++/5/bits/stl_list.h" 3
emplace_back(_Args &&...__args)
# 1099 "/usr/include/c++/5/bits/stl_list.h" 3
{ (this->_M_insert(this->end(), ::std::forward< _Args> (__args)...)); }
# 1114 "/usr/include/c++/5/bits/stl_list.h" 3
void pop_back() noexcept
# 1115 "/usr/include/c++/5/bits/stl_list.h" 3
{ this->_M_erase(((((iterator)((((this->_M_impl)._M_node)._M_prev)))))); }
# 1130 "/usr/include/c++/5/bits/stl_list.h" 3
template< class ..._Args> iterator emplace(const_iterator __position, _Args && ...__args);
# 1146 "/usr/include/c++/5/bits/stl_list.h" 3
iterator insert(const_iterator __position, const value_type & __x);
# 1176 "/usr/include/c++/5/bits/stl_list.h" 3
iterator insert(const_iterator __position, value_type &&__x)
# 1177 "/usr/include/c++/5/bits/stl_list.h" 3
{ return emplace(__position, ::std::move(__x)); }
# 1195 "/usr/include/c++/5/bits/stl_list.h" 3
iterator insert(const_iterator __p, initializer_list< _Tp> __l)
# 1196 "/usr/include/c++/5/bits/stl_list.h" 3
{ return (this->insert(__p, (__l.begin()), (__l.end()))); }
# 1215 "/usr/include/c++/5/bits/stl_list.h" 3
iterator insert(const_iterator __position, size_type __n, const value_type & __x);
# 1253 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _InputIterator, class
# 1254 "/usr/include/c++/5/bits/stl_list.h" 3
 = ::std::_RequireInputIter< _InputIterator> > iterator
# 1253 "/usr/include/c++/5/bits/stl_list.h" 3
insert(const_iterator __position, _InputIterator __first, _InputIterator __last);
# 1299 "/usr/include/c++/5/bits/stl_list.h" 3
iterator erase(const_iterator __position) noexcept;
# 1324 "/usr/include/c++/5/bits/stl_list.h" 3
iterator erase(const_iterator __first, const_iterator __last) noexcept
# 1328 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1329 "/usr/include/c++/5/bits/stl_list.h" 3
while (__first != __last) {
# 1330 "/usr/include/c++/5/bits/stl_list.h" 3
__first = erase(__first); }
# 1331 "/usr/include/c++/5/bits/stl_list.h" 3
return (__last._M_const_cast());
# 1332 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1344 "/usr/include/c++/5/bits/stl_list.h" 3
void swap(list &__x)
# 1345 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1346 "/usr/include/c++/5/bits/stl_list.h" 3
__detail::_List_node_base::swap(((this->_M_impl)._M_node), ((__x._M_impl)._M_node));
# 1349 "/usr/include/c++/5/bits/stl_list.h" 3
::std::size_t __xsize = (__x._M_get_size());
# 1350 "/usr/include/c++/5/bits/stl_list.h" 3
(__x._M_set_size((this->_M_get_size())));
# 1351 "/usr/include/c++/5/bits/stl_list.h" 3
(this->_M_set_size(__xsize));
# 1355 "/usr/include/c++/5/bits/stl_list.h" 3
std::__alloc_swap< typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type> ::_S_do_it(_M_get_Node_allocator(), (__x._M_get_Node_allocator()));
# 1357 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1366 "/usr/include/c++/5/bits/stl_list.h" 3
void clear() noexcept
# 1367 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1368 "/usr/include/c++/5/bits/stl_list.h" 3
_Base::_M_clear();
# 1369 "/usr/include/c++/5/bits/stl_list.h" 3
_Base::_M_init();
# 1370 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1386 "/usr/include/c++/5/bits/stl_list.h" 3
void splice(const_iterator __position, list &&__x) noexcept
# 1390 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1391 "/usr/include/c++/5/bits/stl_list.h" 3
if (!__x.empty())
# 1392 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1393 "/usr/include/c++/5/bits/stl_list.h" 3
_M_check_equal_allocators(__x);
# 1395 "/usr/include/c++/5/bits/stl_list.h" 3
this->_M_transfer((__position._M_const_cast()), __x.begin(), __x.end());
# 1398 "/usr/include/c++/5/bits/stl_list.h" 3
(this->_M_inc_size((__x._M_get_size())));
# 1399 "/usr/include/c++/5/bits/stl_list.h" 3
(__x._M_set_size(0));
# 1400 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1401 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1405 "/usr/include/c++/5/bits/stl_list.h" 3
void splice(const_iterator __position, list &__x) noexcept
# 1406 "/usr/include/c++/5/bits/stl_list.h" 3
{ splice(__position, ::std::move(__x)); }
# 1421 "/usr/include/c++/5/bits/stl_list.h" 3
void splice(const_iterator __position, list &&__x, const_iterator __i) noexcept
# 1435 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1436 "/usr/include/c++/5/bits/stl_list.h" 3
iterator __j = (__i._M_const_cast());
# 1437 "/usr/include/c++/5/bits/stl_list.h" 3
++__j;
# 1438 "/usr/include/c++/5/bits/stl_list.h" 3
if ((__position == __i) || (__position == __j)) {
# 1439 "/usr/include/c++/5/bits/stl_list.h" 3
return; }
# 1441 "/usr/include/c++/5/bits/stl_list.h" 3
if (this != (&__x)) {
# 1442 "/usr/include/c++/5/bits/stl_list.h" 3
_M_check_equal_allocators(__x); }
# 1444 "/usr/include/c++/5/bits/stl_list.h" 3
this->_M_transfer((__position._M_const_cast()), (__i._M_const_cast()), __j);
# 1447 "/usr/include/c++/5/bits/stl_list.h" 3
(this->_M_inc_size(1));
# 1448 "/usr/include/c++/5/bits/stl_list.h" 3
(__x._M_dec_size(1));
# 1449 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1463 "/usr/include/c++/5/bits/stl_list.h" 3
void splice(const_iterator __position, list &__x, const_iterator __i) noexcept
# 1464 "/usr/include/c++/5/bits/stl_list.h" 3
{ splice(__position, ::std::move(__x), __i); }
# 1482 "/usr/include/c++/5/bits/stl_list.h" 3
void splice(const_iterator __position, list &&__x, const_iterator __first, const_iterator
# 1483 "/usr/include/c++/5/bits/stl_list.h" 3
__last) noexcept
# 1501 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1502 "/usr/include/c++/5/bits/stl_list.h" 3
if (__first != __last)
# 1503 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1504 "/usr/include/c++/5/bits/stl_list.h" 3
if (this != (&__x)) {
# 1505 "/usr/include/c++/5/bits/stl_list.h" 3
_M_check_equal_allocators(__x); }
# 1507 "/usr/include/c++/5/bits/stl_list.h" 3
::std::size_t __n = (this->_M_distance((__first._M_node), (__last._M_node)));
# 1508 "/usr/include/c++/5/bits/stl_list.h" 3
(this->_M_inc_size(__n));
# 1509 "/usr/include/c++/5/bits/stl_list.h" 3
(__x._M_dec_size(__n));
# 1511 "/usr/include/c++/5/bits/stl_list.h" 3
this->_M_transfer((__position._M_const_cast()), (__first._M_const_cast()), (__last._M_const_cast()));
# 1514 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1515 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1532 "/usr/include/c++/5/bits/stl_list.h" 3
void splice(const_iterator __position, list &__x, const_iterator __first, const_iterator
# 1533 "/usr/include/c++/5/bits/stl_list.h" 3
__last) noexcept
# 1534 "/usr/include/c++/5/bits/stl_list.h" 3
{ splice(__position, ::std::move(__x), __first, __last); }
# 1549 "/usr/include/c++/5/bits/stl_list.h" 3
void remove(const _Tp & __value);
# 1562 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Predicate> void remove_if(_Predicate);
# 1577 "/usr/include/c++/5/bits/stl_list.h" 3
void unique();
# 1591 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _BinaryPredicate> void unique(_BinaryPredicate);
# 1606 "/usr/include/c++/5/bits/stl_list.h" 3
void merge(list && __x);
# 1609 "/usr/include/c++/5/bits/stl_list.h" 3
void merge(list &__x)
# 1610 "/usr/include/c++/5/bits/stl_list.h" 3
{ merge(::std::move(__x)); }
# 1630 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _StrictWeakOrdering> void merge(list && __x, _StrictWeakOrdering __comp);
# 1634 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _StrictWeakOrdering> void
# 1636 "/usr/include/c++/5/bits/stl_list.h" 3
merge(list &__x, _StrictWeakOrdering __comp)
# 1637 "/usr/include/c++/5/bits/stl_list.h" 3
{ merge(::std::move(__x), __comp); }
# 1650 "/usr/include/c++/5/bits/stl_list.h" 3
void reverse() noexcept
# 1651 "/usr/include/c++/5/bits/stl_list.h" 3
{ (((this->_M_impl)._M_node)._M_reverse()); }
# 1660 "/usr/include/c++/5/bits/stl_list.h" 3
void sort();
# 1668 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _StrictWeakOrdering> void sort(_StrictWeakOrdering);
# 1681 "/usr/include/c++/5/bits/stl_list.h" 3
protected:
# 1679 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Integer> void
# 1681 "/usr/include/c++/5/bits/stl_list.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __x, ::std::__true_type)
# 1682 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_fill_initialize(static_cast< size_type>(__n), __x); }
# 1685 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _InputIterator> void
# 1687 "/usr/include/c++/5/bits/stl_list.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1689 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1690 "/usr/include/c++/5/bits/stl_list.h" 3
for (; __first != __last; ++__first) {
# 1692 "/usr/include/c++/5/bits/stl_list.h" 3
emplace_back(*__first); }
# 1696 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1701 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_fill_initialize(size_type __n, const value_type &__x)
# 1702 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1703 "/usr/include/c++/5/bits/stl_list.h" 3
for (; __n; --__n) {
# 1704 "/usr/include/c++/5/bits/stl_list.h" 3
push_back(__x); }
# 1705 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1710 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_default_initialize(size_type __n)
# 1711 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1712 "/usr/include/c++/5/bits/stl_list.h" 3
for (; __n; --__n) {
# 1713 "/usr/include/c++/5/bits/stl_list.h" 3
emplace_back(); }
# 1714 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1718 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_default_append(size_type __n);
# 1727 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Integer> void
# 1729 "/usr/include/c++/5/bits/stl_list.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1730 "/usr/include/c++/5/bits/stl_list.h" 3
{ _M_fill_assign(__n, __val); }
# 1733 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type);
# 1741 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_fill_assign(size_type __n, const value_type & __val);
# 1746 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_transfer(iterator __position, iterator __first, iterator __last)
# 1747 "/usr/include/c++/5/bits/stl_list.h" 3
{ ((__position._M_node)->_M_transfer((__first._M_node), (__last._M_node))); }
# 1759 "/usr/include/c++/5/bits/stl_list.h" 3
template< class ..._Args> void
# 1761 "/usr/include/c++/5/bits/stl_list.h" 3
_M_insert(iterator __position, _Args &&...__args)
# 1762 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1763 "/usr/include/c++/5/bits/stl_list.h" 3
_Node *__tmp = _M_create_node(::std::forward< _Args> (__args)...);
# 1764 "/usr/include/c++/5/bits/stl_list.h" 3
(__tmp->_M_hook((__position._M_node)));
# 1765 "/usr/include/c++/5/bits/stl_list.h" 3
(this->_M_inc_size(1));
# 1766 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1771 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_erase(iterator __position) noexcept
# 1772 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1773 "/usr/include/c++/5/bits/stl_list.h" 3
(this->_M_dec_size(1));
# 1774 "/usr/include/c++/5/bits/stl_list.h" 3
((__position._M_node)->_M_unhook());
# 1775 "/usr/include/c++/5/bits/stl_list.h" 3
_Node *__n = static_cast< _Node *>(__position._M_node);
# 1777 "/usr/include/c++/5/bits/stl_list.h" 3
(_M_get_Node_allocator().destroy(__n));
# 1781 "/usr/include/c++/5/bits/stl_list.h" 3
_M_put_node(__n);
# 1782 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1786 "/usr/include/c++/5/bits/stl_list.h" 3
void _M_check_equal_allocators(list &__x) noexcept
# 1787 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1788 "/usr/include/c++/5/bits/stl_list.h" 3
if (std::__alloc_neq< typename ::std::__cxx11::_List_base< _Tp, _Alloc> ::_Node_alloc_type> ::_S_do_it(_M_get_Node_allocator(), (__x._M_get_Node_allocator()))) {
# 1790 "/usr/include/c++/5/bits/stl_list.h" 3
__builtin_abort(); }
# 1791 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1792 "/usr/include/c++/5/bits/stl_list.h" 3
};
# 1793 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1805 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline bool
# 1807 "/usr/include/c++/5/bits/stl_list.h" 3
operator==(const __cxx11::list< _Tp, _Alloc> &__x, const __cxx11::list< _Tp, _Alloc> &__y)
# 1808 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1809 "/usr/include/c++/5/bits/stl_list.h" 3
typedef typename __cxx11::list< _Tp, _Alloc> ::const_iterator const_iterator;
# 1810 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator __end1 = (__x.end());
# 1811 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator __end2 = (__y.end());
# 1813 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator __i1 = (__x.begin());
# 1814 "/usr/include/c++/5/bits/stl_list.h" 3
const_iterator __i2 = (__y.begin());
# 1815 "/usr/include/c++/5/bits/stl_list.h" 3
while ((__i1 != __end1) && (__i2 != __end2) && ((*__i1) == (*__i2)))
# 1816 "/usr/include/c++/5/bits/stl_list.h" 3
{
# 1817 "/usr/include/c++/5/bits/stl_list.h" 3
++__i1;
# 1818 "/usr/include/c++/5/bits/stl_list.h" 3
++__i2;
# 1819 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1820 "/usr/include/c++/5/bits/stl_list.h" 3
return (__i1 == __end1) && (__i2 == __end2);
# 1821 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1834 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline bool
# 1836 "/usr/include/c++/5/bits/stl_list.h" 3
operator<(const __cxx11::list< _Tp, _Alloc> &__x, const __cxx11::list< _Tp, _Alloc> &__y)
# 1837 "/usr/include/c++/5/bits/stl_list.h" 3
{ return std::lexicographical_compare((__x.begin()), (__x.end()), (__y.begin()), (__y.end()));
# 1838 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 1841 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline bool
# 1843 "/usr/include/c++/5/bits/stl_list.h" 3
operator!=(const __cxx11::list< _Tp, _Alloc> &__x, const __cxx11::list< _Tp, _Alloc> &__y)
# 1844 "/usr/include/c++/5/bits/stl_list.h" 3
{ return !(__x == __y); }
# 1847 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline bool
# 1849 "/usr/include/c++/5/bits/stl_list.h" 3
operator>(const __cxx11::list< _Tp, _Alloc> &__x, const __cxx11::list< _Tp, _Alloc> &__y)
# 1850 "/usr/include/c++/5/bits/stl_list.h" 3
{ return __y < __x; }
# 1853 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline bool
# 1855 "/usr/include/c++/5/bits/stl_list.h" 3
operator<=(const __cxx11::list< _Tp, _Alloc> &__x, const __cxx11::list< _Tp, _Alloc> &__y)
# 1856 "/usr/include/c++/5/bits/stl_list.h" 3
{ return !(__y < __x); }
# 1859 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline bool
# 1861 "/usr/include/c++/5/bits/stl_list.h" 3
operator>=(const __cxx11::list< _Tp, _Alloc> &__x, const __cxx11::list< _Tp, _Alloc> &__y)
# 1862 "/usr/include/c++/5/bits/stl_list.h" 3
{ return !(__x < __y); }
# 1865 "/usr/include/c++/5/bits/stl_list.h" 3
template< class _Tp, class _Alloc> inline void
# 1867 "/usr/include/c++/5/bits/stl_list.h" 3
swap(__cxx11::list< _Tp, _Alloc> &__x, __cxx11::list< _Tp, _Alloc> &__y)
# 1868 "/usr/include/c++/5/bits/stl_list.h" 3
{ (__x.swap(__y)); }
# 1871 "/usr/include/c++/5/bits/stl_list.h" 3
}
# 59 "/usr/include/c++/5/bits/list.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 66 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::_List_base< _Tp, _Alloc> ::_M_clear() noexcept
# 67 "/usr/include/c++/5/bits/list.tcc" 3
{
# 68 "/usr/include/c++/5/bits/list.tcc" 3
typedef _List_node< _Tp> _Node;
# 69 "/usr/include/c++/5/bits/list.tcc" 3
__detail::_List_node_base *__cur = ((((_M_impl)._M_node)._M_next));
# 70 "/usr/include/c++/5/bits/list.tcc" 3
while (__cur != (&((_M_impl)._M_node)))
# 71 "/usr/include/c++/5/bits/list.tcc" 3
{
# 72 "/usr/include/c++/5/bits/list.tcc" 3
_Node *__tmp = static_cast< _Node *>(__cur);
# 73 "/usr/include/c++/5/bits/list.tcc" 3
__cur = (__tmp->_M_next);
# 75 "/usr/include/c++/5/bits/list.tcc" 3
(this->_M_get_Node_allocator().destroy(__tmp));
# 79 "/usr/include/c++/5/bits/list.tcc" 3
_M_put_node(__tmp);
# 80 "/usr/include/c++/5/bits/list.tcc" 3
}
# 81 "/usr/include/c++/5/bits/list.tcc" 3
}
# 84 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 85 "/usr/include/c++/5/bits/list.tcc" 3
template< class ..._Args> typename __cxx11::list< _Tp, _Alloc> ::iterator
# 88 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::emplace(const_iterator __position, _Args &&...__args)
# 89 "/usr/include/c++/5/bits/list.tcc" 3
{
# 90 "/usr/include/c++/5/bits/list.tcc" 3
_Node *__tmp = _M_create_node(::std::forward< _Args> (__args)...);
# 91 "/usr/include/c++/5/bits/list.tcc" 3
(__tmp->_M_hook(((__position._M_const_cast())._M_node)));
# 92 "/usr/include/c++/5/bits/list.tcc" 3
(this->_M_inc_size(1));
# 93 "/usr/include/c++/5/bits/list.tcc" 3
return ((iterator)(__tmp));
# 94 "/usr/include/c++/5/bits/list.tcc" 3
}
# 97 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> typename __cxx11::list< _Tp, _Alloc> ::iterator
# 101 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::insert(const_iterator __position, const value_type &__x)
# 105 "/usr/include/c++/5/bits/list.tcc" 3
{
# 106 "/usr/include/c++/5/bits/list.tcc" 3
_Node *__tmp = _M_create_node(__x);
# 107 "/usr/include/c++/5/bits/list.tcc" 3
(__tmp->_M_hook(((__position._M_const_cast())._M_node)));
# 108 "/usr/include/c++/5/bits/list.tcc" 3
(this->_M_inc_size(1));
# 109 "/usr/include/c++/5/bits/list.tcc" 3
return ((iterator)(__tmp));
# 110 "/usr/include/c++/5/bits/list.tcc" 3
}
# 113 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> typename __cxx11::list< _Tp, _Alloc> ::iterator
# 116 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::insert(const_iterator __position, size_type __n, const value_type &__x)
# 117 "/usr/include/c++/5/bits/list.tcc" 3
{
# 118 "/usr/include/c++/5/bits/list.tcc" 3
if (__n)
# 119 "/usr/include/c++/5/bits/list.tcc" 3
{
# 120 "/usr/include/c++/5/bits/list.tcc" 3
list __tmp(__n, __x, get_allocator());
# 121 "/usr/include/c++/5/bits/list.tcc" 3
iterator __it = __tmp.begin();
# 122 "/usr/include/c++/5/bits/list.tcc" 3
splice(__position, __tmp);
# 123 "/usr/include/c++/5/bits/list.tcc" 3
return __it;
# 124 "/usr/include/c++/5/bits/list.tcc" 3
}
# 125 "/usr/include/c++/5/bits/list.tcc" 3
return (__position._M_const_cast());
# 126 "/usr/include/c++/5/bits/list.tcc" 3
}
# 128 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 129 "/usr/include/c++/5/bits/list.tcc" 3
template< class _InputIterator, class > typename __cxx11::list< _Tp, _Alloc> ::iterator
# 132 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::insert(const_iterator __position, _InputIterator __first, _InputIterator
# 133 "/usr/include/c++/5/bits/list.tcc" 3
__last)
# 134 "/usr/include/c++/5/bits/list.tcc" 3
{
# 135 "/usr/include/c++/5/bits/list.tcc" 3
list __tmp(__first, __last, get_allocator());
# 136 "/usr/include/c++/5/bits/list.tcc" 3
if (!__tmp.empty())
# 137 "/usr/include/c++/5/bits/list.tcc" 3
{
# 138 "/usr/include/c++/5/bits/list.tcc" 3
iterator __it = __tmp.begin();
# 139 "/usr/include/c++/5/bits/list.tcc" 3
splice(__position, __tmp);
# 140 "/usr/include/c++/5/bits/list.tcc" 3
return __it;
# 141 "/usr/include/c++/5/bits/list.tcc" 3
}
# 142 "/usr/include/c++/5/bits/list.tcc" 3
return (__position._M_const_cast());
# 143 "/usr/include/c++/5/bits/list.tcc" 3
}
# 146 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> typename __cxx11::list< _Tp, _Alloc> ::iterator
# 150 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::erase(const_iterator __position) noexcept
# 154 "/usr/include/c++/5/bits/list.tcc" 3
{
# 155 "/usr/include/c++/5/bits/list.tcc" 3
iterator __ret = ((((iterator)(((__position._M_node)->_M_next)))));
# 156 "/usr/include/c++/5/bits/list.tcc" 3
_M_erase((__position._M_const_cast()));
# 157 "/usr/include/c++/5/bits/list.tcc" 3
return __ret;
# 158 "/usr/include/c++/5/bits/list.tcc" 3
}
# 161 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 164 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::_M_default_append(size_type __n)
# 165 "/usr/include/c++/5/bits/list.tcc" 3
{
# 166 "/usr/include/c++/5/bits/list.tcc" 3
size_type __i = (0);
# 167 "/usr/include/c++/5/bits/list.tcc" 3
try
# 168 "/usr/include/c++/5/bits/list.tcc" 3
{
# 169 "/usr/include/c++/5/bits/list.tcc" 3
for (; __i < __n; ++__i) {
# 170 "/usr/include/c++/5/bits/list.tcc" 3
emplace_back(); }
# 171 "/usr/include/c++/5/bits/list.tcc" 3
}
# 172 "/usr/include/c++/5/bits/list.tcc" 3
catch (...)
# 173 "/usr/include/c++/5/bits/list.tcc" 3
{
# 174 "/usr/include/c++/5/bits/list.tcc" 3
for (; __i; --__i) {
# 175 "/usr/include/c++/5/bits/list.tcc" 3
pop_back(); }
# 176 "/usr/include/c++/5/bits/list.tcc" 3
throw;
# 177 "/usr/include/c++/5/bits/list.tcc" 3
}
# 178 "/usr/include/c++/5/bits/list.tcc" 3
}
# 180 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 183 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::resize(size_type __new_size)
# 184 "/usr/include/c++/5/bits/list.tcc" 3
{
# 185 "/usr/include/c++/5/bits/list.tcc" 3
iterator __i = this->begin();
# 186 "/usr/include/c++/5/bits/list.tcc" 3
size_type __len = (0);
# 187 "/usr/include/c++/5/bits/list.tcc" 3
for (; (__i != this->end()) && (__len < __new_size); (++__i), (++__len)) {
# 188 "/usr/include/c++/5/bits/list.tcc" 3
; }
# 189 "/usr/include/c++/5/bits/list.tcc" 3
if (__len == __new_size) {
# 190 "/usr/include/c++/5/bits/list.tcc" 3
erase(__i, this->end()); } else {
# 192 "/usr/include/c++/5/bits/list.tcc" 3
_M_default_append(__new_size - __len); }
# 193 "/usr/include/c++/5/bits/list.tcc" 3
}
# 195 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 198 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::resize(size_type __new_size, const value_type &__x)
# 199 "/usr/include/c++/5/bits/list.tcc" 3
{
# 200 "/usr/include/c++/5/bits/list.tcc" 3
iterator __i = this->begin();
# 201 "/usr/include/c++/5/bits/list.tcc" 3
size_type __len = (0);
# 202 "/usr/include/c++/5/bits/list.tcc" 3
for (; (__i != this->end()) && (__len < __new_size); (++__i), (++__len)) {
# 203 "/usr/include/c++/5/bits/list.tcc" 3
; }
# 204 "/usr/include/c++/5/bits/list.tcc" 3
if (__len == __new_size) {
# 205 "/usr/include/c++/5/bits/list.tcc" 3
erase(__i, this->end()); } else {
# 207 "/usr/include/c++/5/bits/list.tcc" 3
insert(this->end(), __new_size - __len, __x); }
# 208 "/usr/include/c++/5/bits/list.tcc" 3
}
# 226 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> __cxx11::list< _Tp, _Alloc> &
# 229 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::operator=(const list &__x)
# 230 "/usr/include/c++/5/bits/list.tcc" 3
{
# 231 "/usr/include/c++/5/bits/list.tcc" 3
if (this != (&__x))
# 232 "/usr/include/c++/5/bits/list.tcc" 3
{
# 233 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first1 = this->begin();
# 234 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last1 = this->end();
# 235 "/usr/include/c++/5/bits/list.tcc" 3
const_iterator __first2 = __x.begin();
# 236 "/usr/include/c++/5/bits/list.tcc" 3
const_iterator __last2 = __x.end();
# 237 "/usr/include/c++/5/bits/list.tcc" 3
for (; (__first1 != __last1) && (__first2 != __last2); (++__first1), (++__first2)) {
# 239 "/usr/include/c++/5/bits/list.tcc" 3
(*__first1) = (*__first2); }
# 240 "/usr/include/c++/5/bits/list.tcc" 3
if (__first2 == __last2) {
# 241 "/usr/include/c++/5/bits/list.tcc" 3
erase(__first1, __last1); } else {
# 243 "/usr/include/c++/5/bits/list.tcc" 3
insert(__last1, __first2, __last2); }
# 244 "/usr/include/c++/5/bits/list.tcc" 3
}
# 245 "/usr/include/c++/5/bits/list.tcc" 3
return *this;
# 246 "/usr/include/c++/5/bits/list.tcc" 3
}
# 248 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 251 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::_M_fill_assign(size_type __n, const value_type &__val)
# 252 "/usr/include/c++/5/bits/list.tcc" 3
{
# 253 "/usr/include/c++/5/bits/list.tcc" 3
iterator __i = this->begin();
# 254 "/usr/include/c++/5/bits/list.tcc" 3
for (; (__i != this->end()) && (__n > (0)); (++__i), (--__n)) {
# 255 "/usr/include/c++/5/bits/list.tcc" 3
(*__i) = __val; }
# 256 "/usr/include/c++/5/bits/list.tcc" 3
if (__n > (0)) {
# 257 "/usr/include/c++/5/bits/list.tcc" 3
insert(this->end(), __n, __val); } else {
# 259 "/usr/include/c++/5/bits/list.tcc" 3
erase(__i, this->end()); }
# 260 "/usr/include/c++/5/bits/list.tcc" 3
}
# 262 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 263 "/usr/include/c++/5/bits/list.tcc" 3
template< class _InputIterator> void
# 266 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::_M_assign_dispatch(_InputIterator __first2, _InputIterator __last2, ::std::__false_type)
# 268 "/usr/include/c++/5/bits/list.tcc" 3
{
# 269 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first1 = this->begin();
# 270 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last1 = this->end();
# 271 "/usr/include/c++/5/bits/list.tcc" 3
for (; (__first1 != __last1) && (__first2 != __last2); (++__first1), (++__first2)) {
# 273 "/usr/include/c++/5/bits/list.tcc" 3
(*__first1) = (*__first2); }
# 274 "/usr/include/c++/5/bits/list.tcc" 3
if (__first2 == __last2) {
# 275 "/usr/include/c++/5/bits/list.tcc" 3
erase(__first1, __last1); } else {
# 277 "/usr/include/c++/5/bits/list.tcc" 3
insert(__last1, __first2, __last2); }
# 278 "/usr/include/c++/5/bits/list.tcc" 3
}
# 280 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 283 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::remove(const value_type &__value)
# 284 "/usr/include/c++/5/bits/list.tcc" 3
{
# 285 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first = this->begin();
# 286 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last = this->end();
# 287 "/usr/include/c++/5/bits/list.tcc" 3
iterator __extra = __last;
# 288 "/usr/include/c++/5/bits/list.tcc" 3
while (__first != __last)
# 289 "/usr/include/c++/5/bits/list.tcc" 3
{
# 290 "/usr/include/c++/5/bits/list.tcc" 3
iterator __next = __first;
# 291 "/usr/include/c++/5/bits/list.tcc" 3
++__next;
# 292 "/usr/include/c++/5/bits/list.tcc" 3
if ((*__first) == __value)
# 293 "/usr/include/c++/5/bits/list.tcc" 3
{
# 297 "/usr/include/c++/5/bits/list.tcc" 3
if (::std::__addressof(*__first) != ::std::__addressof(__value)) {
# 298 "/usr/include/c++/5/bits/list.tcc" 3
_M_erase(__first); } else {
# 300 "/usr/include/c++/5/bits/list.tcc" 3
__extra = __first; }
# 301 "/usr/include/c++/5/bits/list.tcc" 3
}
# 302 "/usr/include/c++/5/bits/list.tcc" 3
__first = __next;
# 303 "/usr/include/c++/5/bits/list.tcc" 3
}
# 304 "/usr/include/c++/5/bits/list.tcc" 3
if (__extra != __last) {
# 305 "/usr/include/c++/5/bits/list.tcc" 3
_M_erase(__extra); }
# 306 "/usr/include/c++/5/bits/list.tcc" 3
}
# 308 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 311 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::unique()
# 312 "/usr/include/c++/5/bits/list.tcc" 3
{
# 313 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first = this->begin();
# 314 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last = this->end();
# 315 "/usr/include/c++/5/bits/list.tcc" 3
if (__first == __last) {
# 316 "/usr/include/c++/5/bits/list.tcc" 3
return; }
# 317 "/usr/include/c++/5/bits/list.tcc" 3
iterator __next = __first;
# 318 "/usr/include/c++/5/bits/list.tcc" 3
while ((++__next) != __last)
# 319 "/usr/include/c++/5/bits/list.tcc" 3
{
# 320 "/usr/include/c++/5/bits/list.tcc" 3
if ((*__first) == (*__next)) {
# 321 "/usr/include/c++/5/bits/list.tcc" 3
_M_erase(__next); } else {
# 323 "/usr/include/c++/5/bits/list.tcc" 3
__first = __next; }
# 324 "/usr/include/c++/5/bits/list.tcc" 3
__next = __first;
# 325 "/usr/include/c++/5/bits/list.tcc" 3
}
# 326 "/usr/include/c++/5/bits/list.tcc" 3
}
# 328 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 332 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::merge(list &&__x)
# 336 "/usr/include/c++/5/bits/list.tcc" 3
{
# 339 "/usr/include/c++/5/bits/list.tcc" 3
if (this != (&__x))
# 340 "/usr/include/c++/5/bits/list.tcc" 3
{
# 341 "/usr/include/c++/5/bits/list.tcc" 3
_M_check_equal_allocators(__x);
# 343 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first1 = this->begin();
# 344 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last1 = this->end();
# 345 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first2 = __x.begin();
# 346 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last2 = __x.end();
# 347 "/usr/include/c++/5/bits/list.tcc" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 348 "/usr/include/c++/5/bits/list.tcc" 3
if ((*__first2) < (*__first1))
# 349 "/usr/include/c++/5/bits/list.tcc" 3
{
# 350 "/usr/include/c++/5/bits/list.tcc" 3
iterator __next = __first2;
# 351 "/usr/include/c++/5/bits/list.tcc" 3
_M_transfer(__first1, __first2, ++__next);
# 352 "/usr/include/c++/5/bits/list.tcc" 3
__first2 = __next;
# 353 "/usr/include/c++/5/bits/list.tcc" 3
} else {
# 355 "/usr/include/c++/5/bits/list.tcc" 3
++__first1; } }
# 356 "/usr/include/c++/5/bits/list.tcc" 3
if (__first2 != __last2) {
# 357 "/usr/include/c++/5/bits/list.tcc" 3
_M_transfer(__last1, __first2, __last2); }
# 359 "/usr/include/c++/5/bits/list.tcc" 3
(this->_M_inc_size((__x._M_get_size())));
# 360 "/usr/include/c++/5/bits/list.tcc" 3
(__x._M_set_size(0));
# 361 "/usr/include/c++/5/bits/list.tcc" 3
}
# 362 "/usr/include/c++/5/bits/list.tcc" 3
}
# 364 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 365 "/usr/include/c++/5/bits/list.tcc" 3
template< class _StrictWeakOrdering> void
# 369 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::merge(list &&__x, _StrictWeakOrdering __comp)
# 373 "/usr/include/c++/5/bits/list.tcc" 3
{
# 376 "/usr/include/c++/5/bits/list.tcc" 3
if (this != (&__x))
# 377 "/usr/include/c++/5/bits/list.tcc" 3
{
# 378 "/usr/include/c++/5/bits/list.tcc" 3
_M_check_equal_allocators(__x);
# 380 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first1 = this->begin();
# 381 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last1 = this->end();
# 382 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first2 = __x.begin();
# 383 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last2 = __x.end();
# 384 "/usr/include/c++/5/bits/list.tcc" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 385 "/usr/include/c++/5/bits/list.tcc" 3
if (__comp(*__first2, *__first1))
# 386 "/usr/include/c++/5/bits/list.tcc" 3
{
# 387 "/usr/include/c++/5/bits/list.tcc" 3
iterator __next = __first2;
# 388 "/usr/include/c++/5/bits/list.tcc" 3
_M_transfer(__first1, __first2, ++__next);
# 389 "/usr/include/c++/5/bits/list.tcc" 3
__first2 = __next;
# 390 "/usr/include/c++/5/bits/list.tcc" 3
} else {
# 392 "/usr/include/c++/5/bits/list.tcc" 3
++__first1; } }
# 393 "/usr/include/c++/5/bits/list.tcc" 3
if (__first2 != __last2) {
# 394 "/usr/include/c++/5/bits/list.tcc" 3
_M_transfer(__last1, __first2, __last2); }
# 396 "/usr/include/c++/5/bits/list.tcc" 3
(this->_M_inc_size((__x._M_get_size())));
# 397 "/usr/include/c++/5/bits/list.tcc" 3
(__x._M_set_size(0));
# 398 "/usr/include/c++/5/bits/list.tcc" 3
}
# 399 "/usr/include/c++/5/bits/list.tcc" 3
}
# 401 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc> void
# 404 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::sort()
# 405 "/usr/include/c++/5/bits/list.tcc" 3
{
# 407 "/usr/include/c++/5/bits/list.tcc" 3
if (((((this->_M_impl)._M_node)._M_next) != (&((this->_M_impl)._M_node))) && (((((this->_M_impl)._M_node)._M_next)->_M_next) != (&((this->_M_impl)._M_node))))
# 409 "/usr/include/c++/5/bits/list.tcc" 3
{
# 410 "/usr/include/c++/5/bits/list.tcc" 3
list __carry;
# 411 "/usr/include/c++/5/bits/list.tcc" 3
list __tmp[64];
# 412 "/usr/include/c++/5/bits/list.tcc" 3
list *__fill = (&((__tmp)[0]));
# 413 "/usr/include/c++/5/bits/list.tcc" 3
list *__counter;
# 415 "/usr/include/c++/5/bits/list.tcc" 3
do
# 416 "/usr/include/c++/5/bits/list.tcc" 3
{
# 417 "/usr/include/c++/5/bits/list.tcc" 3
(__carry.splice(__carry.begin(), *this, this->begin()));
# 419 "/usr/include/c++/5/bits/list.tcc" 3
for (__counter = (&((__tmp)[0])); (__counter != __fill) && (!__counter->empty()); ++__counter)
# 422 "/usr/include/c++/5/bits/list.tcc" 3
{
# 423 "/usr/include/c++/5/bits/list.tcc" 3
(__counter->merge(__carry));
# 424 "/usr/include/c++/5/bits/list.tcc" 3
__carry.swap(*__counter);
# 425 "/usr/include/c++/5/bits/list.tcc" 3
}
# 426 "/usr/include/c++/5/bits/list.tcc" 3
__carry.swap(*__counter);
# 427 "/usr/include/c++/5/bits/list.tcc" 3
if (__counter == __fill) {
# 428 "/usr/include/c++/5/bits/list.tcc" 3
++__fill; }
# 429 "/usr/include/c++/5/bits/list.tcc" 3
}
# 430 "/usr/include/c++/5/bits/list.tcc" 3
while (!empty());
# 432 "/usr/include/c++/5/bits/list.tcc" 3
for (__counter = (&((__tmp)[1])); __counter != __fill; ++__counter) {
# 433 "/usr/include/c++/5/bits/list.tcc" 3
(__counter->merge(*(__counter - 1))); }
# 434 "/usr/include/c++/5/bits/list.tcc" 3
swap(*(__fill - 1));
# 435 "/usr/include/c++/5/bits/list.tcc" 3
}
# 436 "/usr/include/c++/5/bits/list.tcc" 3
}
# 438 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 439 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Predicate> void
# 442 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::remove_if(_Predicate __pred)
# 443 "/usr/include/c++/5/bits/list.tcc" 3
{
# 444 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first = this->begin();
# 445 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last = this->end();
# 446 "/usr/include/c++/5/bits/list.tcc" 3
while (__first != __last)
# 447 "/usr/include/c++/5/bits/list.tcc" 3
{
# 448 "/usr/include/c++/5/bits/list.tcc" 3
iterator __next = __first;
# 449 "/usr/include/c++/5/bits/list.tcc" 3
++__next;
# 450 "/usr/include/c++/5/bits/list.tcc" 3
if (__pred(*__first)) {
# 451 "/usr/include/c++/5/bits/list.tcc" 3
_M_erase(__first); }
# 452 "/usr/include/c++/5/bits/list.tcc" 3
__first = __next;
# 453 "/usr/include/c++/5/bits/list.tcc" 3
}
# 454 "/usr/include/c++/5/bits/list.tcc" 3
}
# 456 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 457 "/usr/include/c++/5/bits/list.tcc" 3
template< class _BinaryPredicate> void
# 460 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::unique(_BinaryPredicate __binary_pred)
# 461 "/usr/include/c++/5/bits/list.tcc" 3
{
# 462 "/usr/include/c++/5/bits/list.tcc" 3
iterator __first = this->begin();
# 463 "/usr/include/c++/5/bits/list.tcc" 3
iterator __last = this->end();
# 464 "/usr/include/c++/5/bits/list.tcc" 3
if (__first == __last) {
# 465 "/usr/include/c++/5/bits/list.tcc" 3
return; }
# 466 "/usr/include/c++/5/bits/list.tcc" 3
iterator __next = __first;
# 467 "/usr/include/c++/5/bits/list.tcc" 3
while ((++__next) != __last)
# 468 "/usr/include/c++/5/bits/list.tcc" 3
{
# 469 "/usr/include/c++/5/bits/list.tcc" 3
if (__binary_pred(*__first, *__next)) {
# 470 "/usr/include/c++/5/bits/list.tcc" 3
_M_erase(__next); } else {
# 472 "/usr/include/c++/5/bits/list.tcc" 3
__first = __next; }
# 473 "/usr/include/c++/5/bits/list.tcc" 3
__next = __first;
# 474 "/usr/include/c++/5/bits/list.tcc" 3
}
# 475 "/usr/include/c++/5/bits/list.tcc" 3
}
# 477 "/usr/include/c++/5/bits/list.tcc" 3
template< class _Tp, class _Alloc>
# 478 "/usr/include/c++/5/bits/list.tcc" 3
template< class _StrictWeakOrdering> void
# 481 "/usr/include/c++/5/bits/list.tcc" 3
__cxx11::list< _Tp, _Alloc> ::sort(_StrictWeakOrdering __comp)
# 482 "/usr/include/c++/5/bits/list.tcc" 3
{
# 484 "/usr/include/c++/5/bits/list.tcc" 3
if (((((this->_M_impl)._M_node)._M_next) != (&((this->_M_impl)._M_node))) && (((((this->_M_impl)._M_node)._M_next)->_M_next) != (&((this->_M_impl)._M_node))))
# 486 "/usr/include/c++/5/bits/list.tcc" 3
{
# 487 "/usr/include/c++/5/bits/list.tcc" 3
list __carry;
# 488 "/usr/include/c++/5/bits/list.tcc" 3
list __tmp[64];
# 489 "/usr/include/c++/5/bits/list.tcc" 3
list *__fill = (&((__tmp)[0]));
# 490 "/usr/include/c++/5/bits/list.tcc" 3
list *__counter;
# 492 "/usr/include/c++/5/bits/list.tcc" 3
do
# 493 "/usr/include/c++/5/bits/list.tcc" 3
{
# 494 "/usr/include/c++/5/bits/list.tcc" 3
(__carry.splice(__carry.begin(), *this, this->begin()));
# 496 "/usr/include/c++/5/bits/list.tcc" 3
for (__counter = (&((__tmp)[0])); (__counter != __fill) && (!__counter->empty()); ++__counter)
# 499 "/usr/include/c++/5/bits/list.tcc" 3
{
# 500 "/usr/include/c++/5/bits/list.tcc" 3
(__counter->merge(__carry, __comp));
# 501 "/usr/include/c++/5/bits/list.tcc" 3
__carry.swap(*__counter);
# 502 "/usr/include/c++/5/bits/list.tcc" 3
}
# 503 "/usr/include/c++/5/bits/list.tcc" 3
__carry.swap(*__counter);
# 504 "/usr/include/c++/5/bits/list.tcc" 3
if (__counter == __fill) {
# 505 "/usr/include/c++/5/bits/list.tcc" 3
++__fill; }
# 506 "/usr/include/c++/5/bits/list.tcc" 3
}
# 507 "/usr/include/c++/5/bits/list.tcc" 3
while (!empty());
# 509 "/usr/include/c++/5/bits/list.tcc" 3
for (__counter = (&((__tmp)[1])); __counter != __fill; ++__counter) {
# 510 "/usr/include/c++/5/bits/list.tcc" 3
(__counter->merge(*(__counter - 1), __comp)); }
# 511 "/usr/include/c++/5/bits/list.tcc" 3
swap(*(__fill - 1));
# 512 "/usr/include/c++/5/bits/list.tcc" 3
}
# 513 "/usr/include/c++/5/bits/list.tcc" 3
}
# 516 "/usr/include/c++/5/bits/list.tcc" 3
}
# 63 "/usr/include/c++/5/bits/stl_construct.h" 3
namespace std __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _T1, class ..._Args> inline void
# 74 "/usr/include/c++/5/bits/stl_construct.h" 3
_Construct(_T1 *__p, _Args &&...__args)
# 75 "/usr/include/c++/5/bits/stl_construct.h" 3
{ ::new (static_cast< void *>(__p)) (_T1)(std::forward< _Args> (__args)...); }
# 90 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _Tp> inline void
# 92 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_Tp *__pointer)
# 93 "/usr/include/c++/5/bits/stl_construct.h" 3
{ (__pointer->~_Tp()); }
# 95 "/usr/include/c++/5/bits/stl_construct.h" 3
template< bool >
# 96 "/usr/include/c++/5/bits/stl_construct.h" 3
struct _Destroy_aux {
# 98 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 100 "/usr/include/c++/5/bits/stl_construct.h" 3
__destroy(_ForwardIterator __first, _ForwardIterator __last)
# 101 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 102 "/usr/include/c++/5/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 103 "/usr/include/c++/5/bits/stl_construct.h" 3
std::_Destroy(std::__addressof(*__first)); }
# 104 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 105 "/usr/include/c++/5/bits/stl_construct.h" 3
};
# 108 "/usr/include/c++/5/bits/stl_construct.h" 3
template<> struct _Destroy_aux< true> {
# 110 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 112 "/usr/include/c++/5/bits/stl_construct.h" 3
__destroy(_ForwardIterator, _ForwardIterator) { }
# 113 "/usr/include/c++/5/bits/stl_construct.h" 3
};
# 120 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> inline void
# 122 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last)
# 123 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 125 "/usr/include/c++/5/bits/stl_construct.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _Value_type;
# 126 "/usr/include/c++/5/bits/stl_construct.h" 3
std::_Destroy_aux< __has_trivial_destructor(typename iterator_traits< _ForwardIterator> ::value_type)> ::__destroy(__first, __last);
# 128 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 136 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Allocator> void
# 138 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &
# 139 "/usr/include/c++/5/bits/stl_construct.h" 3
__alloc)
# 140 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 141 "/usr/include/c++/5/bits/stl_construct.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 142 "/usr/include/c++/5/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 143 "/usr/include/c++/5/bits/stl_construct.h" 3
__traits::destroy(__alloc, std::__addressof(*__first)); }
# 144 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 146 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 148 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator< _Tp> &)
# 150 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 151 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(__first, __last);
# 152 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 155 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 59 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueTypes>
# 64 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_copy {
# 66 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 68 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 69 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 70 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 71 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 72 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 73 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 74 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 75 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), *__first); }
# 76 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 77 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 78 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 79 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 80 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur);
# 81 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 82 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 83 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 84 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 87 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_copy< true> {
# 89 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 91 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 92 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 93 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::copy(__first, __last, __result); }
# 94 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 105 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> inline _ForwardIterator
# 107 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 108 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 109 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 111 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _InputIterator> ::value_type _ValueType1;
# 113 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType2;
# 118 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _InputIterator> ::reference _RefType1;
# 119 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::reference _RefType2;
# 120 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_assignable< typename iterator_traits< _ForwardIterator> ::reference, typename iterator_traits< _InputIterator> ::reference> ::value);
# 123 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy< __is_trivial(typename iterator_traits< _InputIterator> ::value_type) && __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_copy(__first, __last, __result);
# 127 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 130 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 131 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill {
# 133 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 135 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 136 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 137 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 138 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 139 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 140 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 141 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 142 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 143 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 144 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 145 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 146 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 147 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 148 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 149 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 150 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 153 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill< true> {
# 155 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 157 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 158 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 159 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::fill(__first, __last, __x); }
# 160 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 171 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 173 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 174 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 175 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 177 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 182 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 185 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_fill(__first, __last, __x);
# 187 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 190 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 191 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill_n {
# 193 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static _ForwardIterator
# 195 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 196 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 197 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 198 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 199 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 200 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 201 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 202 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 203 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 204 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 205 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 206 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 207 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 208 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 209 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 210 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 211 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 214 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill_n< true> {
# 216 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static _ForwardIterator
# 218 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 219 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 220 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::fill_n(__first, __n, __x); }
# 221 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 234 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> inline _ForwardIterator
# 236 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x)
# 237 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 239 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 244 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 246 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __uninitialized_fill_n< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_fill_n(__first, __n, __x);
# 248 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 256 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 257 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 259 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 260 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 261 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 262 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 263 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 264 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 265 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 266 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 267 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), *__first); }
# 268 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 269 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 270 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 271 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 272 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur, __alloc);
# 273 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 274 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 275 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 277 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp> inline _ForwardIterator
# 279 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 280 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, allocator< _Tp> &)
# 281 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_copy(__first, __last, __result); }
# 283 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 284 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 286 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 287 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 288 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 289 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(std::make_move_iterator(__first), std::make_move_iterator(__last), __result, __alloc);
# 292 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 294 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 295 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 297 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_if_noexcept_a(_InputIterator __first, _InputIterator
# 298 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _ForwardIterator
# 299 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 300 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 301 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 302 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(std::__make_move_if_noexcept_iterator(__first), std::__make_move_if_noexcept_iterator(__last), __result, __alloc);
# 305 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 307 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Allocator> void
# 309 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 310 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 311 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 312 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 313 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 314 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 315 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 316 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 317 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 318 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 319 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 320 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 321 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 322 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 323 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 324 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 326 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Tp2> inline void
# 328 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 329 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 330 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::uninitialized_fill(__first, __last, __x); }
# 332 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 333 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 335 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 336 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 337 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 338 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 339 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 340 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 341 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 342 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 343 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 344 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 345 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 347 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 348 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 349 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 350 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 351 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 353 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 354 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Tp2> inline _ForwardIterator
# 356 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 357 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 358 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_fill_n(__first, __n, __x); }
# 370 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 371 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 373 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1
# 374 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 375 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 376 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 377 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 378 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 379 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 380 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1, __result, __alloc);
# 383 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 384 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 385 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
# 386 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 387 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 388 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 389 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 390 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 391 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 392 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 398 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 399 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 401 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1
# 402 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 403 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 404 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 405 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 406 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 407 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 408 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1, __result, __alloc);
# 411 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 412 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 413 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
# 414 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 415 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 416 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 417 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 418 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 419 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 420 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 425 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _InputIterator, class
# 426 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 428 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &
# 429 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _InputIterator __first, _InputIterator
# 430 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _Allocator &__alloc)
# 431 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 432 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
# 433 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 434 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 435 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
# 436 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 437 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 438 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 439 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 440 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 441 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 442 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 447 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp, class
# 448 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline void
# 450 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator
# 451 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _ForwardIterator
# 452 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, const _Tp &__x, _Allocator &
# 453 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 454 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 455 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1, __first2, __alloc);
# 458 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 459 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 460 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
# 461 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 462 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 463 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 464 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first2, __mid2, __alloc);
# 465 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 466 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 467 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 473 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 474 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_default_1 {
# 476 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator> static void
# 478 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default(_ForwardIterator __first, _ForwardIterator __last)
# 479 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 480 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 481 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 482 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 483 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 484 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur)); }
# 485 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 486 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 487 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 488 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 489 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 490 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 491 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 492 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 495 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_default_1< true> {
# 497 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator> static void
# 499 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default(_ForwardIterator __first, _ForwardIterator __last)
# 500 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 502 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 504 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::fill(__first, __last, _ValueType());
# 505 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 506 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 508 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 509 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_default_n_1 {
# 511 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size> static _ForwardIterator
# 513 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default_n(_ForwardIterator __first, _Size __n)
# 514 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 515 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 516 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 517 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 518 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 519 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur)); }
# 520 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 521 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 522 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 523 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 524 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 525 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 526 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 527 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 528 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 531 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_default_n_1< true> {
# 533 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size> static _ForwardIterator
# 535 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default_n(_ForwardIterator __first, _Size __n)
# 536 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 538 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 540 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::fill_n(__first, __n, _ValueType());
# 541 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 542 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 547 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator> inline void
# 549 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default(_ForwardIterator __first, _ForwardIterator
# 550 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last)
# 551 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 553 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 555 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 557 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_default_1< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_default(__first, __last);
# 560 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 564 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size> inline _ForwardIterator
# 566 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_n(_ForwardIterator __first, _Size __n)
# 567 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 569 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 571 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 573 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __uninitialized_default_n_1< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_default_n(__first, __n);
# 576 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 582 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Allocator> void
# 584 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_a(_ForwardIterator __first, _ForwardIterator
# 585 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _Allocator &
# 586 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 587 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 588 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 589 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 590 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 591 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 592 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 593 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur)); }
# 594 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 595 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 596 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 597 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 598 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 599 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 600 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 602 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 604 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_a(_ForwardIterator __first, _ForwardIterator
# 605 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, allocator< _Tp> &)
# 607 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::__uninitialized_default(__first, __last); }
# 613 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Allocator> _ForwardIterator
# 615 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_n_a(_ForwardIterator __first, _Size __n, _Allocator &
# 616 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 617 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 618 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 619 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 620 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 621 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 622 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 623 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur)); }
# 624 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 625 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 626 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 627 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 628 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 629 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 630 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 631 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 633 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> inline _ForwardIterator
# 635 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_n_a(_ForwardIterator __first, _Size __n, allocator< _Tp> &)
# 637 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::__uninitialized_default_n(__first, __n); }
# 640 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _Size, class
# 641 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator> _ForwardIterator
# 643 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_n(_InputIterator __first, _Size __n, _ForwardIterator
# 644 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, input_iterator_tag)
# 645 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 647 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 648 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 649 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; ((--__n), (++__first)), (++__cur)) {
# 650 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), *__first); }
# 651 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 652 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 653 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 654 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 655 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur);
# 656 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 657 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 658 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 660 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _RandomAccessIterator, class _Size, class
# 661 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator> inline _ForwardIterator
# 663 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_n(_RandomAccessIterator __first, _Size __n, _ForwardIterator
# 664 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, random_access_iterator_tag)
# 666 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_copy(__first, __first + __n, __result); }
# 677 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _Size, class _ForwardIterator> inline _ForwardIterator
# 679 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_copy_n(_InputIterator __first, _Size __n, _ForwardIterator
# 680 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 681 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::__uninitialized_copy_n(__first, __n, __result, std::__iterator_category(__first));
# 682 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 686 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 66 "/usr/include/c++/5/bits/stl_vector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc>
# 72 "/usr/include/c++/5/bits/stl_vector.h" 3
struct _Vector_base {
# 75 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other _Tp_alloc_type;
# 77 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> ::pointer pointer;
# 79 "/usr/include/c++/5/bits/stl_vector.h" 3
struct _Vector_impl : public _Tp_alloc_type {
# 82 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_start;
# 83 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_finish;
# 84 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_end_of_storage;
# 86 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl() : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
# 88 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 90 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl(const typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type &__a) noexcept : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
# 92 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 95 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl(typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type &&__a) noexcept : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(::std::move(__a)), _M_start(), _M_finish(), _M_end_of_storage()
# 98 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 101 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_swap_data(_Vector_impl &__x) noexcept
# 102 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 103 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_start, __x._M_start);
# 104 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_finish, __x._M_finish);
# 105 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_end_of_storage, __x._M_end_of_storage);
# 106 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 107 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 110 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 113 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tp_alloc_type &_M_get_Tp_allocator() noexcept
# 114 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(static_cast< _Tp_alloc_type *>(&(this->_M_impl))); }
# 117 "/usr/include/c++/5/bits/stl_vector.h" 3
const _Tp_alloc_type &_M_get_Tp_allocator() const noexcept
# 118 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(static_cast< const _Tp_alloc_type *>(&(this->_M_impl))); }
# 121 "/usr/include/c++/5/bits/stl_vector.h" 3
allocator_type get_allocator() const noexcept
# 122 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (allocator_type)this->_M_get_Tp_allocator(); }
# 124 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base() : _M_impl()
# 125 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 127 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(const allocator_type &__a) noexcept : _M_impl(__a)
# 128 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 130 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(size_t __n) : _M_impl()
# 132 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 134 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(size_t __n, const allocator_type &__a) : _M_impl(__a)
# 136 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 139 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(_Tp_alloc_type &&__a) noexcept : _M_impl(std::move(__a))
# 140 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 142 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(_Vector_base &&__x) noexcept : _M_impl(std::move(__x._M_get_Tp_allocator()))
# 144 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_swap_data(__x._M_impl)); }
# 146 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(_Vector_base &&__x, const allocator_type &__a) : _M_impl(__a)
# 148 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 149 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__x.get_allocator() == __a) {
# 150 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data(__x._M_impl)); } else
# 152 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 153 "/usr/include/c++/5/bits/stl_vector.h" 3
size_t __n = ((__x._M_impl)._M_finish) - ((__x._M_impl)._M_start);
# 154 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_create_storage(__n);
# 155 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 156 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 159 "/usr/include/c++/5/bits/stl_vector.h" 3
~_Vector_base() noexcept
# 160 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 161 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl _M_impl;
# 167 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer _M_allocate(size_t __n)
# 168 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 169 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> _Tr;
# 170 "/usr/include/c++/5/bits/stl_vector.h" 3
return (__n != (0)) ? _Tr::allocate(_M_impl, __n) : (pointer());
# 171 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 174 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_deallocate(pointer __p, size_t __n)
# 175 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 176 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> _Tr;
# 177 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__p) {
# 178 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tr::deallocate(_M_impl, __p, __n); }
# 179 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 183 "/usr/include/c++/5/bits/stl_vector.h" 3
private: void _M_create_storage(size_t __n)
# 184 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 185 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = this->_M_allocate(__n);
# 186 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ((this->_M_impl)._M_start);
# 187 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 188 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 189 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 213 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc = allocator< _Tp> >
# 214 "/usr/include/c++/5/bits/stl_vector.h" 3
class vector : protected _Vector_base< _Tp, _Alloc> {
# 217 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename _Alloc::value_type _Alloc_value_type;
# 221 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::_Vector_base< _Tp, _Alloc> _Base;
# 222 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type _Tp_alloc_type;
# 223 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> _Alloc_traits;
# 226 "/usr/include/c++/5/bits/stl_vector.h" 3
public: typedef _Tp value_type;
# 227 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::std::_Vector_base< _Tp, _Alloc> ::pointer pointer;
# 228 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer const_pointer;
# 229 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::reference reference;
# 230 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_reference const_reference;
# 231 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__normal_iterator< typename ::std::_Vector_base< _Tp, _Alloc> ::pointer, vector> iterator;
# 233 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__normal_iterator< typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> const_iterator;
# 234 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> > const_reverse_iterator;
# 235 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< typename ::std::_Vector_base< _Tp, _Alloc> ::pointer, vector> > reverse_iterator;
# 236 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::size_t size_type;
# 237 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::ptrdiff_t difference_type;
# 238 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 241 "/usr/include/c++/5/bits/stl_vector.h" 3
protected: using ::std::_Vector_base< _Tp, _Alloc> ::_M_allocate;
# 242 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_deallocate;
# 243 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_impl;
# 244 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_get_Tp_allocator;
# 253 "/usr/include/c++/5/bits/stl_vector.h" 3
public: vector() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _Base()
# 257 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 264 "/usr/include/c++/5/bits/stl_vector.h" 3
explicit vector(const allocator_type &__a) noexcept : _Base(__a)
# 265 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 277 "/usr/include/c++/5/bits/stl_vector.h" 3
explicit vector(size_type __n, const allocator_type &__a = allocator_type()) : _Base(__n, __a)
# 279 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_default_initialize(__n); }
# 289 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(size_type __n, const value_type &__value, const allocator_type &
# 290 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__n, __a)
# 292 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_initialize(__n, __value); }
# 318 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(const vector &__x) : _Base(__x.size(), _Alloc_traits::_S_select_on_copy((__x._M_get_Tp_allocator())))
# 321 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__x.begin(), __x.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 325 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 335 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(vector &&__x) noexcept : _Base(::std::move(__x))
# 336 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 339 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(const vector &__x, const allocator_type &__a) : _Base(__x.size(), __a)
# 341 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__x.begin(), __x.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 345 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 348 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(vector &&__rv, const allocator_type &__m) noexcept(_Alloc_traits::_S_always_equal()) : _Base(::std::move(__rv), __m)
# 351 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 352 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((__rv.get_allocator()) != __m)
# 353 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 354 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_move_a(__rv.begin(), __rv.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 358 "/usr/include/c++/5/bits/stl_vector.h" 3
__rv.clear();
# 359 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 360 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 373 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(initializer_list< _Tp> __l, const allocator_type &
# 374 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__a)
# 376 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 377 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize((__l.begin()), (__l.end()), ::std::random_access_iterator_tag());
# 379 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 399 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator, class
# 400 "/usr/include/c++/5/bits/stl_vector.h" 3
 = ::std::_RequireInputIter< _InputIterator> >
# 401 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 402 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__a)
# 404 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_initialize_dispatch(__first, __last, ::std::__false_type()); }
# 423 "/usr/include/c++/5/bits/stl_vector.h" 3
~vector() noexcept
# 424 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 425 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 436 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(const vector & __x);
# 448 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(vector &&__x) noexcept(_Alloc_traits::_S_nothrow_move())
# 449 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 450 "/usr/include/c++/5/bits/stl_vector.h" 3
constexpr bool __move_storage = (_Alloc_traits::_S_propagate_on_move_assign() || _Alloc_traits::_S_always_equal());
# 453 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_move_assign(::std::move(__x), integral_constant< bool, __move_storage> ());
# 455 "/usr/include/c++/5/bits/stl_vector.h" 3
return *this;
# 456 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 470 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(initializer_list< _Tp> __l)
# 471 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 472 "/usr/include/c++/5/bits/stl_vector.h" 3
(this->assign((__l.begin()), (__l.end())));
# 473 "/usr/include/c++/5/bits/stl_vector.h" 3
return *this;
# 474 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 488 "/usr/include/c++/5/bits/stl_vector.h" 3
void assign(size_type __n, const value_type &__val)
# 489 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 504 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator, class
# 505 "/usr/include/c++/5/bits/stl_vector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > void
# 507 "/usr/include/c++/5/bits/stl_vector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 508 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_assign_dispatch(__first, __last, ::std::__false_type()); }
# 533 "/usr/include/c++/5/bits/stl_vector.h" 3
void assign(initializer_list< _Tp> __l)
# 534 "/usr/include/c++/5/bits/stl_vector.h" 3
{ (this->assign((__l.begin()), (__l.end()))); }
# 538 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::get_allocator;
# 547 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator begin() noexcept
# 548 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((iterator)(((this->_M_impl)._M_start))); }
# 556 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator begin() const noexcept
# 557 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_start))); }
# 565 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator end() noexcept
# 566 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((iterator)(((this->_M_impl)._M_finish))); }
# 574 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator end() const noexcept
# 575 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_finish))); }
# 583 "/usr/include/c++/5/bits/stl_vector.h" 3
reverse_iterator rbegin() noexcept
# 584 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((reverse_iterator)(this->end())); }
# 592 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator rbegin() const noexcept
# 593 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 601 "/usr/include/c++/5/bits/stl_vector.h" 3
reverse_iterator rend() noexcept
# 602 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 610 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator rend() const noexcept
# 611 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 620 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator cbegin() const noexcept
# 621 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_start))); }
# 629 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator cend() const noexcept
# 630 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_finish))); }
# 638 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator crbegin() const noexcept
# 639 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 647 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator crend() const noexcept
# 648 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 654 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type size() const noexcept
# 655 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_finish) - ((this->_M_impl)._M_start)); }
# 659 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type max_size() const noexcept
# 660 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
# 673 "/usr/include/c++/5/bits/stl_vector.h" 3
void resize(size_type __new_size)
# 674 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 675 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size > size()) {
# 676 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_default_append(__new_size - size()); } else {
# 677 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size < size()) {
# 678 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_erase_at_end(((this->_M_impl)._M_start) + __new_size); } }
# 679 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 693 "/usr/include/c++/5/bits/stl_vector.h" 3
void resize(size_type __new_size, const value_type &__x)
# 694 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 695 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size > size()) {
# 696 "/usr/include/c++/5/bits/stl_vector.h" 3
insert(this->end(), __new_size - size(), __x); } else {
# 697 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size < size()) {
# 698 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_erase_at_end(((this->_M_impl)._M_start) + __new_size); } }
# 699 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 725 "/usr/include/c++/5/bits/stl_vector.h" 3
void shrink_to_fit()
# 726 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_shrink_to_fit(); }
# 734 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type capacity() const noexcept
# 735 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 736 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 743 "/usr/include/c++/5/bits/stl_vector.h" 3
bool empty() const noexcept
# 744 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return this->begin() == this->end(); }
# 764 "/usr/include/c++/5/bits/stl_vector.h" 3
void reserve(size_type __n);
# 779 "/usr/include/c++/5/bits/stl_vector.h" 3
reference operator[](size_type __n) noexcept
# 780 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 794 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference operator[](size_type __n) const noexcept
# 795 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 800 "/usr/include/c++/5/bits/stl_vector.h" 3
protected: void _M_range_check(size_type __n) const
# 801 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 802 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__n >= this->size()) {
# 803 "/usr/include/c++/5/bits/stl_vector.h" 3
__throw_out_of_range_fmt("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 807 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 822 "/usr/include/c++/5/bits/stl_vector.h" 3
public: reference at(size_type __n)
# 823 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 824 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_check(__n);
# 825 "/usr/include/c++/5/bits/stl_vector.h" 3
return (*this)[__n];
# 826 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 840 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference at(size_type __n) const
# 841 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 842 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_check(__n);
# 843 "/usr/include/c++/5/bits/stl_vector.h" 3
return (*this)[__n];
# 844 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 851 "/usr/include/c++/5/bits/stl_vector.h" 3
reference front() noexcept
# 852 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *this->begin(); }
# 859 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference front() const noexcept
# 860 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *this->begin(); }
# 867 "/usr/include/c++/5/bits/stl_vector.h" 3
reference back() noexcept
# 868 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 875 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference back() const noexcept
# 876 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 890 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tp *data() noexcept
# 891 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_data_ptr(((this->_M_impl)._M_start)); }
# 898 "/usr/include/c++/5/bits/stl_vector.h" 3
const _Tp *data() const noexcept
# 899 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_data_ptr(((this->_M_impl)._M_start)); }
# 913 "/usr/include/c++/5/bits/stl_vector.h" 3
void push_back(const value_type &__x)
# 914 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 915 "/usr/include/c++/5/bits/stl_vector.h" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 916 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 917 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 919 "/usr/include/c++/5/bits/stl_vector.h" 3
++((this->_M_impl)._M_finish);
# 920 "/usr/include/c++/5/bits/stl_vector.h" 3
} else {
# 923 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_emplace_back_aux(__x); }
# 927 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 931 "/usr/include/c++/5/bits/stl_vector.h" 3
void push_back(value_type &&__x)
# 932 "/usr/include/c++/5/bits/stl_vector.h" 3
{ emplace_back(::std::move(__x)); }
# 934 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> void emplace_back(_Args && ...__args);
# 949 "/usr/include/c++/5/bits/stl_vector.h" 3
void pop_back() noexcept
# 950 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 951 "/usr/include/c++/5/bits/stl_vector.h" 3
--((this->_M_impl)._M_finish);
# 952 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 953 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 968 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> iterator emplace(const_iterator __position, _Args && ...__args);
# 984 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, const value_type & __x);
# 1014 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, value_type &&__x)
# 1015 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return emplace(__position, ::std::move(__x)); }
# 1031 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, initializer_list< _Tp> __l)
# 1032 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (this->insert(__position, (__l.begin()), (__l.end()))); }
# 1051 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, size_type __n, const value_type &__x)
# 1052 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1053 "/usr/include/c++/5/bits/stl_vector.h" 3
difference_type __offset = __position - cbegin();
# 1054 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_fill_insert(this->begin() + __offset, __n, __x);
# 1055 "/usr/include/c++/5/bits/stl_vector.h" 3
return this->begin() + __offset;
# 1056 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1092 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator, class
# 1093 "/usr/include/c++/5/bits/stl_vector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > iterator
# 1095 "/usr/include/c++/5/bits/stl_vector.h" 3
insert(const_iterator __position, _InputIterator __first, _InputIterator
# 1096 "/usr/include/c++/5/bits/stl_vector.h" 3
__last)
# 1097 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1098 "/usr/include/c++/5/bits/stl_vector.h" 3
difference_type __offset = __position - cbegin();
# 1099 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(this->begin() + __offset, __first, __last, ::std::__false_type());
# 1101 "/usr/include/c++/5/bits/stl_vector.h" 3
return this->begin() + __offset;
# 1102 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1146 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator erase(const_iterator __position)
# 1147 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_erase(this->begin() + (__position - cbegin())); }
# 1173 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator erase(const_iterator __first, const_iterator __last)
# 1174 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1175 "/usr/include/c++/5/bits/stl_vector.h" 3
const auto __beg = this->begin();
# 1176 "/usr/include/c++/5/bits/stl_vector.h" 3
const auto __cbeg = cbegin();
# 1177 "/usr/include/c++/5/bits/stl_vector.h" 3
return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
# 1178 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1194 "/usr/include/c++/5/bits/stl_vector.h" 3
void swap(vector &__x) noexcept(_Alloc_traits::_S_nothrow_swap())
# 1198 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1199 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__x._M_impl)));
# 1200 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 1202 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1211 "/usr/include/c++/5/bits/stl_vector.h" 3
void clear() noexcept
# 1212 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_erase_at_end(((this->_M_impl)._M_start)); }
# 1221 "/usr/include/c++/5/bits/stl_vector.h" 3
protected:
# 1219 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> pointer
# 1221 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_allocate_and_copy(size_type __n, _ForwardIterator
# 1222 "/usr/include/c++/5/bits/stl_vector.h" 3
__first, _ForwardIterator __last)
# 1223 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1224 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer __result = (this->_M_allocate(__n));
# 1225 "/usr/include/c++/5/bits/stl_vector.h" 3
try
# 1226 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1227 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::__uninitialized_copy_a(__first, __last, __result, _M_get_Tp_allocator());
# 1229 "/usr/include/c++/5/bits/stl_vector.h" 3
return __result;
# 1230 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1231 "/usr/include/c++/5/bits/stl_vector.h" 3
catch (...)
# 1232 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1233 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_deallocate(__result, __n);
# 1234 "/usr/include/c++/5/bits/stl_vector.h" 3
throw;
# 1235 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1236 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1245 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1247 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __value, ::std::__true_type)
# 1248 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1249 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = _M_allocate(static_cast< size_type>(__n));
# 1250 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + (static_cast< size_type>(__n)));
# 1252 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_fill_initialize(static_cast< size_type>(__n), __value);
# 1253 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1256 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1258 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1260 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1262 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1263 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(__first, __last, _IterCategory());
# 1264 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1269 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(_InputIterator __first, _InputIterator
# 1270 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::input_iterator_tag)
# 1271 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1272 "/usr/include/c++/5/bits/stl_vector.h" 3
for (; __first != __last; ++__first) {
# 1274 "/usr/include/c++/5/bits/stl_vector.h" 3
emplace_back(*__first); }
# 1278 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1281 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void
# 1283 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(_ForwardIterator __first, _ForwardIterator
# 1284 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::forward_iterator_tag)
# 1285 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1286 "/usr/include/c++/5/bits/stl_vector.h" 3
const size_type __n = ::std::distance(__first, __last);
# 1287 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = (this->_M_allocate(__n));
# 1288 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 1289 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__first, __last, ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 1293 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1298 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_initialize(size_type __n, const value_type &__value)
# 1299 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1300 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_start), __n, __value, _M_get_Tp_allocator());
# 1303 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1308 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_default_initialize(size_type __n)
# 1309 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1310 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_default_n_a(((this->_M_impl)._M_start), __n, _M_get_Tp_allocator());
# 1313 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1323 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1325 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1326 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 1329 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1331 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1333 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1335 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1336 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_aux(__first, __last, _IterCategory());
# 1337 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1340 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag);
# 1346 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1354 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_assign(size_type __n, const value_type & __val);
# 1363 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1365 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, ::std::__true_type)
# 1367 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_insert(__pos, __n, __val); }
# 1370 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1372 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator
# 1373 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::__false_type)
# 1374 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1376 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1377 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_insert(__pos, __first, __last, _IterCategory());
# 1378 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1381 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, ::std::input_iterator_tag);
# 1387 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1395 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_insert(iterator __pos, size_type __n, const value_type & __x);
# 1400 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_default_append(size_type __n);
# 1403 "/usr/include/c++/5/bits/stl_vector.h" 3
bool _M_shrink_to_fit();
# 1411 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> void _M_insert_aux(iterator __position, _Args && ...__args);
# 1415 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> void _M_emplace_back_aux(_Args && ...__args);
# 1422 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1423 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1424 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((max_size() - size()) < __n) {
# 1425 "/usr/include/c++/5/bits/stl_vector.h" 3
__throw_length_error(__s); }
# 1427 "/usr/include/c++/5/bits/stl_vector.h" 3
const size_type __len = size() + ::std::max(size(), __n);
# 1428 "/usr/include/c++/5/bits/stl_vector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1429 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1436 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_erase_at_end(pointer __pos) noexcept
# 1437 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1438 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::_Destroy(__pos, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 1439 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = __pos;
# 1440 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1443 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator _M_erase(iterator __position);
# 1446 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator _M_erase(iterator __first, iterator __last);
# 1454 "/usr/include/c++/5/bits/stl_vector.h" 3
private: void _M_move_assign(vector &&__x, ::std::true_type) noexcept
# 1455 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1456 "/usr/include/c++/5/bits/stl_vector.h" 3
vector __tmp(get_allocator());
# 1457 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__tmp._M_impl)));
# 1458 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__x._M_impl)));
# 1459 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::__alloc_on_move(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 1460 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1465 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_move_assign(vector &&__x, ::std::false_type)
# 1466 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1467 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((__x._M_get_Tp_allocator()) == (this->_M_get_Tp_allocator())) {
# 1468 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_move_assign(::std::move(__x), ::std::true_type()); } else
# 1470 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1473 "/usr/include/c++/5/bits/stl_vector.h" 3
(this->assign(::std::__make_move_if_noexcept_iterator(__x.begin()), ::std::__make_move_if_noexcept_iterator(__x.end())));
# 1475 "/usr/include/c++/5/bits/stl_vector.h" 3
__x.clear();
# 1476 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1477 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1481 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Up> _Up *
# 1483 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_data_ptr(_Up *__ptr) const
# 1484 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return __ptr; }
# 1486 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Ptr> typename pointer_traits< _Ptr> ::element_type *
# 1488 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_data_ptr(_Ptr __ptr) const
# 1489 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (empty()) ? nullptr : ::std::__addressof(*__ptr); }
# 1496 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 1509 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1511 "/usr/include/c++/5/bits/stl_vector.h" 3
operator==(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1512 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((__x.size()) == (__y.size())) && std::equal((__x.begin()), (__x.end()), (__y.begin()));
# 1513 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1526 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1528 "/usr/include/c++/5/bits/stl_vector.h" 3
operator<(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1529 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return std::lexicographical_compare((__x.begin()), (__x.end()), (__y.begin()), (__y.end()));
# 1530 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1533 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1535 "/usr/include/c++/5/bits/stl_vector.h" 3
operator!=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1536 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__x == __y); }
# 1539 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1541 "/usr/include/c++/5/bits/stl_vector.h" 3
operator>(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1542 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return __y < __x; }
# 1545 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1547 "/usr/include/c++/5/bits/stl_vector.h" 3
operator<=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1548 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__y < __x); }
# 1551 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1553 "/usr/include/c++/5/bits/stl_vector.h" 3
operator>=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1554 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__x < __y); }
# 1557 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline void
# 1559 "/usr/include/c++/5/bits/stl_vector.h" 3
swap(vector< _Tp, _Alloc> &__x, vector< _Tp, _Alloc> &__y)
# 1560 "/usr/include/c++/5/bits/stl_vector.h" 3
{ (__x.swap(__y)); }
# 1563 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 63 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef unsigned long _Bit_type;
# 68 "/usr/include/c++/5/bits/stl_bvector.h" 3
enum { _S_word_bit = 64};
# 70 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_reference {
# 72 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 73 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type _M_mask;
# 75 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
# 76 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 78 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference() noexcept : _M_p((0)), _M_mask((0)) { }
# 80 "/usr/include/c++/5/bits/stl_bvector.h" 3
operator bool() const noexcept
# 81 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !(!((*(_M_p)) & (_M_mask))); }
# 84 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference &operator=(bool __x) noexcept
# 85 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 86 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x) {
# 87 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(_M_p)) |= (_M_mask); } else {
# 89 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(_M_p)) &= (~(_M_mask)); }
# 90 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 91 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 94 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference &operator=(const _Bit_reference &__x) noexcept
# 95 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((*this) = ((bool)__x)); }
# 98 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator==(const _Bit_reference &__x) const
# 99 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((bool)(*this)) == ((bool)__x); }
# 102 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<(const _Bit_reference &__x) const
# 103 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (!((bool)(*this))) && ((bool)__x); }
# 106 "/usr/include/c++/5/bits/stl_bvector.h" 3
void flip() noexcept
# 107 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ (*(_M_p)) ^= (_M_mask); }
# 108 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 112 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void swap(_Bit_reference __x, _Bit_reference __y) noexcept
# 113 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 114 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 115 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 116 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 117 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 120 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void swap(_Bit_reference __x, bool &__y) noexcept
# 121 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 122 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 123 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 124 "/usr/include/c++/5/bits/stl_bvector.h" 3
__y = __tmp;
# 125 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 128 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void swap(bool &__x, _Bit_reference __y) noexcept
# 129 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 130 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 131 "/usr/include/c++/5/bits/stl_bvector.h" 3
__x = __y;
# 132 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 133 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 136 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_iterator_base : public iterator< random_access_iterator_tag, bool> {
# 139 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 140 "/usr/include/c++/5/bits/stl_bvector.h" 3
unsigned _M_offset;
# 142 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator_base(_Bit_type *__x, unsigned __y) : _M_p(__x), _M_offset(__y)
# 143 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 146 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_bump_up()
# 147 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 148 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_offset)++) == (((int)_S_word_bit) - 1))
# 149 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 150 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (0);
# 151 "/usr/include/c++/5/bits/stl_bvector.h" 3
++(_M_p);
# 152 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 153 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 156 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_bump_down()
# 157 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 158 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_offset)--) == (0))
# 159 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 160 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (((int)_S_word_bit) - 1);
# 161 "/usr/include/c++/5/bits/stl_bvector.h" 3
--(_M_p);
# 162 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 163 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 166 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_incr(ptrdiff_t __i)
# 167 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 168 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __n = __i + (_M_offset);
# 169 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_p) += (__n / ((int)_S_word_bit));
# 170 "/usr/include/c++/5/bits/stl_bvector.h" 3
__n = (__n % ((int)_S_word_bit));
# 171 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n < (0))
# 172 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 173 "/usr/include/c++/5/bits/stl_bvector.h" 3
__n += ((int)_S_word_bit);
# 174 "/usr/include/c++/5/bits/stl_bvector.h" 3
--(_M_p);
# 175 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 176 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (static_cast< unsigned>(__n));
# 177 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 180 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator==(const _Bit_iterator_base &__i) const
# 181 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((_M_p) == (__i._M_p)) && ((_M_offset) == (__i._M_offset)); }
# 184 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<(const _Bit_iterator_base &__i) const
# 185 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 186 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((_M_p) < (__i._M_p)) || (((_M_p) == (__i._M_p)) && ((_M_offset) < (__i._M_offset)));
# 188 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 191 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator!=(const _Bit_iterator_base &__i) const
# 192 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !((*this) == __i); }
# 195 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator>(const _Bit_iterator_base &__i) const
# 196 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__i < (*this)); }
# 199 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<=(const _Bit_iterator_base &__i) const
# 200 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !(__i < (*this)); }
# 203 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator>=(const _Bit_iterator_base &__i) const
# 204 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !((*this) < __i); }
# 205 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 208 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline ptrdiff_t operator-(const _Bit_iterator_base &__x, const _Bit_iterator_base &__y)
# 209 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 210 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((((int)_S_word_bit) * ((__x._M_p) - (__y._M_p))) + (__x._M_offset)) - (__y._M_offset);
# 212 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 214 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_iterator : public _Bit_iterator_base {
# 216 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_reference reference;
# 217 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_reference *pointer;
# 218 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_iterator iterator;
# 220 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator() : _Bit_iterator_base(0, 0) { }
# 222 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 223 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 226 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_const_cast() const
# 227 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *this; }
# 230 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator*() const
# 231 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return reference(_M_p, 1UL << (_M_offset)); }
# 234 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator++()
# 235 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 236 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 237 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 238 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 241 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator++(int)
# 242 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 243 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 244 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 245 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 246 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 249 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator--()
# 250 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 251 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 252 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 253 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 256 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator--(int)
# 257 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 258 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 259 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 260 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 261 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 264 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator+=(difference_type __i)
# 265 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 267 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 268 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 271 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator-=(difference_type __i)
# 272 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 273 "/usr/include/c++/5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 274 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 275 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 278 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator+(difference_type __i) const
# 279 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 280 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 281 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 282 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 285 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator-(difference_type __i) const
# 286 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 287 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 288 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 289 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 292 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator[](difference_type __i) const
# 293 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 294 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 297 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline _Bit_iterator operator+(ptrdiff_t __n, const _Bit_iterator &__x)
# 298 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 300 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_const_iterator : public _Bit_iterator_base {
# 302 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool reference;
# 303 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 304 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef const bool *pointer;
# 305 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_const_iterator const_iterator;
# 307 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
# 309 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 310 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 312 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator(const _Bit_iterator &__x) : _Bit_iterator_base(__x._M_p, __x._M_offset)
# 313 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 316 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator _M_const_cast() const
# 317 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_iterator(_M_p, _M_offset); }
# 320 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator*() const
# 321 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_reference(_M_p, 1UL << (_M_offset)); }
# 324 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator++()
# 325 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 326 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 327 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 328 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 331 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator++(int)
# 332 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 333 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 334 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 335 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 336 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 339 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator--()
# 340 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 341 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 342 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 343 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator--(int)
# 347 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 348 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 349 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 350 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 351 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 354 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator+=(difference_type __i)
# 355 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 356 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 357 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 358 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 361 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator-=(difference_type __i)
# 362 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 363 "/usr/include/c++/5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 364 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 365 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 368 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator+(difference_type __i) const
# 369 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 370 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 371 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 372 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 375 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator-(difference_type __i) const
# 376 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 377 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 378 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 379 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 382 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator[](difference_type __i) const
# 383 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 384 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 387 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline _Bit_const_iterator operator+(ptrdiff_t __n, const _Bit_const_iterator &__x)
# 388 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 391 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)
# 392 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 393 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; (__first != __last); (++__first)) {
# 394 "/usr/include/c++/5/bits/stl_bvector.h" 3
(((*__first)) = __x); }
# 395 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 398 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void fill(_Bit_iterator __first, _Bit_iterator __last, const bool &__x)
# 399 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 400 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((__first._M_p) != (__last._M_p))
# 401 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 402 "/usr/include/c++/5/bits/stl_bvector.h" 3
std::fill((__first._M_p) + 1, __last._M_p, __x ? ~0 : 0);
# 403 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(__first, _Bit_iterator((__first._M_p) + 1, 0), __x);
# 404 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(_Bit_iterator(__last._M_p, 0), __last, __x);
# 405 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else {
# 407 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(__first, __last, __x); }
# 408 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 410 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 411 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bvector_base {
# 414 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other _Bit_alloc_type;
# 416 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other> _Bit_alloc_traits;
# 417 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other> ::pointer _Bit_pointer;
# 419 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bvector_impl : public _Bit_alloc_type {
# 422 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_iterator _M_start;
# 423 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_iterator _M_finish;
# 424 "/usr/include/c++/5/bits/stl_bvector.h" 3
typename ::std::_Bvector_base< _Alloc> ::_Bit_pointer _M_end_of_storage;
# 426 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl() : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
# 428 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 430 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl(const typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type &__a) : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
# 432 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 435 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl(typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type &&__a) : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(::std::move(__a)), _M_start(), _M_finish(), _M_end_of_storage()
# 438 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 442 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *_M_end_addr() const noexcept
# 443 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 444 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_M_end_of_storage) {
# 445 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ::std::__addressof((_M_end_of_storage)[-1]) + 1; }
# 446 "/usr/include/c++/5/bits/stl_bvector.h" 3
return 0;
# 447 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 448 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 451 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 454 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_type &_M_get_Bit_allocator() noexcept
# 455 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *(static_cast< _Bit_alloc_type *>(&(this->_M_impl))); }
# 458 "/usr/include/c++/5/bits/stl_bvector.h" 3
const _Bit_alloc_type &_M_get_Bit_allocator() const noexcept
# 459 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *(static_cast< const _Bit_alloc_type *>(&(this->_M_impl))); }
# 462 "/usr/include/c++/5/bits/stl_bvector.h" 3
allocator_type get_allocator() const noexcept
# 463 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (allocator_type)this->_M_get_Bit_allocator(); }
# 465 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base() : _M_impl()
# 466 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 468 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base(const allocator_type &__a) : _M_impl(__a)
# 469 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 472 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base(_Bvector_base &&__x) noexcept : _M_impl(std::move(__x._M_get_Bit_allocator()))
# 474 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 475 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = ((__x._M_impl)._M_start);
# 476 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = ((__x._M_impl)._M_finish);
# 477 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = ((__x._M_impl)._M_end_of_storage);
# 478 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_start) = _Bit_iterator();
# 479 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_finish) = _Bit_iterator();
# 480 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_end_of_storage) = nullptr;
# 481 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 484 "/usr/include/c++/5/bits/stl_bvector.h" 3
~_Bvector_base()
# 485 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ this->_M_deallocate(); }
# 488 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: _Bvector_impl _M_impl;
# 491 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_pointer _M_allocate(size_t __n)
# 492 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_alloc_traits::allocate(_M_impl, (_S_nword)(__n)); }
# 495 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_deallocate()
# 496 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 497 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_impl)._M_start)._M_p)
# 498 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 499 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_t __n = ((_M_impl)._M_end_addr()) - (((_M_impl)._M_start)._M_p);
# 500 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_traits::deallocate(_M_impl, ((_M_impl)._M_end_of_storage) - __n, __n);
# 503 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 504 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 507 "/usr/include/c++/5/bits/stl_bvector.h" 3
static size_t _S_nword(size_t __n)
# 508 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((__n + ((int)_S_word_bit)) - (1)) / ((int)_S_word_bit); }
# 509 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 512 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 517 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 540 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 541 "/usr/include/c++/5/bits/stl_bvector.h" 3
class vector< bool, _Alloc> : protected _Bvector_base< _Alloc> {
# 543 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bvector_base< _Alloc> _Base;
# 544 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename ::std::_Bvector_base< _Alloc> ::_Bit_pointer _Bit_pointer;
# 545 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_traits _Bit_alloc_traits;
# 548 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class > friend struct hash;
# 552 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: typedef bool value_type;
# 553 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::size_t size_type;
# 554 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::ptrdiff_t difference_type;
# 555 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_reference reference;
# 556 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 557 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_reference *pointer;
# 558 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef const bool *const_pointer;
# 559 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_iterator iterator;
# 560 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_const_iterator const_iterator;
# 561 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::reverse_iterator< ::std::_Bit_const_iterator> const_reverse_iterator;
# 562 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::reverse_iterator< ::std::_Bit_iterator> reverse_iterator;
# 563 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 565 "/usr/include/c++/5/bits/stl_bvector.h" 3
allocator_type get_allocator() const
# 566 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Base::get_allocator(); }
# 569 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: using ::std::_Bvector_base< _Alloc> ::_M_allocate;
# 570 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_M_deallocate;
# 571 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_S_nword;
# 572 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_M_get_Bit_allocator;
# 575 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: vector() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _Base()
# 579 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 582 "/usr/include/c++/5/bits/stl_bvector.h" 3
explicit vector(const allocator_type &__a) : _Base(__a)
# 583 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 587 "/usr/include/c++/5/bits/stl_bvector.h" 3
explicit vector(size_type __n, const allocator_type &__a = allocator_type()) : vector(__n, false, __a)
# 589 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 591 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(size_type __n, const bool &__value, const allocator_type &
# 592 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 594 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 595 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__n);
# 596 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __value ? ~0 : 0);
# 598 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 611 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(const ::std::vector< bool, _Alloc> &__x) : _Base(_Bit_alloc_traits::_S_select_on_copy((__x._M_get_Bit_allocator())))
# 613 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 614 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 615 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), ((this->_M_impl)._M_start));
# 616 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 619 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(::std::vector< bool, _Alloc> &&__x) noexcept : _Base(::std::move(__x))
# 620 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 622 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(::std::vector< bool, _Alloc> &&__x, const allocator_type &__a) noexcept(_Bit_alloc_traits::_S_always_equal()) : _Base(__a)
# 625 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 626 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.get_allocator() == __a)
# 627 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 628 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = ((__x._M_impl)._M_start);
# 629 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = ((__x._M_impl)._M_finish);
# 630 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = ((__x._M_impl)._M_end_of_storage);
# 631 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_start) = ::std::_Bit_iterator();
# 632 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_finish) = ::std::_Bit_iterator();
# 633 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_end_of_storage) = nullptr;
# 634 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 636 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 637 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 638 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 639 "/usr/include/c++/5/bits/stl_bvector.h" 3
__x.clear();
# 640 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 641 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 643 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(const ::std::vector< bool, _Alloc> &__x, const allocator_type &__a) : _Base(__a)
# 645 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 647 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), ((this->_M_impl)._M_start));
# 648 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 650 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(::std::initializer_list< bool> __l, const allocator_type &
# 651 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 653 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 654 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(__l.begin(), __l.end(), ::std::random_access_iterator_tag());
# 656 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 660 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator, class
# 661 "/usr/include/c++/5/bits/stl_bvector.h" 3
 = ::std::_RequireInputIter< _InputIterator> >
# 662 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 663 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 665 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_initialize_dispatch(__first, __last, ::std::__false_type()); }
# 677 "/usr/include/c++/5/bits/stl_bvector.h" 3
~vector() noexcept { }
# 680 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(const ::std::vector< bool, _Alloc> &__x)
# 681 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 682 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((&__x) == this) {
# 683 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this; }
# 685 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
# 686 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 687 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((this->_M_get_Bit_allocator()) != (__x._M_get_Bit_allocator()))
# 688 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 689 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 690 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::__alloc_on_copy(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 692 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 693 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else {
# 695 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::__alloc_on_copy(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator())); }
# 697 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 699 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.size() > capacity())
# 700 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 701 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 702 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 703 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 704 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 706 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 707 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 711 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(::std::vector< bool, _Alloc> &&__x) noexcept(_Bit_alloc_traits::_S_nothrow_move())
# 712 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 713 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_Bit_alloc_traits::_S_propagate_on_move_assign() || ((this->_M_get_Bit_allocator()) == (__x._M_get_Bit_allocator())))
# 715 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 716 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 717 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = ((__x._M_impl)._M_start);
# 718 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = ((__x._M_impl)._M_finish);
# 719 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = ((__x._M_impl)._M_end_of_storage);
# 720 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_start) = ::std::_Bit_iterator();
# 721 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_finish) = ::std::_Bit_iterator();
# 722 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_end_of_storage) = nullptr;
# 723 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::__alloc_on_move(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 725 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 727 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 728 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.size() > capacity())
# 729 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 730 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 731 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 732 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 733 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 735 "/usr/include/c++/5/bits/stl_bvector.h" 3
__x.clear();
# 736 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 737 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 738 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 741 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(::std::initializer_list< bool> __l)
# 742 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 743 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->assign(__l.begin(), __l.end()));
# 744 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 745 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 753 "/usr/include/c++/5/bits/stl_bvector.h" 3
void assign(size_type __n, const bool &__x)
# 754 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __x); }
# 757 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator, class
# 758 "/usr/include/c++/5/bits/stl_bvector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > void
# 760 "/usr/include/c++/5/bits/stl_bvector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 761 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_assign_dispatch(__first, __last, ::std::__false_type()); }
# 774 "/usr/include/c++/5/bits/stl_bvector.h" 3
void assign(::std::initializer_list< bool> __l)
# 775 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ (this->assign(__l.begin(), __l.end())); }
# 779 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator begin() noexcept
# 780 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 783 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator begin() const noexcept
# 784 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 787 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator end() noexcept
# 788 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 791 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator end() const noexcept
# 792 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 795 "/usr/include/c++/5/bits/stl_bvector.h" 3
reverse_iterator rbegin() noexcept
# 796 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((reverse_iterator)(this->end())); }
# 799 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator rbegin() const noexcept
# 800 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 803 "/usr/include/c++/5/bits/stl_bvector.h" 3
reverse_iterator rend() noexcept
# 804 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 807 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator rend() const noexcept
# 808 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 812 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator cbegin() const noexcept
# 813 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 816 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator cend() const noexcept
# 817 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 820 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator crbegin() const noexcept
# 821 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 824 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator crend() const noexcept
# 825 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 829 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type size() const noexcept
# 830 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (size_type)(((this->end()) - (this->begin()))); }
# 833 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type max_size() const noexcept
# 834 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 835 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __isize = ((::__gnu_cxx::__numeric_traits_integer< long> ::__max - ((int)_S_word_bit)) + (1));
# 838 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __asize = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
# 840 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__asize <= (__isize / ((int)_S_word_bit))) ? __asize * ((int)_S_word_bit) : __isize;
# 842 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 845 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type capacity() const noexcept
# 846 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (size_type)((const_iterator(((this->_M_impl)._M_end_addr()), 0) - (this->begin())));
# 847 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool empty() const noexcept
# 851 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->begin()) == (this->end())); }
# 854 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator[](size_type __n)
# 855 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 856 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (*iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 858 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 861 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator[](size_type __n) const
# 862 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 863 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (*const_iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 865 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 869 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: void _M_range_check(size_type __n) const
# 870 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 871 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n >= this->size()) {
# 872 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_out_of_range_fmt("vector<bool>::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 876 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 880 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: reference at(size_type __n)
# 881 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 884 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference at(size_type __n) const
# 885 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 888 "/usr/include/c++/5/bits/stl_bvector.h" 3
void reserve(size_type __n)
# 889 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 890 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n > max_size()) {
# 891 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_length_error("vector::reserve"); }
# 892 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (capacity() < __n) {
# 893 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_reallocate(__n); }
# 894 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 897 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference front()
# 898 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 901 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference front() const
# 902 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 905 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference back()
# 906 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 909 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference back() const
# 910 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 918 "/usr/include/c++/5/bits/stl_bvector.h" 3
void data() noexcept { }
# 921 "/usr/include/c++/5/bits/stl_bvector.h" 3
void push_back(bool __x)
# 922 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 923 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr())) {
# 924 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 926 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_aux(this->end(), __x); }
# 927 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 930 "/usr/include/c++/5/bits/stl_bvector.h" 3
void swap(::std::vector< bool, _Alloc> &__x) noexcept(_Bit_alloc_traits::_S_nothrow_swap())
# 934 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 935 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_start), ((__x._M_impl)._M_start));
# 936 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_finish), ((__x._M_impl)._M_finish));
# 937 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_end_of_storage), ((__x._M_impl)._M_end_of_storage));
# 939 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_traits::_S_on_swap(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 941 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 945 "/usr/include/c++/5/bits/stl_bvector.h" 3
static void swap(reference __x, reference __y) noexcept
# 946 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 947 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 948 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 949 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 950 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 954 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(const_iterator __position, const bool &__x = ((bool)0))
# 958 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 959 "/usr/include/c++/5/bits/stl_bvector.h" 3
const difference_type __n = (__position - (this->begin()));
# 960 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr())) && (__position == (this->end()))) {
# 962 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 964 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_aux(__position._M_const_cast(), __x); }
# 965 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __n);
# 966 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 969 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator, class
# 970 "/usr/include/c++/5/bits/stl_bvector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > iterator
# 972 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(const_iterator __position, _InputIterator
# 973 "/usr/include/c++/5/bits/stl_bvector.h" 3
__first, _InputIterator __last)
# 974 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 975 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __offset = __position - cbegin();
# 976 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(__position._M_const_cast(), __first, __last, ::std::__false_type());
# 978 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __offset);
# 979 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 993 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(const_iterator __position, size_type __n, const bool &__x)
# 994 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 995 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __offset = __position - cbegin();
# 996 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_fill_insert(__position._M_const_cast(), __n, __x);
# 997 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __offset);
# 998 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1007 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(const_iterator __p, ::std::initializer_list< bool> __l)
# 1008 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (this->insert(__p, __l.begin(), __l.end())); }
# 1012 "/usr/include/c++/5/bits/stl_bvector.h" 3
void pop_back()
# 1013 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ --((this->_M_impl)._M_finish); }
# 1017 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator erase(const_iterator __position)
# 1021 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return this->_M_erase(__position._M_const_cast()); }
# 1025 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator erase(const_iterator __first, const_iterator __last)
# 1029 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return this->_M_erase(__first._M_const_cast(), __last._M_const_cast()); }
# 1032 "/usr/include/c++/5/bits/stl_bvector.h" 3
void resize(size_type __new_size, bool __x = ((bool)0))
# 1033 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1034 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__new_size < size()) {
# 1035 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + ((difference_type)__new_size))); } else {
# 1037 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __new_size - size(), __x); }
# 1038 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1042 "/usr/include/c++/5/bits/stl_bvector.h" 3
void shrink_to_fit()
# 1043 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_shrink_to_fit(); }
# 1047 "/usr/include/c++/5/bits/stl_bvector.h" 3
void flip() noexcept
# 1048 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1049 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *const __end = ((this->_M_impl)._M_end_addr());
# 1050 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (::std::_Bit_type *__p = ((((this->_M_impl)._M_start)._M_p)); __p != __end; ++__p) {
# 1051 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*__p) = (~(*__p)); }
# 1052 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1055 "/usr/include/c++/5/bits/stl_bvector.h" 3
void clear() noexcept
# 1056 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_erase_at_end(this->begin()); }
# 1059 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class ..._Args> void
# 1061 "/usr/include/c++/5/bits/stl_bvector.h" 3
emplace_back(_Args &&...__args)
# 1062 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ push_back(bool(__args...)); }
# 1064 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class ..._Args> iterator
# 1066 "/usr/include/c++/5/bits/stl_bvector.h" 3
emplace(const_iterator __pos, _Args &&...__args)
# 1067 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return insert(__pos, bool(__args...)); }
# 1073 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator
# 1074 "/usr/include/c++/5/bits/stl_bvector.h" 3
__result)
# 1075 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1076 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *__q = std::copy(__first._M_p, __last._M_p, __result._M_p);
# 1077 "/usr/include/c++/5/bits/stl_bvector.h" 3
return std::copy(const_iterator(__last._M_p, 0), __last, iterator(__q, 0));
# 1079 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1082 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_initialize(size_type __n)
# 1083 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1084 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_pointer __q = (this->_M_allocate(__n));
# 1085 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 1086 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = iterator(::std::__addressof(*__q), 0);
# 1087 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + ((difference_type)__n));
# 1088 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1091 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_reallocate(size_type __n);
# 1095 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool _M_shrink_to_fit();
# 1102 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1104 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __x, ::std::__true_type)
# 1105 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1106 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(static_cast< size_type>(__n));
# 1107 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), (__x) ? ~0 : 0);
# 1109 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1111 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1113 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1115 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_initialize_range(__first, __last, ::std::__iterator_category(__first));
# 1116 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1118 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1120 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 1122 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1123 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; __first != __last; ++__first) {
# 1124 "/usr/include/c++/5/bits/stl_bvector.h" 3
push_back(*__first); }
# 1125 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1127 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1129 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 1131 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1132 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __n = ::std::distance(__first, __last);
# 1133 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__n);
# 1134 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::copy(__first, __last, ((this->_M_impl)._M_start));
# 1135 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1139 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1141 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1142 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __val); }
# 1144 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1146 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1148 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_assign_aux(__first, __last, ::std::__iterator_category(__first)); }
# 1151 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_fill_assign(::std::size_t __n, bool __x)
# 1152 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1153 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n > size())
# 1154 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1155 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __x ? ~0 : 0);
# 1157 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __n - size(), __x);
# 1158 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 1160 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1161 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + __n));
# 1162 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __x ? ~0 : 0);
# 1164 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1165 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1167 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1169 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 1171 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1172 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __cur = this->begin();
# 1173 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; (__first != __last) && (__cur != (this->end())); (++__cur), (++__first)) {
# 1174 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*__cur) = (*__first); }
# 1175 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__first == __last) {
# 1176 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(__cur); } else {
# 1178 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __first, __last); }
# 1179 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1181 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1183 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 1185 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1186 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __len = ::std::distance(__first, __last);
# 1187 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__len < size()) {
# 1188 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(::std::copy(__first, __last, this->begin())); } else
# 1190 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1191 "/usr/include/c++/5/bits/stl_bvector.h" 3
_ForwardIterator __mid = __first;
# 1192 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::advance(__mid, size());
# 1193 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::copy(__first, __mid, this->begin());
# 1194 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __mid, __last);
# 1195 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1196 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1202 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1204 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, ::std::__true_type)
# 1206 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_insert(__pos, __n, __x); }
# 1208 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1210 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator
# 1211 "/usr/include/c++/5/bits/stl_bvector.h" 3
__first, _InputIterator __last, ::std::__false_type)
# 1213 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_insert_range(__pos, __first, __last, ::std::__iterator_category(__first));
# 1214 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1217 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_fill_insert(iterator __position, size_type __n, bool __x);
# 1219 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1221 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_range(iterator __pos, _InputIterator __first, _InputIterator
# 1222 "/usr/include/c++/5/bits/stl_bvector.h" 3
__last, ::std::input_iterator_tag)
# 1223 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1224 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; __first != __last; ++__first)
# 1225 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1226 "/usr/include/c++/5/bits/stl_bvector.h" 3
__pos = insert(__pos, *__first);
# 1227 "/usr/include/c++/5/bits/stl_bvector.h" 3
(++__pos);
# 1228 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1229 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1231 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1237 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_insert_aux(iterator __position, bool __x);
# 1240 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1241 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1242 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((max_size() - size()) < __n) {
# 1243 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_length_error(__s); }
# 1245 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __len = size() + ::std::max(size(), __n);
# 1246 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1247 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1250 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_erase_at_end(iterator __pos)
# 1251 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ ((this->_M_impl)._M_finish) = __pos; }
# 1254 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_erase(iterator __pos);
# 1257 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_erase(iterator __first, iterator __last);
# 1258 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 1261 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1273 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 1274 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct hash< vector< bool, _Alloc> > : public __hash_base< unsigned long, vector< bool, _Alloc> > {
# 1278 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::size_t operator()(const vector< bool, _Alloc> &) const noexcept;
# 1279 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 1282 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 59 "/usr/include/c++/5/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 66 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::reserve(size_type __n)
# 67 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 68 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > this->max_size()) {
# 69 "/usr/include/c++/5/bits/vector.tcc" 3
__throw_length_error("vector::reserve"); }
# 70 "/usr/include/c++/5/bits/vector.tcc" 3
if (this->capacity() < __n)
# 71 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 72 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __old_size = size();
# 73 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__n, ::std::__make_move_if_noexcept_iterator(((this->_M_impl)._M_start)), ::std::__make_move_if_noexcept_iterator(((this->_M_impl)._M_finish)));
# 76 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 78 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 81 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 82 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (__tmp + __old_size);
# 83 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 84 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 85 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 88 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 89 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> void
# 92 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::emplace_back(_Args &&...__args)
# 93 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 94 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 95 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 96 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), ::std::forward< _Args> (__args)...);
# 98 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 99 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 101 "/usr/include/c++/5/bits/vector.tcc" 3
_M_emplace_back_aux(::std::forward< _Args> (__args)...); }
# 102 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 105 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 109 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::insert(const_iterator __position, const value_type &__x)
# 113 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 114 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = __position - this->begin();
# 115 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage)) && (__position == this->end()))
# 117 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 118 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 119 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 120 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 122 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 124 "/usr/include/c++/5/bits/vector.tcc" 3
const auto __pos = this->begin() + (__position - cbegin());
# 125 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 126 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 127 "/usr/include/c++/5/bits/vector.tcc" 3
_Tp __x_copy = __x;
# 128 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(__pos, ::std::move(__x_copy));
# 129 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 131 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(__pos, __x); }
# 135 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 136 "/usr/include/c++/5/bits/vector.tcc" 3
return ((iterator)(((this->_M_impl)._M_start) + __n));
# 137 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 139 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 142 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_erase(iterator __position)
# 143 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 144 "/usr/include/c++/5/bits/vector.tcc" 3
if ((__position + 1) != this->end()) {
# 145 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move(__position + 1, this->end(), __position); }
# 146 "/usr/include/c++/5/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 147 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 148 "/usr/include/c++/5/bits/vector.tcc" 3
return __position;
# 149 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 151 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 154 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_erase(iterator __first, iterator __last)
# 155 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 156 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 157 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 158 "/usr/include/c++/5/bits/vector.tcc" 3
if (__last != this->end()) {
# 159 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move(__last, this->end(), __first); }
# 160 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end((__first.base()) + (this->end() - __last));
# 161 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 162 "/usr/include/c++/5/bits/vector.tcc" 3
return __first;
# 163 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 165 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> vector< _Tp, _Alloc> &
# 168 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::operator=(const vector &__x)
# 169 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 170 "/usr/include/c++/5/bits/vector.tcc" 3
if ((&__x) != this)
# 171 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 173 "/usr/include/c++/5/bits/vector.tcc" 3
if (_Alloc_traits::_S_propagate_on_copy_assign())
# 174 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 175 "/usr/include/c++/5/bits/vector.tcc" 3
if ((!_Alloc_traits::_S_always_equal()) && (_M_get_Tp_allocator() != (__x._M_get_Tp_allocator())))
# 177 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 179 "/usr/include/c++/5/bits/vector.tcc" 3
this->clear();
# 180 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 183 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = nullptr;
# 184 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = nullptr;
# 185 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = nullptr;
# 186 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 187 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__alloc_on_copy(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 189 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 191 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __xlen = __x.size();
# 192 "/usr/include/c++/5/bits/vector.tcc" 3
if (__xlen > capacity())
# 193 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 194 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(), __x.end());
# 196 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 198 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 201 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 202 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __xlen);
# 203 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 204 "/usr/include/c++/5/bits/vector.tcc" 3
if (size() >= __xlen)
# 205 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 206 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(::std::copy(__x.begin(), __x.end(), this->begin()), this->end(), _M_get_Tp_allocator());
# 208 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 210 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 211 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(((__x._M_impl)._M_start), ((__x._M_impl)._M_start) + size(), ((this->_M_impl)._M_start));
# 213 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_copy_a(((__x._M_impl)._M_start) + size(), ((__x._M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 217 "/usr/include/c++/5/bits/vector.tcc" 3
} }
# 218 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __xlen);
# 219 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 220 "/usr/include/c++/5/bits/vector.tcc" 3
return *this;
# 221 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 223 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 226 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_assign(::std::size_t __n, const value_type &__val)
# 227 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 228 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > capacity())
# 229 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 230 "/usr/include/c++/5/bits/vector.tcc" 3
vector __tmp(__n, __val, _M_get_Tp_allocator());
# 231 "/usr/include/c++/5/bits/vector.tcc" 3
((__tmp._M_impl)._M_swap_data((this->_M_impl)));
# 232 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 233 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > size())
# 234 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 235 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill(this->begin(), this->end(), __val);
# 236 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - size(), __val, _M_get_Tp_allocator());
# 240 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 242 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::fill_n(((this->_M_impl)._M_start), __n, __val)); } }
# 243 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 245 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 246 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _InputIterator> void
# 249 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 251 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 252 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __cur(((this->_M_impl)._M_start));
# 253 "/usr/include/c++/5/bits/vector.tcc" 3
for (; (__first != __last) && (__cur != ((this->_M_impl)._M_finish)); (++__cur), (++__first)) {
# 255 "/usr/include/c++/5/bits/vector.tcc" 3
(*__cur) = (*__first); }
# 256 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first == __last) {
# 257 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(__cur); } else {
# 259 "/usr/include/c++/5/bits/vector.tcc" 3
insert(this->end(), __first, __last); }
# 260 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 262 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 263 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 266 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 268 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 269 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = ::std::distance(__first, __last);
# 271 "/usr/include/c++/5/bits/vector.tcc" 3
if (__len > capacity())
# 272 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 273 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
# 274 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 276 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 279 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 280 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __len);
# 281 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = ((this->_M_impl)._M_finish);
# 282 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 283 "/usr/include/c++/5/bits/vector.tcc" 3
if (size() >= __len) {
# 284 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::copy(__first, __last, ((this->_M_impl)._M_start))); } else
# 286 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 287 "/usr/include/c++/5/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 288 "/usr/include/c++/5/bits/vector.tcc" 3
::std::advance(__mid, size());
# 289 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __mid, ((this->_M_impl)._M_start));
# 290 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 294 "/usr/include/c++/5/bits/vector.tcc" 3
} }
# 295 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 298 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 299 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> typename vector< _Tp, _Alloc> ::iterator
# 302 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::emplace(const_iterator __position, _Args &&...__args)
# 303 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 304 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = __position - this->begin();
# 305 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage)) && (__position == this->end()))
# 307 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 308 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), ::std::forward< _Args> (__args)...);
# 310 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 311 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 313 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(this->begin() + (__position - cbegin()), ::std::forward< _Args> (__args)...); }
# 315 "/usr/include/c++/5/bits/vector.tcc" 3
return ((iterator)(((this->_M_impl)._M_start) + __n));
# 316 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 318 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 319 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> void
# 322 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_insert_aux(iterator __position, _Args &&...__args)
# 329 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 330 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 331 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 332 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), ::std::move(*(((this->_M_impl)._M_finish) - 1)));
# 335 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 339 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move_backward((__position.base()), ((this->_M_impl)._M_finish) - 2, ((this->_M_impl)._M_finish) - 1);
# 345 "/usr/include/c++/5/bits/vector.tcc" 3
(*__position) = (_Tp(::std::forward< _Args> (__args)...));
# 347 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 349 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 350 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector::_M_insert_aux");
# 352 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 353 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 354 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 355 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 356 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 361 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), __new_start + __elems_before, ::std::forward< _Args> (__args)...);
# 368 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 370 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 375 "/usr/include/c++/5/bits/vector.tcc" 3
++__new_finish;
# 377 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 381 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 382 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 383 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 384 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 385 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), __new_start + __elems_before); } else {
# 388 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 389 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 390 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 391 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 392 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 394 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 397 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 398 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 399 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 400 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 401 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 404 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 405 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> void
# 408 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_emplace_back_aux(_Args &&...__args)
# 409 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 410 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector::_M_emplace_back_aux");
# 412 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 413 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 414 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 415 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 416 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), __new_start + size(), ::std::forward< _Args> (__args)...);
# 418 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 420 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), __new_start, _M_get_Tp_allocator());
# 425 "/usr/include/c++/5/bits/vector.tcc" 3
++__new_finish;
# 426 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 427 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 428 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 429 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 430 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), __new_start + size()); } else {
# 432 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 433 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 434 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 435 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 436 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 438 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 441 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 442 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 443 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 444 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 447 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 450 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, const value_type &__x)
# 451 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 452 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n != (0))
# 453 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 454 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 456 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 457 "/usr/include/c++/5/bits/vector.tcc" 3
value_type __x_copy = __x;
# 458 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 459 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 460 "/usr/include/c++/5/bits/vector.tcc" 3
if (__elems_after > __n)
# 461 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 462 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 466 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 467 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move_backward((__position.base()), __old_finish - __n, __old_finish);
# 469 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill((__position.base()), (__position.base()) + __n, __x_copy);
# 471 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 473 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 474 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - __elems_after, __x_copy, _M_get_Tp_allocator());
# 479 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 482 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 483 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill((__position.base()), __old_finish, __x_copy);
# 484 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 485 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 487 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 488 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_fill_insert");
# 490 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 491 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 492 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 493 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 494 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 496 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_fill_n_a(__new_start + __elems_before, __n, __x, _M_get_Tp_allocator());
# 499 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 501 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 506 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish += __n;
# 508 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 512 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 513 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 514 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 515 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 516 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start + __elems_before, (__new_start + __elems_before) + __n, _M_get_Tp_allocator()); } else {
# 520 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 522 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 523 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 524 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 525 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 527 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 530 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 531 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 532 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 533 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 534 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 535 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 538 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 541 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_default_append(size_type __n)
# 542 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 543 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n != (0))
# 544 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 545 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 547 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 548 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_default_n_a(((this->_M_impl)._M_finish), __n, _M_get_Tp_allocator());
# 551 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 553 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 554 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_default_append");
# 556 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __old_size = this->size();
# 557 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 558 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 559 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 560 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 561 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), __new_start, _M_get_Tp_allocator());
# 565 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_default_n_a(__new_finish, __n, _M_get_Tp_allocator());
# 568 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 569 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 570 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 571 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
# 573 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 574 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 575 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 576 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 578 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 581 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 582 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 583 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 584 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 585 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 586 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 588 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> bool
# 591 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_shrink_to_fit()
# 592 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 593 "/usr/include/c++/5/bits/vector.tcc" 3
if (capacity() == size()) {
# 594 "/usr/include/c++/5/bits/vector.tcc" 3
return false; }
# 595 "/usr/include/c++/5/bits/vector.tcc" 3
return std::__shrink_to_fit_aux< vector> ::_S_do_it(*this);
# 596 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 599 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 600 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _InputIterator> void
# 603 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __pos, _InputIterator __first, _InputIterator
# 604 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::input_iterator_tag)
# 605 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 606 "/usr/include/c++/5/bits/vector.tcc" 3
for (; __first != __last; ++__first)
# 607 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 608 "/usr/include/c++/5/bits/vector.tcc" 3
__pos = insert(__pos, *__first);
# 609 "/usr/include/c++/5/bits/vector.tcc" 3
++__pos;
# 610 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 611 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 613 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 614 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 617 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator
# 618 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::forward_iterator_tag)
# 619 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 620 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 621 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 622 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = ::std::distance(__first, __last);
# 623 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 625 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 626 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 627 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 628 "/usr/include/c++/5/bits/vector.tcc" 3
if (__elems_after > __n)
# 629 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 630 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 634 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 635 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move_backward((__position.base()), __old_finish - __n, __old_finish);
# 637 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __last, __position);
# 638 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 640 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 641 "/usr/include/c++/5/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 642 "/usr/include/c++/5/bits/vector.tcc" 3
::std::advance(__mid, __elems_after);
# 643 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 646 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += (__n - __elems_after);
# 647 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 651 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 652 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __mid, __position);
# 653 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 654 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 656 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 657 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_range_insert");
# 659 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 660 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 661 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 662 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 663 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 667 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_copy_a(__first, __last, __new_finish, _M_get_Tp_allocator());
# 671 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 675 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 676 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 677 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 678 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
# 680 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 681 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 682 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 683 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 685 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 688 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 689 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 690 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 691 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 692 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 693 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 697 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 700 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_reallocate(size_type __n)
# 701 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 702 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__n));
# 703 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 704 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(this->begin(), this->end(), __start);
# 705 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 706 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 707 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 708 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 710 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 713 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, bool __x)
# 714 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 715 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n == (0)) {
# 716 "/usr/include/c++/5/bits/vector.tcc" 3
return; }
# 717 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 718 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 719 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 721 "/usr/include/c++/5/bits/vector.tcc" 3
std::fill(__position, (__position + ((difference_type)__n)), __x);
# 722 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 723 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 725 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 726 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_fill_insert");
# 728 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 729 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 730 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 731 "/usr/include/c++/5/bits/vector.tcc" 3
std::fill(__i, (__i + ((difference_type)__n)), __x);
# 732 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), (__i + ((difference_type)__n)));
# 734 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 735 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 736 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 737 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 738 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 740 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc>
# 741 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 744 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator
# 745 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::forward_iterator_tag)
# 746 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 747 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 748 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 749 "/usr/include/c++/5/bits/vector.tcc" 3
size_type __n = ::std::distance(__first, __last);
# 750 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 751 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 752 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 755 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __last, __position);
# 756 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 757 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 759 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 760 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_insert_range");
# 762 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 763 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 764 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 765 "/usr/include/c++/5/bits/vector.tcc" 3
__i = ::std::copy(__first, __last, __i);
# 766 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), __i);
# 767 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 768 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 769 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 770 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 771 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 772 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 774 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 777 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_aux(iterator __position, bool __x)
# 778 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 779 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr()))
# 780 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 781 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish) + 1);
# 783 "/usr/include/c++/5/bits/vector.tcc" 3
(((*__position)) = __x);
# 784 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 785 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 787 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 788 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector<bool>::_M_insert_aux");
# 790 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 791 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 792 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 793 "/usr/include/c++/5/bits/vector.tcc" 3
(((*(__i++))) = __x);
# 794 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), __i);
# 795 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 796 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 797 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 798 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 799 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 801 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> typename vector< bool, _Alloc> ::iterator
# 804 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_erase(iterator __position)
# 805 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 806 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((__position + (1))) != (this->end()))) {
# 807 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy((__position + (1)), this->end(), __position); }
# 808 "/usr/include/c++/5/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 809 "/usr/include/c++/5/bits/vector.tcc" 3
return __position;
# 810 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 812 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> typename vector< bool, _Alloc> ::iterator
# 815 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_erase(iterator __first, iterator __last)
# 816 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 817 "/usr/include/c++/5/bits/vector.tcc" 3
if ((__first != __last)) {
# 818 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::copy(__last, this->end(), __first)); }
# 819 "/usr/include/c++/5/bits/vector.tcc" 3
return __first;
# 820 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 823 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> bool
# 826 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_shrink_to_fit()
# 827 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 828 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) < ((int)_S_word_bit)) {
# 829 "/usr/include/c++/5/bits/vector.tcc" 3
return false; }
# 830 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 831 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 832 "/usr/include/c++/5/bits/vector.tcc" 3
_M_reallocate(size());
# 833 "/usr/include/c++/5/bits/vector.tcc" 3
return true;
# 834 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 835 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 836 "/usr/include/c++/5/bits/vector.tcc" 3
{ return false; }
# 837 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 841 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 845 "/usr/include/c++/5/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 849 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> size_t
# 852 "/usr/include/c++/5/bits/vector.tcc" 3
hash< vector< bool, _Alloc> > ::operator()(const vector< bool, _Alloc> &__b) const noexcept
# 853 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 854 "/usr/include/c++/5/bits/vector.tcc" 3
::std::size_t __hash = (0);
# 855 "/usr/include/c++/5/bits/vector.tcc" 3
using ::std::_S_word_bit;
# 856 "/usr/include/c++/5/bits/vector.tcc" 3
using ::std::_Bit_type;
# 858 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __words = (__b.size()) / _S_word_bit;
# 859 "/usr/include/c++/5/bits/vector.tcc" 3
if (__words)
# 860 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 861 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __clength = (__words * sizeof(::std::_Bit_type));
# 862 "/usr/include/c++/5/bits/vector.tcc" 3
__hash = ::std::_Hash_impl::hash((((__b._M_impl)._M_start)._M_p), __clength);
# 863 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 865 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __extrabits = (__b.size()) % _S_word_bit;
# 866 "/usr/include/c++/5/bits/vector.tcc" 3
if (__extrabits)
# 867 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 868 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Bit_type __hiword = *(((__b._M_impl)._M_finish)._M_p);
# 869 "/usr/include/c++/5/bits/vector.tcc" 3
__hiword &= (~((~(static_cast< ::std::_Bit_type>(0))) << __extrabits));
# 871 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __clength = (((__extrabits + (8)) - (1)) / (8));
# 873 "/usr/include/c++/5/bits/vector.tcc" 3
if (__words) {
# 874 "/usr/include/c++/5/bits/vector.tcc" 3
__hash = std::_Hash_impl::hash(&__hiword, __clength, __hash); } else {
# 876 "/usr/include/c++/5/bits/vector.tcc" 3
__hash = std::_Hash_impl::hash(&__hiword, __clength); }
# 877 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 879 "/usr/include/c++/5/bits/vector.tcc" 3
return __hash;
# 880 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 883 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 40 "/usr/include/c++/5/ext/aligned_buffer.h" 3
namespace __gnu_cxx {
# 46 "/usr/include/c++/5/ext/aligned_buffer.h" 3
template< class _Tp>
# 47 "/usr/include/c++/5/ext/aligned_buffer.h" 3
struct __aligned_membuf {
# 52 "/usr/include/c++/5/ext/aligned_buffer.h" 3
struct _Tp2 { _Tp _M_t; };
# 54 "/usr/include/c++/5/ext/aligned_buffer.h" 3
alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
# 56 "/usr/include/c++/5/ext/aligned_buffer.h" 3
__aligned_membuf() = default;
# 59 "/usr/include/c++/5/ext/aligned_buffer.h" 3
__aligned_membuf(std::nullptr_t) { }
# 62 "/usr/include/c++/5/ext/aligned_buffer.h" 3
void *_M_addr() noexcept
# 63 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{ return static_cast< void *>(&(_M_storage)); }
# 66 "/usr/include/c++/5/ext/aligned_buffer.h" 3
const void *_M_addr() const noexcept
# 67 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{ return static_cast< const void *>(&(_M_storage)); }
# 70 "/usr/include/c++/5/ext/aligned_buffer.h" 3
_Tp *_M_ptr() noexcept
# 71 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{ return static_cast< _Tp *>(this->_M_addr()); }
# 74 "/usr/include/c++/5/ext/aligned_buffer.h" 3
const _Tp *_M_ptr() const noexcept
# 75 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{ return static_cast< const _Tp *>(this->_M_addr()); }
# 76 "/usr/include/c++/5/ext/aligned_buffer.h" 3
};
# 83 "/usr/include/c++/5/ext/aligned_buffer.h" 3
template< class _Tp>
# 84 "/usr/include/c++/5/ext/aligned_buffer.h" 3
struct __aligned_buffer : public std::aligned_storage< sizeof(_Tp), std::alignment_of< _Tp> ::value> {
# 89 "/usr/include/c++/5/ext/aligned_buffer.h" 3
typename ::std::aligned_storage< sizeof(_Tp), ::std::alignment_of< _Tp> ::value> ::type _M_storage;
# 91 "/usr/include/c++/5/ext/aligned_buffer.h" 3
__aligned_buffer() = default;
# 94 "/usr/include/c++/5/ext/aligned_buffer.h" 3
__aligned_buffer(::std::nullptr_t) { }
# 97 "/usr/include/c++/5/ext/aligned_buffer.h" 3
void *_M_addr() noexcept
# 98 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{
# 99 "/usr/include/c++/5/ext/aligned_buffer.h" 3
return static_cast< void *>(&(_M_storage));
# 100 "/usr/include/c++/5/ext/aligned_buffer.h" 3
}
# 103 "/usr/include/c++/5/ext/aligned_buffer.h" 3
const void *_M_addr() const noexcept
# 104 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{
# 105 "/usr/include/c++/5/ext/aligned_buffer.h" 3
return static_cast< const void *>(&(_M_storage));
# 106 "/usr/include/c++/5/ext/aligned_buffer.h" 3
}
# 109 "/usr/include/c++/5/ext/aligned_buffer.h" 3
_Tp *_M_ptr() noexcept
# 110 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{ return static_cast< _Tp *>(this->_M_addr()); }
# 113 "/usr/include/c++/5/ext/aligned_buffer.h" 3
const _Tp *_M_ptr() const noexcept
# 114 "/usr/include/c++/5/ext/aligned_buffer.h" 3
{ return static_cast< const _Tp *>(this->_M_addr()); }
# 115 "/usr/include/c++/5/ext/aligned_buffer.h" 3
};
# 117 "/usr/include/c++/5/ext/aligned_buffer.h" 3
}
# 72 "/usr/include/c++/5/bits/stl_tree.h" 3
namespace std __attribute((__visibility__("default"))) {
# 92 "/usr/include/c++/5/bits/stl_tree.h" 3
enum _Rb_tree_color { _S_red, _S_black};
# 94 "/usr/include/c++/5/bits/stl_tree.h" 3
struct _Rb_tree_node_base {
# 96 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_node_base *_Base_ptr;
# 97 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const _Rb_tree_node_base *_Const_Base_ptr;
# 99 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_color _M_color;
# 100 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_parent;
# 101 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_left;
# 102 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_right;
# 105 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Base_ptr _S_minimum(_Base_ptr __x) noexcept
# 106 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 107 "/usr/include/c++/5/bits/stl_tree.h" 3
while ((__x->_M_left) != (0)) { __x = (__x->_M_left); }
# 108 "/usr/include/c++/5/bits/stl_tree.h" 3
return __x;
# 109 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 112 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Const_Base_ptr _S_minimum(_Const_Base_ptr __x) noexcept
# 113 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 114 "/usr/include/c++/5/bits/stl_tree.h" 3
while ((__x->_M_left) != (0)) { __x = (__x->_M_left); }
# 115 "/usr/include/c++/5/bits/stl_tree.h" 3
return __x;
# 116 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 119 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Base_ptr _S_maximum(_Base_ptr __x) noexcept
# 120 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 121 "/usr/include/c++/5/bits/stl_tree.h" 3
while ((__x->_M_right) != (0)) { __x = (__x->_M_right); }
# 122 "/usr/include/c++/5/bits/stl_tree.h" 3
return __x;
# 123 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 126 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Const_Base_ptr _S_maximum(_Const_Base_ptr __x) noexcept
# 127 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 128 "/usr/include/c++/5/bits/stl_tree.h" 3
while ((__x->_M_right) != (0)) { __x = (__x->_M_right); }
# 129 "/usr/include/c++/5/bits/stl_tree.h" 3
return __x;
# 130 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 131 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 133 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Val>
# 134 "/usr/include/c++/5/bits/stl_tree.h" 3
struct _Rb_tree_node : public _Rb_tree_node_base {
# 136 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_node *_Link_type;
# 149 "/usr/include/c++/5/bits/stl_tree.h" 3
__gnu_cxx::__aligned_membuf< _Val> _M_storage;
# 152 "/usr/include/c++/5/bits/stl_tree.h" 3
_Val *_M_valptr()
# 153 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((_M_storage)._M_ptr()); }
# 156 "/usr/include/c++/5/bits/stl_tree.h" 3
const _Val *_M_valptr() const
# 157 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((_M_storage)._M_ptr()); }
# 159 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 161 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__pure__)) _Rb_tree_node_base *
# 162 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_increment(_Rb_tree_node_base * __x) throw();
# 164 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__pure__)) const _Rb_tree_node_base *
# 165 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_increment(const _Rb_tree_node_base * __x) throw();
# 167 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__pure__)) _Rb_tree_node_base *
# 168 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_decrement(_Rb_tree_node_base * __x) throw();
# 170 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__pure__)) const _Rb_tree_node_base *
# 171 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_decrement(const _Rb_tree_node_base * __x) throw();
# 173 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Tp>
# 174 "/usr/include/c++/5/bits/stl_tree.h" 3
struct _Rb_tree_iterator {
# 176 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Tp value_type;
# 177 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Tp &reference;
# 178 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Tp *pointer;
# 180 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef bidirectional_iterator_tag iterator_category;
# 181 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef ptrdiff_t difference_type;
# 183 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_iterator _Self;
# 184 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;
# 185 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_node< _Tp> *_Link_type;
# 187 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_iterator() noexcept : _M_node()
# 188 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 191 "/usr/include/c++/5/bits/stl_tree.h" 3
explicit _Rb_tree_iterator(_Base_ptr __x) noexcept : _M_node(__x)
# 192 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 195 "/usr/include/c++/5/bits/stl_tree.h" 3
reference operator*() const noexcept
# 196 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return *((static_cast< _Link_type>(_M_node))->_M_valptr()); }
# 199 "/usr/include/c++/5/bits/stl_tree.h" 3
pointer operator->() const noexcept
# 200 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((static_cast< _Link_type>(_M_node))->_M_valptr()); }
# 203 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self &operator++() noexcept
# 204 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 205 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_increment(_M_node);
# 206 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 207 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 210 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self operator++(int) noexcept
# 211 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 212 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self __tmp = *this;
# 213 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_increment(_M_node);
# 214 "/usr/include/c++/5/bits/stl_tree.h" 3
return __tmp;
# 215 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 218 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self &operator--() noexcept
# 219 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 220 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_decrement(_M_node);
# 221 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 222 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 225 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self operator--(int) noexcept
# 226 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 227 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self __tmp = *this;
# 228 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_decrement(_M_node);
# 229 "/usr/include/c++/5/bits/stl_tree.h" 3
return __tmp;
# 230 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 233 "/usr/include/c++/5/bits/stl_tree.h" 3
bool operator==(const _Self &__x) const noexcept
# 234 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (_M_node) == (__x._M_node); }
# 237 "/usr/include/c++/5/bits/stl_tree.h" 3
bool operator!=(const _Self &__x) const noexcept
# 238 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (_M_node) != (__x._M_node); }
# 240 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_node;
# 241 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 243 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Tp>
# 244 "/usr/include/c++/5/bits/stl_tree.h" 3
struct _Rb_tree_const_iterator {
# 246 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Tp value_type;
# 247 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const _Tp &reference;
# 248 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const _Tp *pointer;
# 250 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_iterator< _Tp> iterator;
# 252 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef bidirectional_iterator_tag iterator_category;
# 253 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef ptrdiff_t difference_type;
# 255 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_const_iterator _Self;
# 256 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;
# 257 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const _Rb_tree_node< _Tp> *_Link_type;
# 259 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_const_iterator() noexcept : _M_node()
# 260 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 263 "/usr/include/c++/5/bits/stl_tree.h" 3
explicit _Rb_tree_const_iterator(_Base_ptr __x) noexcept : _M_node(__x)
# 264 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 266 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_const_iterator(const iterator &__it) noexcept : _M_node(((__it._M_node)))
# 267 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 270 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator _M_const_cast() const noexcept
# 271 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((iterator)(const_cast< typename _Rb_tree_iterator< _Tp> ::_Base_ptr>(_M_node))); }
# 274 "/usr/include/c++/5/bits/stl_tree.h" 3
reference operator*() const noexcept
# 275 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return *((static_cast< _Link_type>(_M_node))->_M_valptr()); }
# 278 "/usr/include/c++/5/bits/stl_tree.h" 3
pointer operator->() const noexcept
# 279 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((static_cast< _Link_type>(_M_node))->_M_valptr()); }
# 282 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self &operator++() noexcept
# 283 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 284 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_increment(_M_node);
# 285 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 286 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 289 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self operator++(int) noexcept
# 290 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 291 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self __tmp = *this;
# 292 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_increment(_M_node);
# 293 "/usr/include/c++/5/bits/stl_tree.h" 3
return __tmp;
# 294 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 297 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self &operator--() noexcept
# 298 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 299 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_decrement(_M_node);
# 300 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 301 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 304 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self operator--(int) noexcept
# 305 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 306 "/usr/include/c++/5/bits/stl_tree.h" 3
_Self __tmp = *this;
# 307 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_node) = _Rb_tree_decrement(_M_node);
# 308 "/usr/include/c++/5/bits/stl_tree.h" 3
return __tmp;
# 309 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 312 "/usr/include/c++/5/bits/stl_tree.h" 3
bool operator==(const _Self &__x) const noexcept
# 313 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (_M_node) == (__x._M_node); }
# 316 "/usr/include/c++/5/bits/stl_tree.h" 3
bool operator!=(const _Self &__x) const noexcept
# 317 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (_M_node) != (__x._M_node); }
# 319 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_node;
# 320 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 322 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Val> inline bool
# 324 "/usr/include/c++/5/bits/stl_tree.h" 3
operator==(const _Rb_tree_iterator< _Val> &__x, const _Rb_tree_const_iterator< _Val> &
# 325 "/usr/include/c++/5/bits/stl_tree.h" 3
__y) noexcept
# 326 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (__x._M_node) == (__y._M_node); }
# 328 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Val> inline bool
# 330 "/usr/include/c++/5/bits/stl_tree.h" 3
operator!=(const _Rb_tree_iterator< _Val> &__x, const _Rb_tree_const_iterator< _Val> &
# 331 "/usr/include/c++/5/bits/stl_tree.h" 3
__y) noexcept
# 332 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (__x._M_node) != (__y._M_node); }
# 335 "/usr/include/c++/5/bits/stl_tree.h" 3
void _Rb_tree_insert_and_rebalance(const bool __insert_left, _Rb_tree_node_base * __x, _Rb_tree_node_base * __p, _Rb_tree_node_base & __header) throw();
# 341 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_node_base *_Rb_tree_rebalance_for_erase(_Rb_tree_node_base *const __z, _Rb_tree_node_base & __header) throw();
# 345 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 346 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc = allocator< _Val> >
# 347 "/usr/include/c++/5/bits/stl_tree.h" 3
class _Rb_tree {
# 350 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Rb_tree_node< _Val> > ::other _Node_allocator;
# 352 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Rb_tree_node< _Val> > ::other> _Alloc_traits;
# 355 "/usr/include/c++/5/bits/stl_tree.h" 3
protected: typedef _Rb_tree_node_base *_Base_ptr;
# 356 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const _Rb_tree_node_base *_Const_Base_ptr;
# 357 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_node< _Val> *_Link_type;
# 358 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const _Rb_tree_node< _Val> *_Const_Link_type;
# 363 "/usr/include/c++/5/bits/stl_tree.h" 3
private: struct _Reuse_or_alloc_node {
# 365 "/usr/include/c++/5/bits/stl_tree.h" 3
_Reuse_or_alloc_node(_Rb_tree &__t) : _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
# 367 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 368 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_M_root)
# 369 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 370 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_root)->_M_parent) = (0);
# 372 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((_M_nodes)->_M_left) {
# 373 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_nodes) = ((_M_nodes)->_M_left); }
# 374 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 376 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_nodes) = (0); }
# 377 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 380 "/usr/include/c++/5/bits/stl_tree.h" 3
_Reuse_or_alloc_node(const _Reuse_or_alloc_node &) = delete;
# 383 "/usr/include/c++/5/bits/stl_tree.h" 3
~_Reuse_or_alloc_node()
# 384 "/usr/include/c++/5/bits/stl_tree.h" 3
{ (_M_t)._M_erase(static_cast< _Link_type>(_M_root)); }
# 386 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> _Link_type
# 391 "/usr/include/c++/5/bits/stl_tree.h" 3
operator()(_Arg &&__arg)
# 393 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 394 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __node = static_cast< _Link_type>(_M_extract());
# 395 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__node)
# 396 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 397 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_t)._M_destroy_node(__node);
# 398 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_t)._M_construct_node(__node, std::forward< _Arg> (__arg)));
# 399 "/usr/include/c++/5/bits/stl_tree.h" 3
return __node;
# 400 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 402 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((_M_t)._M_create_node(std::forward< _Arg> (__arg)));
# 403 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 407 "/usr/include/c++/5/bits/stl_tree.h" 3
private: _Base_ptr _M_extract()
# 408 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 409 "/usr/include/c++/5/bits/stl_tree.h" 3
if (!(_M_nodes)) {
# 410 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_nodes; }
# 412 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr __node = _M_nodes;
# 413 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_nodes) = ((_M_nodes)->_M_parent);
# 414 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_M_nodes)
# 415 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 416 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_nodes)->_M_right) == __node)
# 417 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 418 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_nodes)->_M_right) = (0);
# 420 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((_M_nodes)->_M_left)
# 421 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 422 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_nodes) = ((_M_nodes)->_M_left);
# 424 "/usr/include/c++/5/bits/stl_tree.h" 3
while ((_M_nodes)->_M_right) {
# 425 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_nodes) = ((_M_nodes)->_M_right); }
# 427 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((_M_nodes)->_M_left) {
# 428 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_nodes) = ((_M_nodes)->_M_left); }
# 429 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 430 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 432 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_nodes)->_M_left) = (0); }
# 433 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 435 "/usr/include/c++/5/bits/stl_tree.h" 3
(_M_root) = (0); }
# 437 "/usr/include/c++/5/bits/stl_tree.h" 3
return __node;
# 438 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 440 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_root;
# 441 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr _M_nodes;
# 442 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree &_M_t;
# 443 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 447 "/usr/include/c++/5/bits/stl_tree.h" 3
struct _Alloc_node {
# 449 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node(_Rb_tree &__t) : _M_t(__t)
# 450 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 452 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> _Link_type
# 457 "/usr/include/c++/5/bits/stl_tree.h" 3
operator()(_Arg &&__arg) const
# 459 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((_M_t)._M_create_node(std::forward< _Arg> (__arg))); }
# 462 "/usr/include/c++/5/bits/stl_tree.h" 3
private: _Rb_tree &_M_t;
# 463 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 466 "/usr/include/c++/5/bits/stl_tree.h" 3
public: typedef _Key key_type;
# 467 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Val value_type;
# 468 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef value_type *pointer;
# 469 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const value_type *const_pointer;
# 470 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef value_type &reference;
# 471 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef const value_type &const_reference;
# 472 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef size_t size_type;
# 473 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef ptrdiff_t difference_type;
# 474 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Alloc allocator_type;
# 477 "/usr/include/c++/5/bits/stl_tree.h" 3
_Node_allocator &_M_get_Node_allocator() noexcept
# 478 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return *(static_cast< _Node_allocator *>(&(this->_M_impl))); }
# 481 "/usr/include/c++/5/bits/stl_tree.h" 3
const _Node_allocator &_M_get_Node_allocator() const noexcept
# 482 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return *(static_cast< const _Node_allocator *>(&(this->_M_impl))); }
# 485 "/usr/include/c++/5/bits/stl_tree.h" 3
allocator_type get_allocator() const noexcept
# 486 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (allocator_type)this->_M_get_Node_allocator(); }
# 490 "/usr/include/c++/5/bits/stl_tree.h" 3
protected: _Link_type _M_get_node()
# 491 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _Alloc_traits::allocate(this->_M_get_Node_allocator(), 1); }
# 494 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_put_node(_Link_type __p) noexcept
# 495 "/usr/include/c++/5/bits/stl_tree.h" 3
{ _Alloc_traits::deallocate(this->_M_get_Node_allocator(), __p, 1); }
# 522 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> void
# 524 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_construct_node(_Link_type __node, _Args &&...__args)
# 525 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 526 "/usr/include/c++/5/bits/stl_tree.h" 3
try
# 527 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 528 "/usr/include/c++/5/bits/stl_tree.h" 3
::new (__node) _Rb_tree_node< _Val> ;
# 529 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_traits::construct(this->_M_get_Node_allocator(), (__node->_M_valptr()), std::forward< _Args> (__args)...);
# 532 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 533 "/usr/include/c++/5/bits/stl_tree.h" 3
catch (...)
# 534 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 535 "/usr/include/c++/5/bits/stl_tree.h" 3
(__node->~_Rb_tree_node< _Val> ());
# 536 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_put_node(__node);
# 537 "/usr/include/c++/5/bits/stl_tree.h" 3
throw;
# 538 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 539 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 541 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> _Link_type
# 543 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_create_node(_Args &&...__args)
# 544 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 545 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __tmp = _M_get_node();
# 546 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_construct_node(__tmp, std::forward< _Args> (__args)...);
# 547 "/usr/include/c++/5/bits/stl_tree.h" 3
return __tmp;
# 548 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 551 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_destroy_node(_Link_type __p) noexcept
# 552 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 553 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_traits::destroy(this->_M_get_Node_allocator(), (__p->_M_valptr()));
# 554 "/usr/include/c++/5/bits/stl_tree.h" 3
(__p->~_Rb_tree_node< _Val> ());
# 555 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 559 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_drop_node(_Link_type __p) noexcept
# 560 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 561 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_destroy_node(__p);
# 562 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_put_node(__p);
# 563 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 565 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _NodeGen> _Link_type
# 567 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_clone_node(_Const_Link_type __x, _NodeGen &__node_gen)
# 568 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 569 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __tmp = __node_gen(*(__x->_M_valptr()));
# 570 "/usr/include/c++/5/bits/stl_tree.h" 3
(__tmp->_M_color) = (__x->_M_color);
# 571 "/usr/include/c++/5/bits/stl_tree.h" 3
(__tmp->_M_left) = 0;
# 572 "/usr/include/c++/5/bits/stl_tree.h" 3
(__tmp->_M_right) = 0;
# 573 "/usr/include/c++/5/bits/stl_tree.h" 3
return __tmp;
# 574 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 578 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key_compare, bool
# 579 "/usr/include/c++/5/bits/stl_tree.h" 3
 = __is_pod(_Key_compare)>
# 580 "/usr/include/c++/5/bits/stl_tree.h" 3
struct _Rb_tree_impl : public _Node_allocator {
# 582 "/usr/include/c++/5/bits/stl_tree.h" 3
_Key_compare _M_key_compare;
# 583 "/usr/include/c++/5/bits/stl_tree.h" 3
::std::_Rb_tree_node_base _M_header;
# 584 "/usr/include/c++/5/bits/stl_tree.h" 3
typename ::std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::size_type _M_node_count;
# 586 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_impl() : ::std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_Node_allocator(), _M_key_compare(), _M_header(), _M_node_count((0))
# 589 "/usr/include/c++/5/bits/stl_tree.h" 3
{ _M_initialize(); }
# 591 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_impl(const _Key_compare &__comp, const typename ::std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_Node_allocator &__a) : ::std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_Node_allocator(__a), _M_key_compare(__comp), _M_header(), _M_node_count((0))
# 594 "/usr/include/c++/5/bits/stl_tree.h" 3
{ _M_initialize(); }
# 597 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_impl(const _Key_compare &__comp, typename ::std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_Node_allocator &&__a) : ::std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_Node_allocator(::std::move(__a)), _M_key_compare(__comp), _M_header(), _M_node_count((0))
# 600 "/usr/include/c++/5/bits/stl_tree.h" 3
{ _M_initialize(); }
# 604 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_reset()
# 605 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 606 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_parent) = (0);
# 607 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_left) = (&(this->_M_header));
# 608 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_right) = (&(this->_M_header));
# 609 "/usr/include/c++/5/bits/stl_tree.h" 3
(this->_M_node_count) = (0);
# 610 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 614 "/usr/include/c++/5/bits/stl_tree.h" 3
private: void _M_initialize()
# 615 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 616 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_color) = _S_red;
# 617 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_parent) = (0);
# 618 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_left) = (&(this->_M_header));
# 619 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_header)._M_right) = (&(this->_M_header));
# 620 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 621 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 623 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_impl< _Compare> _M_impl;
# 627 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr &_M_root() noexcept
# 628 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((this->_M_impl)._M_header)._M_parent; }
# 631 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Base_ptr _M_root() const noexcept
# 632 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((this->_M_impl)._M_header)._M_parent; }
# 635 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr &_M_leftmost() noexcept
# 636 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((this->_M_impl)._M_header)._M_left; }
# 639 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Base_ptr _M_leftmost() const noexcept
# 640 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((this->_M_impl)._M_header)._M_left; }
# 643 "/usr/include/c++/5/bits/stl_tree.h" 3
_Base_ptr &_M_rightmost() noexcept
# 644 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((this->_M_impl)._M_header)._M_right; }
# 647 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Base_ptr _M_rightmost() const noexcept
# 648 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((this->_M_impl)._M_header)._M_right; }
# 651 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type _M_begin() noexcept
# 652 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return static_cast< _Link_type>(((this->_M_impl)._M_header)._M_parent); }
# 655 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type _M_begin() const noexcept
# 656 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 657 "/usr/include/c++/5/bits/stl_tree.h" 3
return static_cast< _Const_Link_type>(((this->_M_impl)._M_header)._M_parent);
# 659 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 662 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type _M_end() noexcept
# 663 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return reinterpret_cast< _Link_type>(&((this->_M_impl)._M_header)); }
# 666 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type _M_end() const noexcept
# 667 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return reinterpret_cast< _Const_Link_type>(&((this->_M_impl)._M_header)); }
# 670 "/usr/include/c++/5/bits/stl_tree.h" 3
static const_reference _S_value(_Const_Link_type __x)
# 671 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return *(__x->_M_valptr()); }
# 674 "/usr/include/c++/5/bits/stl_tree.h" 3
static const _Key &_S_key(_Const_Link_type __x)
# 675 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _KeyOfValue()(_S_value(__x)); }
# 678 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Link_type _S_left(_Base_ptr __x) noexcept
# 679 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return static_cast< _Link_type>(__x->_M_left); }
# 682 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Const_Link_type _S_left(_Const_Base_ptr __x) noexcept
# 683 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return static_cast< _Const_Link_type>(__x->_M_left); }
# 686 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Link_type _S_right(_Base_ptr __x) noexcept
# 687 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return static_cast< _Link_type>(__x->_M_right); }
# 690 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Const_Link_type _S_right(_Const_Base_ptr __x) noexcept
# 691 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return static_cast< _Const_Link_type>(__x->_M_right); }
# 694 "/usr/include/c++/5/bits/stl_tree.h" 3
static const_reference _S_value(_Const_Base_ptr __x)
# 695 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return *((static_cast< _Const_Link_type>(__x))->_M_valptr()); }
# 698 "/usr/include/c++/5/bits/stl_tree.h" 3
static const _Key &_S_key(_Const_Base_ptr __x)
# 699 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _KeyOfValue()(_S_value(__x)); }
# 702 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Base_ptr _S_minimum(_Base_ptr __x) noexcept
# 703 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _Rb_tree_node_base::_S_minimum(__x); }
# 706 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Const_Base_ptr _S_minimum(_Const_Base_ptr __x) noexcept
# 707 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _Rb_tree_node_base::_S_minimum(__x); }
# 710 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Base_ptr _S_maximum(_Base_ptr __x) noexcept
# 711 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _Rb_tree_node_base::_S_maximum(__x); }
# 714 "/usr/include/c++/5/bits/stl_tree.h" 3
static _Const_Base_ptr _S_maximum(_Const_Base_ptr __x) noexcept
# 715 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _Rb_tree_node_base::_S_maximum(__x); }
# 718 "/usr/include/c++/5/bits/stl_tree.h" 3
public: typedef _Rb_tree_iterator< _Val> iterator;
# 719 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef _Rb_tree_const_iterator< _Val> const_iterator;
# 721 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef std::reverse_iterator< _Rb_tree_iterator< _Val> > reverse_iterator;
# 722 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef std::reverse_iterator< _Rb_tree_const_iterator< _Val> > const_reverse_iterator;
# 726 "/usr/include/c++/5/bits/stl_tree.h" 3
private: pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _M_get_insert_unique_pos(const key_type & __k);
# 729 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _M_get_insert_equal_pos(const key_type & __k);
# 732 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _M_get_insert_hint_unique_pos(const_iterator __pos, const key_type & __k);
# 736 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _M_get_insert_hint_equal_pos(const_iterator __pos, const key_type & __k);
# 740 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg, class _NodeGen> iterator _M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg && __v, _NodeGen &);
# 745 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
# 747 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> iterator _M_insert_lower(_Base_ptr __y, _Arg && __v);
# 751 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> iterator _M_insert_equal_lower(_Arg && __x);
# 756 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
# 759 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator _M_insert_equal_lower_node(_Link_type __z);
# 775 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _NodeGen> _Link_type _M_copy(_Const_Link_type __x, _Link_type __p, _NodeGen &);
# 780 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type _M_copy(_Const_Link_type __x, _Link_type __p)
# 781 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 782 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 783 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_copy(__x, __p, __an);
# 784 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 787 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_erase(_Link_type __x);
# 790 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator _M_lower_bound(_Link_type __x, _Link_type __y, const _Key & __k);
# 794 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator _M_lower_bound(_Const_Link_type __x, _Const_Link_type __y, const _Key & __k) const;
# 798 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator _M_upper_bound(_Link_type __x, _Link_type __y, const _Key & __k);
# 802 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator _M_upper_bound(_Const_Link_type __x, _Const_Link_type __y, const _Key & __k) const;
# 807 "/usr/include/c++/5/bits/stl_tree.h" 3
public: _Rb_tree() { }
# 809 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(const _Compare &__comp, const allocator_type &
# 810 "/usr/include/c++/5/bits/stl_tree.h" 3
__a = allocator_type()) : _M_impl(__comp, (_Node_allocator)__a)
# 811 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 813 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(const _Rb_tree &__x) : _M_impl(((__x._M_impl)._M_key_compare), _Alloc_traits::_S_select_on_copy(__x._M_get_Node_allocator()))
# 816 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 817 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (0))
# 818 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 819 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = _M_copy(__x._M_begin(), this->_M_end());
# 820 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = _S_minimum(this->_M_root());
# 821 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = _S_maximum(this->_M_root());
# 822 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_node_count) = ((__x._M_impl)._M_node_count);
# 823 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 824 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 827 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(const allocator_type &__a) : _M_impl(_Compare(), (_Node_allocator)__a)
# 829 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 831 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(const _Rb_tree &__x, const allocator_type &__a) : _M_impl(((__x._M_impl)._M_key_compare), (_Node_allocator)__a)
# 833 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 834 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (nullptr))
# 835 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 836 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = _M_copy(__x._M_begin(), this->_M_end());
# 837 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = _S_minimum(this->_M_root());
# 838 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = _S_maximum(this->_M_root());
# 839 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_node_count) = ((__x._M_impl)._M_node_count);
# 840 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 841 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 843 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(_Rb_tree &&__x) : _M_impl(((__x._M_impl)._M_key_compare), __x._M_get_Node_allocator())
# 845 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 846 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (0)) {
# 847 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_move_data(__x, true_type()); }
# 848 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(_Rb_tree &&__x, const allocator_type &__a) : _Rb_tree(std::move(__x), (_Node_allocator)__a)
# 852 "/usr/include/c++/5/bits/stl_tree.h" 3
{ }
# 854 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree(_Rb_tree && __x, _Node_allocator && __a);
# 857 "/usr/include/c++/5/bits/stl_tree.h" 3
~_Rb_tree() noexcept
# 858 "/usr/include/c++/5/bits/stl_tree.h" 3
{ _M_erase(this->_M_begin()); }
# 861 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree &operator=(const _Rb_tree & __x);
# 865 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare key_comp() const
# 866 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (_M_impl)._M_key_compare; }
# 869 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator begin() noexcept
# 870 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((iterator)((((this->_M_impl)._M_header)._M_left))); }
# 873 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator begin() const noexcept
# 874 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((const_iterator)((((this->_M_impl)._M_header)._M_left))); }
# 877 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator end() noexcept
# 878 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((iterator)(&((this->_M_impl)._M_header))); }
# 881 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator end() const noexcept
# 882 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((const_iterator)(&((this->_M_impl)._M_header))); }
# 885 "/usr/include/c++/5/bits/stl_tree.h" 3
reverse_iterator rbegin() noexcept
# 886 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((reverse_iterator)(this->end())); }
# 889 "/usr/include/c++/5/bits/stl_tree.h" 3
const_reverse_iterator rbegin() const noexcept
# 890 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 893 "/usr/include/c++/5/bits/stl_tree.h" 3
reverse_iterator rend() noexcept
# 894 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 897 "/usr/include/c++/5/bits/stl_tree.h" 3
const_reverse_iterator rend() const noexcept
# 898 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 901 "/usr/include/c++/5/bits/stl_tree.h" 3
bool empty() const noexcept
# 902 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return ((_M_impl)._M_node_count) == 0; }
# 905 "/usr/include/c++/5/bits/stl_tree.h" 3
size_type size() const noexcept
# 906 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return (_M_impl)._M_node_count; }
# 909 "/usr/include/c++/5/bits/stl_tree.h" 3
size_type max_size() const noexcept
# 910 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _Alloc_traits::max_size(this->_M_get_Node_allocator()); }
# 914 "/usr/include/c++/5/bits/stl_tree.h" 3
void swap(_Rb_tree & __t) noexcept(_Alloc_traits::_S_nothrow_swap());
# 921 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> pair< _Rb_tree_iterator< _Val> , bool> _M_insert_unique(_Arg && __x);
# 925 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> iterator _M_insert_equal(_Arg && __x);
# 929 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg, class _NodeGen> iterator _M_insert_unique_(const_iterator __pos, _Arg && __x, _NodeGen &);
# 933 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> iterator
# 935 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_insert_unique_(const_iterator __pos, _Arg &&__x)
# 936 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 937 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 938 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_unique_(__pos, std::forward< _Arg> (__x), __an);
# 939 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 941 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg, class _NodeGen> iterator _M_insert_equal_(const_iterator __pos, _Arg && __x, _NodeGen &);
# 945 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> iterator
# 947 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_insert_equal_(const_iterator __pos, _Arg &&__x)
# 948 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 949 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 950 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_equal_(__pos, std::forward< _Arg> (__x), __an);
# 951 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 953 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> pair< _Rb_tree_iterator< _Val> , bool> _M_emplace_unique(_Args && ...__args);
# 957 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> iterator _M_emplace_equal(_Args && ...__args);
# 961 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> iterator _M_emplace_hint_unique(const_iterator __pos, _Args && ...__args);
# 965 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> iterator _M_emplace_hint_equal(const_iterator __pos, _Args && ...__args);
# 999 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _InputIterator> void _M_insert_unique(_InputIterator __first, _InputIterator __last);
# 1003 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _InputIterator> void _M_insert_equal(_InputIterator __first, _InputIterator __last);
# 1009 "/usr/include/c++/5/bits/stl_tree.h" 3
private: void _M_erase_aux(const_iterator __position);
# 1012 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_erase_aux(const_iterator __first, const_iterator __last);
# 1020 "/usr/include/c++/5/bits/stl_tree.h" 3
public:
# 1018 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__abi_tag__("cxx11" ))) iterator
# 1020 "/usr/include/c++/5/bits/stl_tree.h" 3
erase(const_iterator __position)
# 1021 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1022 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator __result = __position;
# 1023 "/usr/include/c++/5/bits/stl_tree.h" 3
++__result;
# 1024 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_erase_aux(__position);
# 1025 "/usr/include/c++/5/bits/stl_tree.h" 3
return (__result._M_const_cast());
# 1026 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1029 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__abi_tag__("cxx11" ))) iterator
# 1031 "/usr/include/c++/5/bits/stl_tree.h" 3
erase(iterator __position)
# 1032 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1033 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __result = __position;
# 1034 "/usr/include/c++/5/bits/stl_tree.h" 3
++__result;
# 1035 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_erase_aux(__position);
# 1036 "/usr/include/c++/5/bits/stl_tree.h" 3
return __result;
# 1037 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1048 "/usr/include/c++/5/bits/stl_tree.h" 3
size_type erase(const key_type & __x);
# 1053 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__abi_tag__("cxx11" ))) iterator
# 1055 "/usr/include/c++/5/bits/stl_tree.h" 3
erase(const_iterator __first, const_iterator __last)
# 1056 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1057 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_erase_aux(__first, __last);
# 1058 "/usr/include/c++/5/bits/stl_tree.h" 3
return (__last._M_const_cast());
# 1059 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1070 "/usr/include/c++/5/bits/stl_tree.h" 3
void erase(const key_type * __first, const key_type * __last);
# 1073 "/usr/include/c++/5/bits/stl_tree.h" 3
void clear() noexcept
# 1074 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1075 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_erase(this->_M_begin());
# 1076 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_reset());
# 1077 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1081 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator find(const key_type & __k);
# 1084 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator find(const key_type & __k) const;
# 1087 "/usr/include/c++/5/bits/stl_tree.h" 3
size_type count(const key_type & __k) const;
# 1090 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator lower_bound(const key_type &__k)
# 1091 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _M_lower_bound(this->_M_begin(), this->_M_end(), __k); }
# 1094 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator lower_bound(const key_type &__k) const
# 1095 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _M_lower_bound(this->_M_begin(), this->_M_end(), __k); }
# 1098 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator upper_bound(const key_type &__k)
# 1099 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _M_upper_bound(this->_M_begin(), this->_M_end(), __k); }
# 1102 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator upper_bound(const key_type &__k) const
# 1103 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return _M_upper_bound(this->_M_begin(), this->_M_end(), __k); }
# 1106 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_iterator< _Val> , _Rb_tree_iterator< _Val> > equal_range(const key_type & __k);
# 1109 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_const_iterator< _Val> , _Rb_tree_const_iterator< _Val> > equal_range(const key_type & __k) const;
# 1244 "/usr/include/c++/5/bits/stl_tree.h" 3
bool __rb_verify() const;
# 1248 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree &operator=(_Rb_tree &&) noexcept(_Alloc_traits::_S_nothrow_move());
# 1250 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Iterator> void _M_assign_unique(_Iterator, _Iterator);
# 1254 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Iterator> void _M_assign_equal(_Iterator, _Iterator);
# 1261 "/usr/include/c++/5/bits/stl_tree.h" 3
private: void _M_move_data(_Rb_tree &, true_type);
# 1266 "/usr/include/c++/5/bits/stl_tree.h" 3
void _M_move_data(_Rb_tree &, false_type);
# 1268 "/usr/include/c++/5/bits/stl_tree.h" 3
};
# 1270 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1271 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline bool
# 1273 "/usr/include/c++/5/bits/stl_tree.h" 3
operator==(const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1274 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1275 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1276 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((__x.size()) == (__y.size())) && std::equal((__x.begin()), (__x.end()), (__y.begin()));
# 1278 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1280 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1281 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline bool
# 1283 "/usr/include/c++/5/bits/stl_tree.h" 3
operator<(const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1284 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1285 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1286 "/usr/include/c++/5/bits/stl_tree.h" 3
return std::lexicographical_compare((__x.begin()), (__x.end()), (__y.begin()), (__y.end()));
# 1288 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1290 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1291 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline bool
# 1293 "/usr/include/c++/5/bits/stl_tree.h" 3
operator!=(const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1294 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1295 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return !(__x == __y); }
# 1297 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1298 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline bool
# 1300 "/usr/include/c++/5/bits/stl_tree.h" 3
operator>(const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1301 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1302 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return __y < __x; }
# 1304 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1305 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline bool
# 1307 "/usr/include/c++/5/bits/stl_tree.h" 3
operator<=(const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1308 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1309 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return !(__y < __x); }
# 1311 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1312 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline bool
# 1314 "/usr/include/c++/5/bits/stl_tree.h" 3
operator>=(const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, const _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1315 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1316 "/usr/include/c++/5/bits/stl_tree.h" 3
{ return !(__x < __y); }
# 1318 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1319 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> inline void
# 1321 "/usr/include/c++/5/bits/stl_tree.h" 3
swap(_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &__x, _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1322 "/usr/include/c++/5/bits/stl_tree.h" 3
__y)
# 1323 "/usr/include/c++/5/bits/stl_tree.h" 3
{ (__x.swap(__y)); }
# 1326 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1327 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1329 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_Rb_tree(_Rb_tree &&__x, _Node_allocator &&__a) : _M_impl(((__x._M_impl)._M_key_compare), std::move(__a))
# 1331 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1332 "/usr/include/c++/5/bits/stl_tree.h" 3
using __eq = integral_constant< bool, __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Rb_tree_node< _Val> > ::other> ::_S_always_equal()> ;
# 1333 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (nullptr)) {
# 1334 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_move_data(__x, __eq()); }
# 1335 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1337 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1338 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 1341 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_move_data(_Rb_tree &__x, true_type)
# 1342 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1343 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = __x._M_root();
# 1344 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = __x._M_leftmost();
# 1345 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = __x._M_rightmost();
# 1346 "/usr/include/c++/5/bits/stl_tree.h" 3
(this->_M_root()->_M_parent) = this->_M_end();
# 1348 "/usr/include/c++/5/bits/stl_tree.h" 3
__x._M_root() = (0);
# 1349 "/usr/include/c++/5/bits/stl_tree.h" 3
__x._M_leftmost() = __x._M_end();
# 1350 "/usr/include/c++/5/bits/stl_tree.h" 3
__x._M_rightmost() = __x._M_end();
# 1352 "/usr/include/c++/5/bits/stl_tree.h" 3
((this->_M_impl)._M_node_count) = ((__x._M_impl)._M_node_count);
# 1353 "/usr/include/c++/5/bits/stl_tree.h" 3
((__x._M_impl)._M_node_count) = 0;
# 1354 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1356 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1357 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 1360 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_move_data(_Rb_tree &__x, false_type)
# 1361 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1362 "/usr/include/c++/5/bits/stl_tree.h" 3
if (this->_M_get_Node_allocator() == __x._M_get_Node_allocator()) {
# 1363 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_move_data(__x, true_type()); } else
# 1365 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1366 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 1367 "/usr/include/c++/5/bits/stl_tree.h" 3
auto __lbd = [&__an](const value_type &
# 1368 "/usr/include/c++/5/bits/stl_tree.h" 3
__cval)
# 1369 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1370 "/usr/include/c++/5/bits/stl_tree.h" 3
auto &__val = const_cast< value_type &>(__cval);
# 1371 "/usr/include/c++/5/bits/stl_tree.h" 3
return (__an)(std::move_if_noexcept(__val));
# 1372 "/usr/include/c++/5/bits/stl_tree.h" 3
} ;
# 1373 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = _M_copy(__x._M_begin(), this->_M_end(), __lbd);
# 1374 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = _S_minimum(this->_M_root());
# 1375 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = _S_maximum(this->_M_root());
# 1376 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_node_count) = ((__x._M_impl)._M_node_count);
# 1377 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1378 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1380 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1381 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1384 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::operator=(_Rb_tree &&__x) noexcept(_Alloc_traits::_S_nothrow_move())
# 1386 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1387 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_key_compare) = ((__x._M_impl)._M_key_compare);
# 1388 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((_Alloc_traits::_S_propagate_on_move_assign() || _Alloc_traits::_S_always_equal()) || (this->_M_get_Node_allocator() == __x._M_get_Node_allocator()))
# 1391 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1392 "/usr/include/c++/5/bits/stl_tree.h" 3
clear();
# 1393 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (nullptr)) {
# 1394 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_move_data(__x, true_type()); }
# 1395 "/usr/include/c++/5/bits/stl_tree.h" 3
std::__alloc_on_move(this->_M_get_Node_allocator(), __x._M_get_Node_allocator());
# 1397 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 1398 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1402 "/usr/include/c++/5/bits/stl_tree.h" 3
_Reuse_or_alloc_node __roan(*this);
# 1403 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_reset());
# 1404 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (nullptr))
# 1405 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1406 "/usr/include/c++/5/bits/stl_tree.h" 3
auto __lbd = [&__roan](const value_type &
# 1407 "/usr/include/c++/5/bits/stl_tree.h" 3
__cval)
# 1408 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1409 "/usr/include/c++/5/bits/stl_tree.h" 3
auto &__val = const_cast< value_type &>(__cval);
# 1410 "/usr/include/c++/5/bits/stl_tree.h" 3
return (__roan)(std::move_if_noexcept(__val));
# 1411 "/usr/include/c++/5/bits/stl_tree.h" 3
} ;
# 1412 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = _M_copy(__x._M_begin(), this->_M_end(), __lbd);
# 1413 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = _S_minimum(this->_M_root());
# 1414 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = _S_maximum(this->_M_root());
# 1415 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_node_count) = ((__x._M_impl)._M_node_count);
# 1416 "/usr/include/c++/5/bits/stl_tree.h" 3
__x.clear();
# 1417 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1418 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 1419 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1421 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1422 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1423 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Iterator> void
# 1426 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_assign_unique(_Iterator __first, _Iterator __last)
# 1427 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1428 "/usr/include/c++/5/bits/stl_tree.h" 3
_Reuse_or_alloc_node __roan(*this);
# 1429 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_reset());
# 1430 "/usr/include/c++/5/bits/stl_tree.h" 3
for (; __first != __last; ++__first) {
# 1431 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_insert_unique_(this->end(), *__first, __roan); }
# 1432 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1434 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1435 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1436 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Iterator> void
# 1439 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_assign_equal(_Iterator __first, _Iterator __last)
# 1440 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1441 "/usr/include/c++/5/bits/stl_tree.h" 3
_Reuse_or_alloc_node __roan(*this);
# 1442 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_reset());
# 1443 "/usr/include/c++/5/bits/stl_tree.h" 3
for (; __first != __last; ++__first) {
# 1444 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_insert_equal_(this->end(), *__first, __roan); }
# 1445 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1448 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1449 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> &
# 1452 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::operator=(const _Rb_tree &__x)
# 1453 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1454 "/usr/include/c++/5/bits/stl_tree.h" 3
if (this != (&__x))
# 1455 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1458 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_Alloc_traits::_S_propagate_on_copy_assign())
# 1459 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1460 "/usr/include/c++/5/bits/stl_tree.h" 3
auto &__this_alloc = this->_M_get_Node_allocator();
# 1461 "/usr/include/c++/5/bits/stl_tree.h" 3
auto &__that_alloc = __x._M_get_Node_allocator();
# 1462 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((!_Alloc_traits::_S_always_equal()) && (__this_alloc != __that_alloc))
# 1464 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1467 "/usr/include/c++/5/bits/stl_tree.h" 3
clear();
# 1468 "/usr/include/c++/5/bits/stl_tree.h" 3
std::__alloc_on_copy(__this_alloc, __that_alloc);
# 1469 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1470 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1473 "/usr/include/c++/5/bits/stl_tree.h" 3
_Reuse_or_alloc_node __roan(*this);
# 1474 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_reset());
# 1475 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_key_compare) = ((__x._M_impl)._M_key_compare);
# 1476 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x._M_root() != (0))
# 1477 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1478 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = _M_copy(__x._M_begin(), this->_M_end(), __roan);
# 1479 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = _S_minimum(this->_M_root());
# 1480 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = _S_maximum(this->_M_root());
# 1481 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_node_count) = ((__x._M_impl)._M_node_count);
# 1482 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1483 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1485 "/usr/include/c++/5/bits/stl_tree.h" 3
return *this;
# 1486 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1488 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1489 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1491 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg, class _NodeGen> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1497 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_(_Base_ptr __x, _Base_ptr __p, _Arg &&
# 1499 "/usr/include/c++/5/bits/stl_tree.h" 3
__v, _NodeGen &
# 1503 "/usr/include/c++/5/bits/stl_tree.h" 3
__node_gen)
# 1504 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1505 "/usr/include/c++/5/bits/stl_tree.h" 3
bool __insert_left = ((__x != (0)) || (__p == this->_M_end())) || ((_M_impl)._M_key_compare(_KeyOfValue()(__v), _S_key(__p)));
# 1509 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __z = __node_gen(std::forward< _Arg> (__v));
# 1511 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_insert_and_rebalance(__insert_left, __z, __p, ((this->_M_impl)._M_header));
# 1513 "/usr/include/c++/5/bits/stl_tree.h" 3
++((_M_impl)._M_node_count);
# 1514 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(__z));
# 1515 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1517 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1518 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1520 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1525 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_lower(_Base_ptr __p, _Arg &&__v)
# 1529 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1530 "/usr/include/c++/5/bits/stl_tree.h" 3
bool __insert_left = (__p == this->_M_end()) || (!((_M_impl)._M_key_compare(_S_key(__p), _KeyOfValue()(__v))));
# 1534 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __z = _M_create_node(std::forward< _Arg> (__v));
# 1536 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_insert_and_rebalance(__insert_left, __z, __p, ((this->_M_impl)._M_header));
# 1538 "/usr/include/c++/5/bits/stl_tree.h" 3
++((_M_impl)._M_node_count);
# 1539 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(__z));
# 1540 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1542 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1543 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1545 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1550 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_equal_lower(_Arg &&__v)
# 1554 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1555 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __x = this->_M_begin();
# 1556 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = this->_M_end();
# 1557 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1558 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1559 "/usr/include/c++/5/bits/stl_tree.h" 3
__y = __x;
# 1560 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = ((!((_M_impl)._M_key_compare(_S_key(__x), _KeyOfValue()(__v)))) ? _S_left(__x) : _S_right(__x));
# 1562 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1563 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_lower(__y, std::forward< _Arg> (__v));
# 1564 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1566 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KoV, class
# 1567 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1568 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _NodeGen> typename _Rb_tree< _Key, _Val, _KoV, _Compare, _Alloc> ::_Link_type
# 1571 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KoV, _Compare, _Alloc> ::_M_copy(_Const_Link_type __x, _Link_type __p, _NodeGen &__node_gen)
# 1572 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1574 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __top = _M_clone_node(__x, __node_gen);
# 1575 "/usr/include/c++/5/bits/stl_tree.h" 3
(__top->_M_parent) = __p;
# 1577 "/usr/include/c++/5/bits/stl_tree.h" 3
try
# 1578 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1579 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x->_M_right) {
# 1580 "/usr/include/c++/5/bits/stl_tree.h" 3
(__top->_M_right) = _M_copy(_S_right(__x), __top, __node_gen); }
# 1581 "/usr/include/c++/5/bits/stl_tree.h" 3
__p = __top;
# 1582 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_left(__x);
# 1584 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1585 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1586 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = _M_clone_node(__x, __node_gen);
# 1587 "/usr/include/c++/5/bits/stl_tree.h" 3
(__p->_M_left) = __y;
# 1588 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y->_M_parent) = __p;
# 1589 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__x->_M_right) {
# 1590 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y->_M_right) = _M_copy(_S_right(__x), __y, __node_gen); }
# 1591 "/usr/include/c++/5/bits/stl_tree.h" 3
__p = __y;
# 1592 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_left(__x);
# 1593 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1594 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1595 "/usr/include/c++/5/bits/stl_tree.h" 3
catch (...)
# 1596 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1597 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_erase(__top);
# 1598 "/usr/include/c++/5/bits/stl_tree.h" 3
throw;
# 1599 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1600 "/usr/include/c++/5/bits/stl_tree.h" 3
return __top;
# 1601 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1603 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1604 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 1607 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_erase(_Link_type __x)
# 1608 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1610 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1611 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1612 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_erase(_S_right(__x));
# 1613 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = _S_left(__x);
# 1614 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__x);
# 1615 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = __y;
# 1616 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1617 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1619 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1620 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1624 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_lower_bound(_Link_type __x, _Link_type __y, const _Key &
# 1625 "/usr/include/c++/5/bits/stl_tree.h" 3
__k)
# 1626 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1627 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0) {
# 1628 "/usr/include/c++/5/bits/stl_tree.h" 3
if (!((_M_impl)._M_key_compare(_S_key(__x), __k))) {
# 1629 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x)); } else {
# 1631 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_right(__x); } }
# 1632 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(__y));
# 1633 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1635 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1636 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::const_iterator
# 1640 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_lower_bound(_Const_Link_type __x, _Const_Link_type __y, const _Key &
# 1641 "/usr/include/c++/5/bits/stl_tree.h" 3
__k) const
# 1642 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1643 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0) {
# 1644 "/usr/include/c++/5/bits/stl_tree.h" 3
if (!((_M_impl)._M_key_compare(_S_key(__x), __k))) {
# 1645 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x)); } else {
# 1647 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_right(__x); } }
# 1648 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((const_iterator)(__y));
# 1649 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1651 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1652 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1656 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_upper_bound(_Link_type __x, _Link_type __y, const _Key &
# 1657 "/usr/include/c++/5/bits/stl_tree.h" 3
__k)
# 1658 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1659 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0) {
# 1660 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(__k, _S_key(__x)))) {
# 1661 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x)); } else {
# 1663 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_right(__x); } }
# 1664 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(__y));
# 1665 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1667 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1668 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::const_iterator
# 1672 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_upper_bound(_Const_Link_type __x, _Const_Link_type __y, const _Key &
# 1673 "/usr/include/c++/5/bits/stl_tree.h" 3
__k) const
# 1674 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1675 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0) {
# 1676 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(__k, _S_key(__x)))) {
# 1677 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x)); } else {
# 1679 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_right(__x); } }
# 1680 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((const_iterator)(__y));
# 1681 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1683 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1684 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> pair< _Rb_tree_iterator< _Val> , _Rb_tree_iterator< _Val> >
# 1690 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::equal_range(const _Key &__k)
# 1691 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1692 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __x = this->_M_begin();
# 1693 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = this->_M_end();
# 1694 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1695 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1696 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(_S_key(__x), __k))) {
# 1697 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_right(__x); } else {
# 1698 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(__k, _S_key(__x)))) {
# 1699 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x)); } else
# 1701 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1702 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __xu(__x), __yu(__y);
# 1703 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x));
# 1704 "/usr/include/c++/5/bits/stl_tree.h" 3
__xu = _S_right(__xu);
# 1705 "/usr/include/c++/5/bits/stl_tree.h" 3
return pair< _Rb_tree_iterator< _Val> , _Rb_tree_iterator< _Val> > (_M_lower_bound(__x, __y, __k), _M_upper_bound(__xu, __yu, __k));
# 1708 "/usr/include/c++/5/bits/stl_tree.h" 3
} }
# 1709 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1710 "/usr/include/c++/5/bits/stl_tree.h" 3
return pair< _Rb_tree_iterator< _Val> , _Rb_tree_iterator< _Val> > (((iterator)(__y)), ((iterator)(__y)));
# 1712 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1714 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1715 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> pair< _Rb_tree_const_iterator< _Val> , _Rb_tree_const_iterator< _Val> >
# 1721 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::equal_range(const _Key &__k) const
# 1722 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1723 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type __x = this->_M_begin();
# 1724 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type __y = this->_M_end();
# 1725 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1726 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1727 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(_S_key(__x), __k))) {
# 1728 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = _S_right(__x); } else {
# 1729 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(__k, _S_key(__x)))) {
# 1730 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x)); } else
# 1732 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1733 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type __xu(__x), __yu(__y);
# 1734 "/usr/include/c++/5/bits/stl_tree.h" 3
(__y = __x), (__x = _S_left(__x));
# 1735 "/usr/include/c++/5/bits/stl_tree.h" 3
__xu = _S_right(__xu);
# 1736 "/usr/include/c++/5/bits/stl_tree.h" 3
return pair< _Rb_tree_const_iterator< _Val> , _Rb_tree_const_iterator< _Val> > (_M_lower_bound(__x, __y, __k), _M_upper_bound(__xu, __yu, __k));
# 1739 "/usr/include/c++/5/bits/stl_tree.h" 3
} }
# 1740 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1741 "/usr/include/c++/5/bits/stl_tree.h" 3
return pair< _Rb_tree_const_iterator< _Val> , _Rb_tree_const_iterator< _Val> > (((const_iterator)(__y)), ((const_iterator)(__y)));
# 1743 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1745 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1746 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 1749 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::swap(_Rb_tree &__t) noexcept(_Alloc_traits::_S_nothrow_swap())
# 1753 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1754 "/usr/include/c++/5/bits/stl_tree.h" 3
if (this->_M_root() == (0))
# 1755 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1756 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__t._M_root() != (0))
# 1757 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1758 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_root() = __t._M_root();
# 1759 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_leftmost() = __t._M_leftmost();
# 1760 "/usr/include/c++/5/bits/stl_tree.h" 3
this->_M_rightmost() = __t._M_rightmost();
# 1761 "/usr/include/c++/5/bits/stl_tree.h" 3
(this->_M_root()->_M_parent) = this->_M_end();
# 1762 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_node_count) = ((__t._M_impl)._M_node_count);
# 1764 "/usr/include/c++/5/bits/stl_tree.h" 3
((__t._M_impl)._M_reset());
# 1765 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1766 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 1767 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__t._M_root() == (0))
# 1768 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1769 "/usr/include/c++/5/bits/stl_tree.h" 3
__t._M_root() = this->_M_root();
# 1770 "/usr/include/c++/5/bits/stl_tree.h" 3
__t._M_leftmost() = this->_M_leftmost();
# 1771 "/usr/include/c++/5/bits/stl_tree.h" 3
__t._M_rightmost() = this->_M_rightmost();
# 1772 "/usr/include/c++/5/bits/stl_tree.h" 3
(__t._M_root()->_M_parent) = __t._M_end();
# 1773 "/usr/include/c++/5/bits/stl_tree.h" 3
((__t._M_impl)._M_node_count) = ((_M_impl)._M_node_count);
# 1775 "/usr/include/c++/5/bits/stl_tree.h" 3
((_M_impl)._M_reset());
# 1776 "/usr/include/c++/5/bits/stl_tree.h" 3
} else
# 1778 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1779 "/usr/include/c++/5/bits/stl_tree.h" 3
std::swap(this->_M_root(), __t._M_root());
# 1780 "/usr/include/c++/5/bits/stl_tree.h" 3
std::swap(this->_M_leftmost(), __t._M_leftmost());
# 1781 "/usr/include/c++/5/bits/stl_tree.h" 3
std::swap(this->_M_rightmost(), __t._M_rightmost());
# 1783 "/usr/include/c++/5/bits/stl_tree.h" 3
(this->_M_root()->_M_parent) = this->_M_end();
# 1784 "/usr/include/c++/5/bits/stl_tree.h" 3
(__t._M_root()->_M_parent) = __t._M_end();
# 1785 "/usr/include/c++/5/bits/stl_tree.h" 3
std::swap(((this->_M_impl)._M_node_count), ((__t._M_impl)._M_node_count));
# 1786 "/usr/include/c++/5/bits/stl_tree.h" 3
} }
# 1788 "/usr/include/c++/5/bits/stl_tree.h" 3
std::swap(((this->_M_impl)._M_key_compare), ((__t._M_impl)._M_key_compare));
# 1790 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_traits::_S_on_swap(this->_M_get_Node_allocator(), __t._M_get_Node_allocator());
# 1792 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1794 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1795 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> pair< _Rb_tree_node_base *, _Rb_tree_node_base *>
# 1801 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_get_insert_unique_pos(const key_type &__k)
# 1802 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1803 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _Res;
# 1804 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __x = this->_M_begin();
# 1805 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = this->_M_end();
# 1806 "/usr/include/c++/5/bits/stl_tree.h" 3
bool __comp = true;
# 1807 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1808 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1809 "/usr/include/c++/5/bits/stl_tree.h" 3
__y = __x;
# 1810 "/usr/include/c++/5/bits/stl_tree.h" 3
__comp = ((_M_impl)._M_key_compare(__k, _S_key(__x)));
# 1811 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = (__comp ? _S_left(__x) : _S_right(__x));
# 1812 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1813 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __j = ((iterator)(__y));
# 1814 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__comp)
# 1815 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1816 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__j == this->begin()) {
# 1817 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(__x, __y); } else {
# 1819 "/usr/include/c++/5/bits/stl_tree.h" 3
--__j; }
# 1820 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1821 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(_S_key((__j._M_node)), __k))) {
# 1822 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(__x, __y); }
# 1823 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res((__j._M_node), 0);
# 1824 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1826 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1827 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> pair< _Rb_tree_node_base *, _Rb_tree_node_base *>
# 1833 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_get_insert_equal_pos(const key_type &__k)
# 1834 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1835 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _Res;
# 1836 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __x = this->_M_begin();
# 1837 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = this->_M_end();
# 1838 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 1839 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1840 "/usr/include/c++/5/bits/stl_tree.h" 3
__y = __x;
# 1841 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = ((((_M_impl)._M_key_compare(__k, _S_key(__x)))) ? _S_left(__x) : _S_right(__x));
# 1843 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1844 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(__x, __y);
# 1845 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1847 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1848 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1850 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> pair< _Rb_tree_iterator< _Val> , bool>
# 1856 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_unique(_Arg &&__v)
# 1860 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1861 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef pair< _Rb_tree_iterator< _Val> , bool> _Res;
# 1862 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> __res = _M_get_insert_unique_pos(_KeyOfValue()(__v));
# 1865 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__res.second)
# 1866 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1867 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 1868 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(_M_insert_(__res.first, __res.second, std::forward< _Arg> (__v), __an), true);
# 1871 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1873 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(((iterator)(static_cast< _Link_type>(__res.first))), false);
# 1874 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1876 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1877 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1879 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1884 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_equal(_Arg &&__v)
# 1888 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1889 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> __res = _M_get_insert_equal_pos(_KeyOfValue()(__v));
# 1891 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 1892 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_(__res.first, __res.second, std::forward< _Arg> (__v), __an);
# 1894 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1896 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1897 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> pair< _Rb_tree_node_base *, _Rb_tree_node_base *>
# 1903 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_get_insert_hint_unique_pos(const_iterator __position, const key_type &
# 1904 "/usr/include/c++/5/bits/stl_tree.h" 3
__k)
# 1905 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1906 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __pos = (__position._M_const_cast());
# 1907 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _Res;
# 1910 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__pos._M_node) == this->_M_end())
# 1911 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1912 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((size() > 0) && ((_M_impl)._M_key_compare(_S_key(this->_M_rightmost()), __k))) {
# 1914 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, this->_M_rightmost()); } else {
# 1916 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_get_insert_unique_pos(__k); }
# 1917 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 1918 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(__k, _S_key((__pos._M_node)))))
# 1919 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1921 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __before = __pos;
# 1922 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__pos._M_node) == this->_M_leftmost()) {
# 1923 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(this->_M_leftmost(), this->_M_leftmost()); } else {
# 1924 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(_S_key(((--__before)._M_node)), __k)))
# 1925 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1926 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_S_right((__before._M_node)) == 0) {
# 1927 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, (__before._M_node)); } else {
# 1929 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res((__pos._M_node), (__pos._M_node)); }
# 1930 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 1932 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_get_insert_unique_pos(__k); } }
# 1933 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 1934 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(_S_key((__pos._M_node)), __k)))
# 1935 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1937 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __after = __pos;
# 1938 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__pos._M_node) == this->_M_rightmost()) {
# 1939 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, this->_M_rightmost()); } else {
# 1940 "/usr/include/c++/5/bits/stl_tree.h" 3
if (((_M_impl)._M_key_compare(__k, _S_key(((++__after)._M_node)))))
# 1941 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1942 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_S_right((__pos._M_node)) == 0) {
# 1943 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, (__pos._M_node)); } else {
# 1945 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res((__after._M_node), (__after._M_node)); }
# 1946 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 1948 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_get_insert_unique_pos(__k); } }
# 1949 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 1952 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res((__pos._M_node), 0); } } }
# 1953 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1955 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1956 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 1958 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg, class _NodeGen> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 1964 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_unique_(const_iterator __position, _Arg &&
# 1966 "/usr/include/c++/5/bits/stl_tree.h" 3
__v, _NodeGen &
# 1970 "/usr/include/c++/5/bits/stl_tree.h" 3
__node_gen)
# 1971 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1972 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> __res = _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
# 1975 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__res.second) {
# 1976 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_(__res.first, __res.second, std::forward< _Arg> (__v), __node_gen); }
# 1979 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(static_cast< _Link_type>(__res.first)));
# 1980 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 1982 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 1983 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> pair< _Rb_tree_node_base *, _Rb_tree_node_base *>
# 1989 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_get_insert_hint_equal_pos(const_iterator __position, const key_type &__k)
# 1990 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1991 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __pos = (__position._M_const_cast());
# 1992 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef pair< _Rb_tree_node_base *, _Rb_tree_node_base *> _Res;
# 1995 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__pos._M_node) == this->_M_end())
# 1996 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 1997 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((size() > 0) && (!((_M_impl)._M_key_compare(__k, _S_key(this->_M_rightmost()))))) {
# 1999 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, this->_M_rightmost()); } else {
# 2001 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_get_insert_equal_pos(__k); }
# 2002 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 2003 "/usr/include/c++/5/bits/stl_tree.h" 3
if (!((_M_impl)._M_key_compare(_S_key((__pos._M_node)), __k)))
# 2004 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2006 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __before = __pos;
# 2007 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__pos._M_node) == this->_M_leftmost()) {
# 2008 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(this->_M_leftmost(), this->_M_leftmost()); } else {
# 2009 "/usr/include/c++/5/bits/stl_tree.h" 3
if (!((_M_impl)._M_key_compare(__k, _S_key(((--__before)._M_node)))))
# 2010 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2011 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_S_right((__before._M_node)) == 0) {
# 2012 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, (__before._M_node)); } else {
# 2014 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res((__pos._M_node), (__pos._M_node)); }
# 2015 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 2017 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_get_insert_equal_pos(__k); } }
# 2018 "/usr/include/c++/5/bits/stl_tree.h" 3
} else
# 2020 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2022 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __after = __pos;
# 2023 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__pos._M_node) == this->_M_rightmost()) {
# 2024 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, this->_M_rightmost()); } else {
# 2025 "/usr/include/c++/5/bits/stl_tree.h" 3
if (!((_M_impl)._M_key_compare(_S_key(((++__after)._M_node)), __k)))
# 2026 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2027 "/usr/include/c++/5/bits/stl_tree.h" 3
if (_S_right((__pos._M_node)) == 0) {
# 2028 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, (__pos._M_node)); } else {
# 2030 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res((__after._M_node), (__after._M_node)); }
# 2031 "/usr/include/c++/5/bits/stl_tree.h" 3
} else {
# 2033 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(0, 0); } }
# 2034 "/usr/include/c++/5/bits/stl_tree.h" 3
} }
# 2035 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2037 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2038 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 2040 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Arg, class _NodeGen> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2046 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_equal_(const_iterator __position, _Arg &&
# 2048 "/usr/include/c++/5/bits/stl_tree.h" 3
__v, _NodeGen &
# 2052 "/usr/include/c++/5/bits/stl_tree.h" 3
__node_gen)
# 2053 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2054 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_node_base *, _Rb_tree_node_base *> __res = _M_get_insert_hint_equal_pos(__position, _KeyOfValue()(__v));
# 2057 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__res.second) {
# 2058 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_(__res.first, __res.second, std::forward< _Arg> (__v), __node_gen); }
# 2062 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_equal_lower(std::forward< _Arg> (__v));
# 2063 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2066 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2067 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2070 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
# 2071 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2072 "/usr/include/c++/5/bits/stl_tree.h" 3
bool __insert_left = ((__x != (0)) || (__p == this->_M_end())) || ((_M_impl)._M_key_compare(_S_key(__z), _S_key(__p)));
# 2076 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_insert_and_rebalance(__insert_left, __z, __p, ((this->_M_impl)._M_header));
# 2078 "/usr/include/c++/5/bits/stl_tree.h" 3
++((_M_impl)._M_node_count);
# 2079 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(__z));
# 2080 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2082 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2083 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2086 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_lower_node(_Base_ptr __p, _Link_type __z)
# 2087 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2088 "/usr/include/c++/5/bits/stl_tree.h" 3
bool __insert_left = (__p == this->_M_end()) || (!((_M_impl)._M_key_compare(_S_key(__p), _S_key(__z))));
# 2092 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_insert_and_rebalance(__insert_left, __z, __p, ((this->_M_impl)._M_header));
# 2094 "/usr/include/c++/5/bits/stl_tree.h" 3
++((_M_impl)._M_node_count);
# 2095 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(__z));
# 2096 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2098 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2099 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2102 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_insert_equal_lower_node(_Link_type __z)
# 2103 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2104 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __x = this->_M_begin();
# 2105 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = this->_M_end();
# 2106 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__x != 0)
# 2107 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2108 "/usr/include/c++/5/bits/stl_tree.h" 3
__y = __x;
# 2109 "/usr/include/c++/5/bits/stl_tree.h" 3
__x = ((!((_M_impl)._M_key_compare(_S_key(__x), _S_key(__z)))) ? _S_left(__x) : _S_right(__x));
# 2111 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2112 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_lower_node(__y, __z);
# 2113 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2115 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2116 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 2117 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> pair< _Rb_tree_iterator< _Val> , bool>
# 2121 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_emplace_unique(_Args &&...__args)
# 2122 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2123 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __z = _M_create_node(std::forward< _Args> (__args)...);
# 2125 "/usr/include/c++/5/bits/stl_tree.h" 3
try
# 2126 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2127 "/usr/include/c++/5/bits/stl_tree.h" 3
typedef pair< _Rb_tree_iterator< _Val> , bool> _Res;
# 2128 "/usr/include/c++/5/bits/stl_tree.h" 3
auto __res = _M_get_insert_unique_pos(_S_key(__z));
# 2129 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__res.second) {
# 2130 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(_M_insert_node((__res.first), (__res.second), __z), true); }
# 2132 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__z);
# 2133 "/usr/include/c++/5/bits/stl_tree.h" 3
return _Res(((iterator)(static_cast< _Link_type>(__res.first))), false);
# 2134 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2135 "/usr/include/c++/5/bits/stl_tree.h" 3
catch (...)
# 2136 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2137 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__z);
# 2138 "/usr/include/c++/5/bits/stl_tree.h" 3
throw;
# 2139 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2140 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2142 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2143 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 2144 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2147 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_emplace_equal(_Args &&...__args)
# 2148 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2149 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __z = _M_create_node(std::forward< _Args> (__args)...);
# 2151 "/usr/include/c++/5/bits/stl_tree.h" 3
try
# 2152 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2153 "/usr/include/c++/5/bits/stl_tree.h" 3
auto __res = _M_get_insert_equal_pos(_S_key(__z));
# 2154 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_node((__res.first), (__res.second), __z);
# 2155 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2156 "/usr/include/c++/5/bits/stl_tree.h" 3
catch (...)
# 2157 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2158 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__z);
# 2159 "/usr/include/c++/5/bits/stl_tree.h" 3
throw;
# 2160 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2161 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2163 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2164 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 2165 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2168 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_emplace_hint_unique(const_iterator __pos, _Args &&...__args)
# 2169 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2170 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __z = _M_create_node(std::forward< _Args> (__args)...);
# 2172 "/usr/include/c++/5/bits/stl_tree.h" 3
try
# 2173 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2174 "/usr/include/c++/5/bits/stl_tree.h" 3
auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
# 2176 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__res.second) {
# 2177 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_node((__res.first), (__res.second), __z); }
# 2179 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__z);
# 2180 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((iterator)(static_cast< _Link_type>(__res.first)));
# 2181 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2182 "/usr/include/c++/5/bits/stl_tree.h" 3
catch (...)
# 2183 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2184 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__z);
# 2185 "/usr/include/c++/5/bits/stl_tree.h" 3
throw;
# 2186 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2187 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2189 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2190 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc>
# 2191 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class ..._Args> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2194 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_emplace_hint_equal(const_iterator __pos, _Args &&...__args)
# 2195 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2196 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __z = _M_create_node(std::forward< _Args> (__args)...);
# 2198 "/usr/include/c++/5/bits/stl_tree.h" 3
try
# 2199 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2200 "/usr/include/c++/5/bits/stl_tree.h" 3
auto __res = _M_get_insert_hint_equal_pos(__pos, _S_key(__z));
# 2202 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__res.second) {
# 2203 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_node((__res.first), (__res.second), __z); }
# 2205 "/usr/include/c++/5/bits/stl_tree.h" 3
return _M_insert_equal_lower_node(__z);
# 2206 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2207 "/usr/include/c++/5/bits/stl_tree.h" 3
catch (...)
# 2208 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2209 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__z);
# 2210 "/usr/include/c++/5/bits/stl_tree.h" 3
throw;
# 2211 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2212 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2215 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KoV, class
# 2216 "/usr/include/c++/5/bits/stl_tree.h" 3
_Cmp, class _Alloc>
# 2217 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _II> void
# 2220 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KoV, _Cmp, _Alloc> ::_M_insert_unique(_II __first, _II __last)
# 2221 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2222 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 2223 "/usr/include/c++/5/bits/stl_tree.h" 3
for (; __first != __last; ++__first) {
# 2224 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_insert_unique_(this->end(), *__first, __an); }
# 2225 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2227 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KoV, class
# 2228 "/usr/include/c++/5/bits/stl_tree.h" 3
_Cmp, class _Alloc>
# 2229 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _II> void
# 2232 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KoV, _Cmp, _Alloc> ::_M_insert_equal(_II __first, _II __last)
# 2233 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2234 "/usr/include/c++/5/bits/stl_tree.h" 3
_Alloc_node __an(*this);
# 2235 "/usr/include/c++/5/bits/stl_tree.h" 3
for (; __first != __last; ++__first) {
# 2236 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_insert_equal_(this->end(), *__first, __an); }
# 2237 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2239 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2240 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 2243 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_erase_aux(const_iterator __position)
# 2244 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2245 "/usr/include/c++/5/bits/stl_tree.h" 3
_Link_type __y = static_cast< _Link_type>(_Rb_tree_rebalance_for_erase(const_cast< _Base_ptr>(__position._M_node), ((this->_M_impl)._M_header)));
# 2249 "/usr/include/c++/5/bits/stl_tree.h" 3
_M_drop_node(__y);
# 2250 "/usr/include/c++/5/bits/stl_tree.h" 3
--((_M_impl)._M_node_count);
# 2251 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2253 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2254 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 2257 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::_M_erase_aux(const_iterator __first, const_iterator __last)
# 2258 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2259 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__first == this->begin()) && (__last == this->end())) {
# 2260 "/usr/include/c++/5/bits/stl_tree.h" 3
clear(); } else {
# 2262 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__first != __last) {
# 2263 "/usr/include/c++/5/bits/stl_tree.h" 3
erase(__first++); } }
# 2264 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2266 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2267 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::size_type
# 2270 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::erase(const _Key &__x)
# 2271 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2272 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_iterator< _Val> , _Rb_tree_iterator< _Val> > __p = equal_range(__x);
# 2273 "/usr/include/c++/5/bits/stl_tree.h" 3
const size_type __old_size = size();
# 2274 "/usr/include/c++/5/bits/stl_tree.h" 3
erase((__p.first), (__p.second));
# 2275 "/usr/include/c++/5/bits/stl_tree.h" 3
return __old_size - size();
# 2276 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2278 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2279 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> void
# 2282 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::erase(const _Key *__first, const _Key *__last)
# 2283 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2284 "/usr/include/c++/5/bits/stl_tree.h" 3
while (__first != __last) {
# 2285 "/usr/include/c++/5/bits/stl_tree.h" 3
erase(*(__first++)); }
# 2286 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2288 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2289 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::iterator
# 2293 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::find(const _Key &__k)
# 2294 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2295 "/usr/include/c++/5/bits/stl_tree.h" 3
iterator __j = _M_lower_bound(this->_M_begin(), this->_M_end(), __k);
# 2296 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((__j == this->end()) || ((_M_impl)._M_key_compare(__k, _S_key((__j._M_node))))) ? this->end() : __j;
# 2299 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2301 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2302 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::const_iterator
# 2306 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::find(const _Key &__k) const
# 2307 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2308 "/usr/include/c++/5/bits/stl_tree.h" 3
const_iterator __j = _M_lower_bound(this->_M_begin(), this->_M_end(), __k);
# 2309 "/usr/include/c++/5/bits/stl_tree.h" 3
return ((__j == this->end()) || ((_M_impl)._M_key_compare(__k, _S_key((__j._M_node))))) ? this->end() : __j;
# 2312 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2314 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2315 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::size_type
# 2318 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::count(const _Key &__k) const
# 2319 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2320 "/usr/include/c++/5/bits/stl_tree.h" 3
pair< _Rb_tree_const_iterator< _Val> , _Rb_tree_const_iterator< _Val> > __p = equal_range(__k);
# 2321 "/usr/include/c++/5/bits/stl_tree.h" 3
const size_type __n = std::distance((__p.first), (__p.second));
# 2322 "/usr/include/c++/5/bits/stl_tree.h" 3
return __n;
# 2323 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2325 "/usr/include/c++/5/bits/stl_tree.h" 3
__attribute((__pure__)) unsigned
# 2326 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree_black_count(const _Rb_tree_node_base * __node, const _Rb_tree_node_base * __root) throw();
# 2329 "/usr/include/c++/5/bits/stl_tree.h" 3
template< class _Key, class _Val, class _KeyOfValue, class
# 2330 "/usr/include/c++/5/bits/stl_tree.h" 3
_Compare, class _Alloc> bool
# 2332 "/usr/include/c++/5/bits/stl_tree.h" 3
_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc> ::__rb_verify() const
# 2333 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2334 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((((_M_impl)._M_node_count) == 0) || (this->begin() == this->end())) {
# 2335 "/usr/include/c++/5/bits/stl_tree.h" 3
return (((_M_impl)._M_node_count) == 0) && (this->begin() == this->end()) && ((((this->_M_impl)._M_header)._M_left) == this->_M_end()) && ((((this->_M_impl)._M_header)._M_right) == this->_M_end()); }
# 2339 "/usr/include/c++/5/bits/stl_tree.h" 3
unsigned __len = _Rb_tree_black_count(this->_M_leftmost(), this->_M_root());
# 2340 "/usr/include/c++/5/bits/stl_tree.h" 3
for (const_iterator __it = this->begin(); __it != this->end(); ++__it)
# 2341 "/usr/include/c++/5/bits/stl_tree.h" 3
{
# 2342 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type __x = static_cast< _Const_Link_type>(__it._M_node);
# 2343 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type __L = _S_left(__x);
# 2344 "/usr/include/c++/5/bits/stl_tree.h" 3
_Const_Link_type __R = _S_right(__x);
# 2346 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__x->_M_color) == _S_red) {
# 2347 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((__L && ((__L->_M_color) == _S_red)) || (__R && ((__R->_M_color) == _S_red))) {
# 2349 "/usr/include/c++/5/bits/stl_tree.h" 3
return false; } }
# 2351 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__L && ((_M_impl)._M_key_compare(_S_key(__x), _S_key(__L)))) {
# 2352 "/usr/include/c++/5/bits/stl_tree.h" 3
return false; }
# 2353 "/usr/include/c++/5/bits/stl_tree.h" 3
if (__R && ((_M_impl)._M_key_compare(_S_key(__R), _S_key(__x)))) {
# 2354 "/usr/include/c++/5/bits/stl_tree.h" 3
return false; }
# 2356 "/usr/include/c++/5/bits/stl_tree.h" 3
if ((!__L) && (!__R) && (_Rb_tree_black_count(__x, this->_M_root()) != __len)) {
# 2357 "/usr/include/c++/5/bits/stl_tree.h" 3
return false; }
# 2358 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2360 "/usr/include/c++/5/bits/stl_tree.h" 3
if (this->_M_leftmost() != _Rb_tree_node_base::_S_minimum(this->_M_root())) {
# 2361 "/usr/include/c++/5/bits/stl_tree.h" 3
return false; }
# 2362 "/usr/include/c++/5/bits/stl_tree.h" 3
if (this->_M_rightmost() != _Rb_tree_node_base::_S_maximum(this->_M_root())) {
# 2363 "/usr/include/c++/5/bits/stl_tree.h" 3
return false; }
# 2364 "/usr/include/c++/5/bits/stl_tree.h" 3
return true;
# 2365 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 2368 "/usr/include/c++/5/bits/stl_tree.h" 3
}
# 67 "/usr/include/c++/5/bits/stl_relops.h" 3
namespace std __attribute((__visibility__("default"))) {
# 69 "/usr/include/c++/5/bits/stl_relops.h" 3
namespace rel_ops {
# 85 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 87 "/usr/include/c++/5/bits/stl_relops.h" 3
operator!=(const _Tp &__x, const _Tp &__y)
# 88 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return !(__x == __y); }
# 98 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 100 "/usr/include/c++/5/bits/stl_relops.h" 3
operator>(const _Tp &__x, const _Tp &__y)
# 101 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return __y < __x; }
# 111 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 113 "/usr/include/c++/5/bits/stl_relops.h" 3
operator<=(const _Tp &__x, const _Tp &__y)
# 114 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return !(__y < __x); }
# 124 "/usr/include/c++/5/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 126 "/usr/include/c++/5/bits/stl_relops.h" 3
operator>=(const _Tp &__x, const _Tp &__y)
# 127 "/usr/include/c++/5/bits/stl_relops.h" 3
{ return !(__x < __y); }
# 130 "/usr/include/c++/5/bits/stl_relops.h" 3
}
# 132 "/usr/include/c++/5/bits/stl_relops.h" 3
}
# 77 "/usr/include/c++/5/utility" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/utility" 3
template< class _Tp> class tuple_size;
# 84 "/usr/include/c++/5/utility" 3
template< size_t _Int, class _Tp> class tuple_element;
# 90 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2>
# 91 "/usr/include/c++/5/utility" 3
struct tuple_size< pair< _Tp1, _Tp2> > : public integral_constant< unsigned long, 2UL> {
# 92 "/usr/include/c++/5/utility" 3
};
# 95 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2>
# 96 "/usr/include/c++/5/utility" 3
struct tuple_element< 0, pair< _Tp1, _Tp2> > {
# 97 "/usr/include/c++/5/utility" 3
typedef _Tp1 type; };
# 100 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2>
# 101 "/usr/include/c++/5/utility" 3
struct tuple_element< 1, pair< _Tp1, _Tp2> > {
# 102 "/usr/include/c++/5/utility" 3
typedef _Tp2 type; };
# 104 "/usr/include/c++/5/utility" 3
template< size_t _Int> struct __pair_get;
# 108 "/usr/include/c++/5/utility" 3
template<> struct __pair_get< 0UL> {
# 110 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2> static constexpr _Tp1 &
# 112 "/usr/include/c++/5/utility" 3
__get(pair< _Tp1, _Tp2> &__pair) noexcept
# 113 "/usr/include/c++/5/utility" 3
{ return __pair.first; }
# 115 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2> static constexpr _Tp1 &&
# 117 "/usr/include/c++/5/utility" 3
__move_get(pair< _Tp1, _Tp2> &&__pair) noexcept
# 118 "/usr/include/c++/5/utility" 3
{ return std::forward< _Tp1> ((__pair.first)); }
# 120 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2> static constexpr const _Tp1 &
# 122 "/usr/include/c++/5/utility" 3
__const_get(const pair< _Tp1, _Tp2> &__pair) noexcept
# 123 "/usr/include/c++/5/utility" 3
{ return __pair.first; }
# 124 "/usr/include/c++/5/utility" 3
};
# 127 "/usr/include/c++/5/utility" 3
template<> struct __pair_get< 1UL> {
# 129 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2> static constexpr _Tp2 &
# 131 "/usr/include/c++/5/utility" 3
__get(pair< _Tp1, _Tp2> &__pair) noexcept
# 132 "/usr/include/c++/5/utility" 3
{ return __pair.second; }
# 134 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2> static constexpr _Tp2 &&
# 136 "/usr/include/c++/5/utility" 3
__move_get(pair< _Tp1, _Tp2> &&__pair) noexcept
# 137 "/usr/include/c++/5/utility" 3
{ return std::forward< _Tp2> ((__pair.second)); }
# 139 "/usr/include/c++/5/utility" 3
template< class _Tp1, class _Tp2> static constexpr const _Tp2 &
# 141 "/usr/include/c++/5/utility" 3
__const_get(const pair< _Tp1, _Tp2> &__pair) noexcept
# 142 "/usr/include/c++/5/utility" 3
{ return __pair.second; }
# 143 "/usr/include/c++/5/utility" 3
};
# 145 "/usr/include/c++/5/utility" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &
# 147 "/usr/include/c++/5/utility" 3
get(pair< _Tp1, _Tp2> &__in) noexcept
# 148 "/usr/include/c++/5/utility" 3
{ return __pair_get< _Int> ::__get(__in); }
# 150 "/usr/include/c++/5/utility" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &&
# 152 "/usr/include/c++/5/utility" 3
get(pair< _Tp1, _Tp2> &&__in) noexcept
# 153 "/usr/include/c++/5/utility" 3
{ return __pair_get< _Int> ::__move_get(std::move(__in)); }
# 155 "/usr/include/c++/5/utility" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr const typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &
# 157 "/usr/include/c++/5/utility" 3
get(const pair< _Tp1, _Tp2> &__in) noexcept
# 158 "/usr/include/c++/5/utility" 3
{ return __pair_get< _Int> ::__const_get(__in); }
# 205 "/usr/include/c++/5/utility" 3
template< size_t ..._Indexes>
# 206 "/usr/include/c++/5/utility" 3
struct _Index_tuple {
# 208 "/usr/include/c++/5/utility" 3
typedef std::_Index_tuple< _Indexes..., sizeof...(_Indexes)> __next;
# 209 "/usr/include/c++/5/utility" 3
};
# 212 "/usr/include/c++/5/utility" 3
template< size_t _Num>
# 213 "/usr/include/c++/5/utility" 3
struct _Build_index_tuple {
# 215 "/usr/include/c++/5/utility" 3
typedef typename std::_Build_index_tuple< _Num - (1)> ::__type::__next __type;
# 216 "/usr/include/c++/5/utility" 3
};
# 219 "/usr/include/c++/5/utility" 3
template<> struct _Build_index_tuple< 0UL> {
# 221 "/usr/include/c++/5/utility" 3
typedef _Index_tuple< > __type;
# 222 "/usr/include/c++/5/utility" 3
};
# 268 "/usr/include/c++/5/utility" 3
}
# 41 "/usr/include/c++/5/stdexcept" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/stdexcept" 3
struct __cow_string {
# 50 "/usr/include/c++/5/stdexcept" 3
union {
# 51 "/usr/include/c++/5/stdexcept" 3
const char *_M_p;
# 52 "/usr/include/c++/5/stdexcept" 3
char _M_bytes[sizeof(const char *)];
# 53 "/usr/include/c++/5/stdexcept" 3
};
# 55 "/usr/include/c++/5/stdexcept" 3
__cow_string();
# 56 "/usr/include/c++/5/stdexcept" 3
__cow_string(const __cxx11::string &);
# 57 "/usr/include/c++/5/stdexcept" 3
__cow_string(const char *, size_t);
# 58 "/usr/include/c++/5/stdexcept" 3
__cow_string(const __cow_string &) noexcept;
# 59 "/usr/include/c++/5/stdexcept" 3
__cow_string &operator=(const __cow_string &) noexcept;
# 60 "/usr/include/c++/5/stdexcept" 3
~__cow_string();
# 62 "/usr/include/c++/5/stdexcept" 3
__cow_string(__cow_string &&) noexcept;
# 63 "/usr/include/c++/5/stdexcept" 3
__cow_string &operator=(__cow_string &&) noexcept;
# 65 "/usr/include/c++/5/stdexcept" 3
};
# 67 "/usr/include/c++/5/stdexcept" 3
typedef __cxx11::basic_string< char, char_traits< char> , allocator< char> > __sso_string;
# 113 "/usr/include/c++/5/stdexcept" 3
class logic_error : public exception {
# 115 "/usr/include/c++/5/stdexcept" 3
__cow_string _M_msg;
# 120 "/usr/include/c++/5/stdexcept" 3
public: explicit logic_error(const __cxx11::string & __arg);
# 124 "/usr/include/c++/5/stdexcept" 3
explicit logic_error(const char *);
# 128 "/usr/include/c++/5/stdexcept" 3
logic_error(const logic_error &) noexcept;
# 129 "/usr/include/c++/5/stdexcept" 3
logic_error &operator=(const logic_error &) noexcept;
# 132 "/usr/include/c++/5/stdexcept" 3
virtual ~logic_error() noexcept;
# 137 "/usr/include/c++/5/stdexcept" 3
virtual const char *what() const noexcept;
# 138 "/usr/include/c++/5/stdexcept" 3
};
# 142 "/usr/include/c++/5/stdexcept" 3
class domain_error : public logic_error {
# 145 "/usr/include/c++/5/stdexcept" 3
public: explicit domain_error(const __cxx11::string & __arg);
# 147 "/usr/include/c++/5/stdexcept" 3
explicit domain_error(const char *);
# 149 "/usr/include/c++/5/stdexcept" 3
virtual ~domain_error() noexcept;
# 150 "/usr/include/c++/5/stdexcept" 3
};
# 153 "/usr/include/c++/5/stdexcept" 3
class invalid_argument : public logic_error {
# 156 "/usr/include/c++/5/stdexcept" 3
public: explicit invalid_argument(const __cxx11::string & __arg);
# 158 "/usr/include/c++/5/stdexcept" 3
explicit invalid_argument(const char *);
# 160 "/usr/include/c++/5/stdexcept" 3
virtual ~invalid_argument() noexcept;
# 161 "/usr/include/c++/5/stdexcept" 3
};
# 165 "/usr/include/c++/5/stdexcept" 3
class length_error : public logic_error {
# 168 "/usr/include/c++/5/stdexcept" 3
public: explicit length_error(const __cxx11::string & __arg);
# 170 "/usr/include/c++/5/stdexcept" 3
explicit length_error(const char *);
# 172 "/usr/include/c++/5/stdexcept" 3
virtual ~length_error() noexcept;
# 173 "/usr/include/c++/5/stdexcept" 3
};
# 177 "/usr/include/c++/5/stdexcept" 3
class out_of_range : public logic_error {
# 180 "/usr/include/c++/5/stdexcept" 3
public: explicit out_of_range(const __cxx11::string & __arg);
# 182 "/usr/include/c++/5/stdexcept" 3
explicit out_of_range(const char *);
# 184 "/usr/include/c++/5/stdexcept" 3
virtual ~out_of_range() noexcept;
# 185 "/usr/include/c++/5/stdexcept" 3
};
# 192 "/usr/include/c++/5/stdexcept" 3
class runtime_error : public exception {
# 194 "/usr/include/c++/5/stdexcept" 3
__cow_string _M_msg;
# 199 "/usr/include/c++/5/stdexcept" 3
public: explicit runtime_error(const __cxx11::string & __arg);
# 203 "/usr/include/c++/5/stdexcept" 3
explicit runtime_error(const char *);
# 207 "/usr/include/c++/5/stdexcept" 3
runtime_error(const runtime_error &) noexcept;
# 208 "/usr/include/c++/5/stdexcept" 3
runtime_error &operator=(const runtime_error &) noexcept;
# 211 "/usr/include/c++/5/stdexcept" 3
virtual ~runtime_error() noexcept;
# 216 "/usr/include/c++/5/stdexcept" 3
virtual const char *what() const noexcept;
# 217 "/usr/include/c++/5/stdexcept" 3
};
# 220 "/usr/include/c++/5/stdexcept" 3
class range_error : public runtime_error {
# 223 "/usr/include/c++/5/stdexcept" 3
public: explicit range_error(const __cxx11::string & __arg);
# 225 "/usr/include/c++/5/stdexcept" 3
explicit range_error(const char *);
# 227 "/usr/include/c++/5/stdexcept" 3
virtual ~range_error() noexcept;
# 228 "/usr/include/c++/5/stdexcept" 3
};
# 231 "/usr/include/c++/5/stdexcept" 3
class overflow_error : public runtime_error {
# 234 "/usr/include/c++/5/stdexcept" 3
public: explicit overflow_error(const __cxx11::string & __arg);
# 236 "/usr/include/c++/5/stdexcept" 3
explicit overflow_error(const char *);
# 238 "/usr/include/c++/5/stdexcept" 3
virtual ~overflow_error() noexcept;
# 239 "/usr/include/c++/5/stdexcept" 3
};
# 242 "/usr/include/c++/5/stdexcept" 3
class underflow_error : public runtime_error {
# 245 "/usr/include/c++/5/stdexcept" 3
public: explicit underflow_error(const __cxx11::string & __arg);
# 247 "/usr/include/c++/5/stdexcept" 3
explicit underflow_error(const char *);
# 249 "/usr/include/c++/5/stdexcept" 3
virtual ~underflow_error() noexcept;
# 250 "/usr/include/c++/5/stdexcept" 3
};
# 255 "/usr/include/c++/5/stdexcept" 3
}
# 42 "/usr/include/c++/5/array" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm>
# 47 "/usr/include/c++/5/array" 3
struct __array_traits {
# 49 "/usr/include/c++/5/array" 3
typedef _Tp _Type[_Nm];
# 52 "/usr/include/c++/5/array" 3
static constexpr _Tp &_S_ref(const _Type &__t, size_t __n) noexcept
# 53 "/usr/include/c++/5/array" 3
{ return const_cast< _Tp &>((__t)[__n]); }
# 56 "/usr/include/c++/5/array" 3
static constexpr _Tp *_S_ptr(const _Type &__t) noexcept
# 57 "/usr/include/c++/5/array" 3
{ return const_cast< _Tp *>(__t); }
# 58 "/usr/include/c++/5/array" 3
};
# 60 "/usr/include/c++/5/array" 3
template< class _Tp>
# 61 "/usr/include/c++/5/array" 3
struct __array_traits< _Tp, 0> {
# 63 "/usr/include/c++/5/array" 3
struct _Type { };
# 66 "/usr/include/c++/5/array" 3
static constexpr _Tp &_S_ref(const _Type &, size_t) noexcept
# 67 "/usr/include/c++/5/array" 3
{ return *(static_cast< _Tp *>(nullptr)); }
# 70 "/usr/include/c++/5/array" 3
static constexpr _Tp *_S_ptr(const _Type &) noexcept
# 71 "/usr/include/c++/5/array" 3
{ return nullptr; }
# 72 "/usr/include/c++/5/array" 3
};
# 88 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm>
# 89 "/usr/include/c++/5/array" 3
struct array {
# 91 "/usr/include/c++/5/array" 3
typedef _Tp value_type;
# 92 "/usr/include/c++/5/array" 3
typedef value_type *pointer;
# 93 "/usr/include/c++/5/array" 3
typedef const value_type *const_pointer;
# 94 "/usr/include/c++/5/array" 3
typedef value_type &reference;
# 95 "/usr/include/c++/5/array" 3
typedef const value_type &const_reference;
# 96 "/usr/include/c++/5/array" 3
typedef value_type *iterator;
# 97 "/usr/include/c++/5/array" 3
typedef const value_type *const_iterator;
# 98 "/usr/include/c++/5/array" 3
typedef size_t size_type;
# 99 "/usr/include/c++/5/array" 3
typedef ptrdiff_t difference_type;
# 100 "/usr/include/c++/5/array" 3
typedef std::reverse_iterator< _Tp *> reverse_iterator;
# 101 "/usr/include/c++/5/array" 3
typedef std::reverse_iterator< const _Tp *> const_reverse_iterator;
# 104 "/usr/include/c++/5/array" 3
typedef __array_traits< _Tp, _Nm> _AT_Type;
# 105 "/usr/include/c++/5/array" 3
typename __array_traits< _Tp, _Nm> ::_Type _M_elems;
# 111 "/usr/include/c++/5/array" 3
void fill(const value_type &__u)
# 112 "/usr/include/c++/5/array" 3
{ std::fill_n(this->begin(), size(), __u); }
# 115 "/usr/include/c++/5/array" 3
void swap(array &__other) noexcept(noexcept(swap(std::declval< _Tp &> (), std::declval< _Tp &> ())))
# 117 "/usr/include/c++/5/array" 3
{ std::swap_ranges(this->begin(), this->end(), __other.begin()); }
# 121 "/usr/include/c++/5/array" 3
iterator begin() noexcept
# 122 "/usr/include/c++/5/array" 3
{ return (iterator)this->data(); }
# 125 "/usr/include/c++/5/array" 3
const_iterator begin() const noexcept
# 126 "/usr/include/c++/5/array" 3
{ return (const_iterator)this->data(); }
# 129 "/usr/include/c++/5/array" 3
iterator end() noexcept
# 130 "/usr/include/c++/5/array" 3
{ return (iterator)(this->data() + _Nm); }
# 133 "/usr/include/c++/5/array" 3
const_iterator end() const noexcept
# 134 "/usr/include/c++/5/array" 3
{ return (const_iterator)(this->data() + _Nm); }
# 137 "/usr/include/c++/5/array" 3
reverse_iterator rbegin() noexcept
# 138 "/usr/include/c++/5/array" 3
{ return ((reverse_iterator)(this->end())); }
# 141 "/usr/include/c++/5/array" 3
const_reverse_iterator rbegin() const noexcept
# 142 "/usr/include/c++/5/array" 3
{ return ((const_reverse_iterator)(this->end())); }
# 145 "/usr/include/c++/5/array" 3
reverse_iterator rend() noexcept
# 146 "/usr/include/c++/5/array" 3
{ return ((reverse_iterator)(this->begin())); }
# 149 "/usr/include/c++/5/array" 3
const_reverse_iterator rend() const noexcept
# 150 "/usr/include/c++/5/array" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 153 "/usr/include/c++/5/array" 3
const_iterator cbegin() const noexcept
# 154 "/usr/include/c++/5/array" 3
{ return (const_iterator)this->data(); }
# 157 "/usr/include/c++/5/array" 3
const_iterator cend() const noexcept
# 158 "/usr/include/c++/5/array" 3
{ return (const_iterator)(this->data() + _Nm); }
# 161 "/usr/include/c++/5/array" 3
const_reverse_iterator crbegin() const noexcept
# 162 "/usr/include/c++/5/array" 3
{ return ((const_reverse_iterator)(this->end())); }
# 165 "/usr/include/c++/5/array" 3
const_reverse_iterator crend() const noexcept
# 166 "/usr/include/c++/5/array" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 170 "/usr/include/c++/5/array" 3
constexpr size_type size() const noexcept { return _Nm; }
# 173 "/usr/include/c++/5/array" 3
constexpr size_type max_size() const noexcept { return _Nm; }
# 176 "/usr/include/c++/5/array" 3
constexpr bool empty() const noexcept { return size() == 0; }
# 180 "/usr/include/c++/5/array" 3
reference operator[](size_type __n) noexcept
# 181 "/usr/include/c++/5/array" 3
{ return _AT_Type::_S_ref(_M_elems, __n); }
# 184 "/usr/include/c++/5/array" 3
constexpr const_reference operator[](size_type __n) const noexcept
# 185 "/usr/include/c++/5/array" 3
{ return _AT_Type::_S_ref(_M_elems, __n); }
# 188 "/usr/include/c++/5/array" 3
reference at(size_type __n)
# 189 "/usr/include/c++/5/array" 3
{
# 190 "/usr/include/c++/5/array" 3
if (__n >= _Nm) {
# 191 "/usr/include/c++/5/array" 3
std::__throw_out_of_range_fmt("array::at: __n (which is %zu) >= _Nm (which is %zu)", __n, _Nm); }
# 194 "/usr/include/c++/5/array" 3
return _AT_Type::_S_ref(_M_elems, __n);
# 195 "/usr/include/c++/5/array" 3
}
# 198 "/usr/include/c++/5/array" 3
constexpr const_reference at(size_type __n) const
# 199 "/usr/include/c++/5/array" 3
{
# 202 "/usr/include/c++/5/array" 3
return (__n < _Nm) ? _AT_Type::_S_ref(_M_elems, __n) : (std::__throw_out_of_range_fmt("array::at: __n (which is %zu) >= _Nm (which is %zu)", __n, _Nm), _AT_Type::_S_ref(_M_elems, 0));
# 207 "/usr/include/c++/5/array" 3
}
# 210 "/usr/include/c++/5/array" 3
reference front() noexcept
# 211 "/usr/include/c++/5/array" 3
{ return *this->begin(); }
# 214 "/usr/include/c++/5/array" 3
constexpr const_reference front() const noexcept
# 215 "/usr/include/c++/5/array" 3
{ return _AT_Type::_S_ref(_M_elems, 0); }
# 218 "/usr/include/c++/5/array" 3
reference back() noexcept
# 219 "/usr/include/c++/5/array" 3
{ return (_Nm) ? *(this->end() - 1) : (*this->end()); }
# 222 "/usr/include/c++/5/array" 3
constexpr const_reference back() const noexcept
# 223 "/usr/include/c++/5/array" 3
{
# 224 "/usr/include/c++/5/array" 3
return (_Nm) ? _AT_Type::_S_ref(_M_elems, _Nm - (1)) : _AT_Type::_S_ref(_M_elems, 0);
# 226 "/usr/include/c++/5/array" 3
}
# 229 "/usr/include/c++/5/array" 3
pointer data() noexcept
# 230 "/usr/include/c++/5/array" 3
{ return _AT_Type::_S_ptr(_M_elems); }
# 233 "/usr/include/c++/5/array" 3
const_pointer data() const noexcept
# 234 "/usr/include/c++/5/array" 3
{ return _AT_Type::_S_ptr(_M_elems); }
# 235 "/usr/include/c++/5/array" 3
};
# 238 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline bool
# 240 "/usr/include/c++/5/array" 3
operator==(const array< _Tp, _Nm> &__one, const array< _Tp, _Nm> &__two)
# 241 "/usr/include/c++/5/array" 3
{ return std::equal((__one.begin()), (__one.end()), (__two.begin())); }
# 243 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline bool
# 245 "/usr/include/c++/5/array" 3
operator!=(const array< _Tp, _Nm> &__one, const array< _Tp, _Nm> &__two)
# 246 "/usr/include/c++/5/array" 3
{ return !(__one == __two); }
# 248 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline bool
# 250 "/usr/include/c++/5/array" 3
operator<(const array< _Tp, _Nm> &__a, const array< _Tp, _Nm> &__b)
# 251 "/usr/include/c++/5/array" 3
{
# 252 "/usr/include/c++/5/array" 3
return std::lexicographical_compare((__a.begin()), (__a.end()), (__b.begin()), (__b.end()));
# 254 "/usr/include/c++/5/array" 3
}
# 256 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline bool
# 258 "/usr/include/c++/5/array" 3
operator>(const array< _Tp, _Nm> &__one, const array< _Tp, _Nm> &__two)
# 259 "/usr/include/c++/5/array" 3
{ return __two < __one; }
# 261 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline bool
# 263 "/usr/include/c++/5/array" 3
operator<=(const array< _Tp, _Nm> &__one, const array< _Tp, _Nm> &__two)
# 264 "/usr/include/c++/5/array" 3
{ return !(__one > __two); }
# 266 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline bool
# 268 "/usr/include/c++/5/array" 3
operator>=(const array< _Tp, _Nm> &__one, const array< _Tp, _Nm> &__two)
# 269 "/usr/include/c++/5/array" 3
{ return !(__one < __two); }
# 272 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm> inline void
# 274 "/usr/include/c++/5/array" 3
swap(array< _Tp, _Nm> &__one, array< _Tp, _Nm> &__two) noexcept(noexcept((__one.swap(__two))))
# 276 "/usr/include/c++/5/array" 3
{ (__one.swap(__two)); }
# 278 "/usr/include/c++/5/array" 3
template< size_t _Int, class _Tp, size_t _Nm> constexpr _Tp &
# 280 "/usr/include/c++/5/array" 3
get(array< _Tp, _Nm> &__arr) noexcept
# 281 "/usr/include/c++/5/array" 3
{
# 282 "/usr/include/c++/5/array" 3
static_assert((_Int < _Nm), "index is out of bounds");
# 283 "/usr/include/c++/5/array" 3
return std::__array_traits< _Tp, _Nm> ::_S_ref((__arr._M_elems), _Int);
# 285 "/usr/include/c++/5/array" 3
}
# 287 "/usr/include/c++/5/array" 3
template< size_t _Int, class _Tp, size_t _Nm> constexpr _Tp &&
# 289 "/usr/include/c++/5/array" 3
get(array< _Tp, _Nm> &&__arr) noexcept
# 290 "/usr/include/c++/5/array" 3
{
# 291 "/usr/include/c++/5/array" 3
static_assert((_Int < _Nm), "index is out of bounds");
# 292 "/usr/include/c++/5/array" 3
return std::move(std::get< _Int> (__arr));
# 293 "/usr/include/c++/5/array" 3
}
# 295 "/usr/include/c++/5/array" 3
template< size_t _Int, class _Tp, size_t _Nm> constexpr const _Tp &
# 297 "/usr/include/c++/5/array" 3
get(const array< _Tp, _Nm> &__arr) noexcept
# 298 "/usr/include/c++/5/array" 3
{
# 299 "/usr/include/c++/5/array" 3
static_assert((_Int < _Nm), "index is out of bounds");
# 300 "/usr/include/c++/5/array" 3
return std::__array_traits< _Tp, _Nm> ::_S_ref((__arr._M_elems), _Int);
# 302 "/usr/include/c++/5/array" 3
}
# 305 "/usr/include/c++/5/array" 3
}
# 307 "/usr/include/c++/5/array" 3
namespace std __attribute((__visibility__("default"))) {
# 314 "/usr/include/c++/5/array" 3
template< class _Tp> class tuple_size;
# 318 "/usr/include/c++/5/array" 3
template< class _Tp, size_t _Nm>
# 319 "/usr/include/c++/5/array" 3
struct tuple_size< array< _Tp, _Nm> > : public integral_constant< unsigned long, _Nm> {
# 320 "/usr/include/c++/5/array" 3
};
# 323 "/usr/include/c++/5/array" 3
template< size_t _Int, class _Tp> class tuple_element;
# 327 "/usr/include/c++/5/array" 3
template< size_t _Int, class _Tp, size_t _Nm>
# 328 "/usr/include/c++/5/array" 3
struct tuple_element< _Int, array< _Tp, _Nm> > {
# 330 "/usr/include/c++/5/array" 3
static_assert((_Int < _Nm), "index is out of bounds");
# 331 "/usr/include/c++/5/array" 3
typedef _Tp type;
# 332 "/usr/include/c++/5/array" 3
};
# 335 "/usr/include/c++/5/array" 3
}
# 34 "/usr/include/c++/5/bits/uses_allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct allocator_arg_t { };
# 41 "/usr/include/c++/5/bits/uses_allocator.h" 3
constexpr allocator_arg_t allocator_arg = allocator_arg_t();
# 43 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc, class = __void_t< > >
# 44 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_allocator_helper : public false_type {
# 45 "/usr/include/c++/5/bits/uses_allocator.h" 3
};
# 47 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc>
# 48 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_allocator_helper< _Tp, _Alloc, __void_t< typename _Tp::allocator_type> > : public is_convertible< _Alloc, typename _Tp::allocator_type> ::type {
# 51 "/usr/include/c++/5/bits/uses_allocator.h" 3
};
# 54 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc>
# 55 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct uses_allocator : public __uses_allocator_helper< _Tp, _Alloc> ::type {
# 57 "/usr/include/c++/5/bits/uses_allocator.h" 3
};
# 59 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_alloc_base { };
# 61 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_alloc0 : public __uses_alloc_base {
# 63 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct _Sink { void operator=(const void *) { } } _M_a;
# 64 "/usr/include/c++/5/bits/uses_allocator.h" 3
};
# 66 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Alloc>
# 67 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_alloc1 : public __uses_alloc_base { const _Alloc *_M_a; };
# 69 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Alloc>
# 70 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_alloc2 : public __uses_alloc_base { const _Alloc *_M_a; };
# 72 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< bool , class _Tp, class _Alloc, class ..._Args> struct __uses_alloc;
# 75 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc, class ..._Args>
# 76 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_alloc< true, _Tp, _Alloc, _Args...> : public conditional< is_constructible< _Tp, allocator_arg_t, _Alloc, _Args...> ::value, __uses_alloc1< _Alloc> , __uses_alloc2< _Alloc> > ::type {
# 81 "/usr/include/c++/5/bits/uses_allocator.h" 3
};
# 83 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc, class ..._Args>
# 84 "/usr/include/c++/5/bits/uses_allocator.h" 3
struct __uses_alloc< false, _Tp, _Alloc, _Args...> : public __uses_alloc0 {
# 85 "/usr/include/c++/5/bits/uses_allocator.h" 3
};
# 87 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc, class ..._Args> using __uses_alloc_t = __uses_alloc< uses_allocator< _Tp, _Alloc> ::value, _Tp, _Alloc, _Args...> ;
# 91 "/usr/include/c++/5/bits/uses_allocator.h" 3
template< class _Tp, class _Alloc, class ..._Args> inline __uses_alloc_t< _Tp, _Alloc, _Args...>
# 93 "/usr/include/c++/5/bits/uses_allocator.h" 3
__use_alloc(const _Alloc &__a)
# 94 "/usr/include/c++/5/bits/uses_allocator.h" 3
{
# 95 "/usr/include/c++/5/bits/uses_allocator.h" 3
__uses_alloc_t< _Tp, _Alloc, _Args...> __ret;
# 96 "/usr/include/c++/5/bits/uses_allocator.h" 3
(__ret._M_a) = (&__a);
# 97 "/usr/include/c++/5/bits/uses_allocator.h" 3
return __ret;
# 98 "/usr/include/c++/5/bits/uses_allocator.h" 3
}
# 101 "/usr/include/c++/5/bits/uses_allocator.h" 3
}
# 42 "/usr/include/c++/5/tuple" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class _Head, bool _IsEmptyNotFinal> struct _Head_base;
# 54 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class _Head>
# 55 "/usr/include/c++/5/tuple" 3
struct _Head_base< _Idx, _Head, true> : public _Head {
# 58 "/usr/include/c++/5/tuple" 3
constexpr _Head_base() : _Head()
# 59 "/usr/include/c++/5/tuple" 3
{ }
# 61 "/usr/include/c++/5/tuple" 3
constexpr _Head_base(const _Head &__h) : _Head(__h)
# 62 "/usr/include/c++/5/tuple" 3
{ }
# 64 "/usr/include/c++/5/tuple" 3
constexpr _Head_base(const ::std::_Head_base< _Idx, _Head, true> &) = default;
# 65 "/usr/include/c++/5/tuple" 3
constexpr _Head_base(::std::_Head_base< _Idx, _Head, true> &&) = default;
# 67 "/usr/include/c++/5/tuple" 3
template< class _UHead> constexpr
# 68 "/usr/include/c++/5/tuple" 3
_Head_base(_UHead &&__h) : _Head(::std::forward< _UHead> (__h))
# 69 "/usr/include/c++/5/tuple" 3
{ }
# 71 "/usr/include/c++/5/tuple" 3
_Head_base(::std::allocator_arg_t, ::std::__uses_alloc0) : _Head()
# 72 "/usr/include/c++/5/tuple" 3
{ }
# 74 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 75 "/usr/include/c++/5/tuple" 3
_Head_base(::std::allocator_arg_t, __uses_alloc1< _Alloc> __a) : _Head(allocator_arg, *(__a._M_a))
# 76 "/usr/include/c++/5/tuple" 3
{ }
# 78 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 79 "/usr/include/c++/5/tuple" 3
_Head_base(::std::allocator_arg_t, __uses_alloc2< _Alloc> __a) : _Head(*(__a._M_a))
# 80 "/usr/include/c++/5/tuple" 3
{ }
# 82 "/usr/include/c++/5/tuple" 3
template< class _UHead>
# 83 "/usr/include/c++/5/tuple" 3
_Head_base(::std::__uses_alloc0, _UHead &&__uhead) : _Head(::std::forward< _UHead> (__uhead))
# 84 "/usr/include/c++/5/tuple" 3
{ }
# 86 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 87 "/usr/include/c++/5/tuple" 3
_Head_base(__uses_alloc1< _Alloc> __a, _UHead &&__uhead) : _Head(allocator_arg, *(__a._M_a), ::std::forward< _UHead> (__uhead))
# 88 "/usr/include/c++/5/tuple" 3
{ }
# 90 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 91 "/usr/include/c++/5/tuple" 3
_Head_base(__uses_alloc2< _Alloc> __a, _UHead &&__uhead) : _Head(::std::forward< _UHead> (__uhead), *(__a._M_a))
# 92 "/usr/include/c++/5/tuple" 3
{ }
# 95 "/usr/include/c++/5/tuple" 3
static constexpr _Head &_M_head(::std::_Head_base< _Idx, _Head, true> &__b) noexcept { return __b; }
# 98 "/usr/include/c++/5/tuple" 3
static constexpr const _Head &_M_head(const ::std::_Head_base< _Idx, _Head, true> &__b) noexcept { return __b; }
# 99 "/usr/include/c++/5/tuple" 3
};
# 101 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class _Head>
# 102 "/usr/include/c++/5/tuple" 3
struct _Head_base< _Idx, _Head, false> {
# 104 "/usr/include/c++/5/tuple" 3
constexpr _Head_base() : _M_head_impl()
# 105 "/usr/include/c++/5/tuple" 3
{ }
# 107 "/usr/include/c++/5/tuple" 3
constexpr _Head_base(const _Head &__h) : _M_head_impl(__h)
# 108 "/usr/include/c++/5/tuple" 3
{ }
# 110 "/usr/include/c++/5/tuple" 3
constexpr _Head_base(const std::_Head_base< _Idx, _Head, false> &) = default;
# 111 "/usr/include/c++/5/tuple" 3
constexpr _Head_base(std::_Head_base< _Idx, _Head, false> &&) = default;
# 113 "/usr/include/c++/5/tuple" 3
template< class _UHead> constexpr
# 114 "/usr/include/c++/5/tuple" 3
_Head_base(_UHead &&__h) : _M_head_impl(std::forward< _UHead> (__h))
# 115 "/usr/include/c++/5/tuple" 3
{ }
# 117 "/usr/include/c++/5/tuple" 3
_Head_base(allocator_arg_t, __uses_alloc0) : _M_head_impl()
# 118 "/usr/include/c++/5/tuple" 3
{ }
# 120 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 121 "/usr/include/c++/5/tuple" 3
_Head_base(allocator_arg_t, __uses_alloc1< _Alloc> __a) : _M_head_impl(allocator_arg, *(__a._M_a))
# 122 "/usr/include/c++/5/tuple" 3
{ }
# 124 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 125 "/usr/include/c++/5/tuple" 3
_Head_base(allocator_arg_t, __uses_alloc2< _Alloc> __a) : _M_head_impl(*(__a._M_a))
# 126 "/usr/include/c++/5/tuple" 3
{ }
# 128 "/usr/include/c++/5/tuple" 3
template< class _UHead>
# 129 "/usr/include/c++/5/tuple" 3
_Head_base(__uses_alloc0, _UHead &&__uhead) : _M_head_impl(std::forward< _UHead> (__uhead))
# 130 "/usr/include/c++/5/tuple" 3
{ }
# 132 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 133 "/usr/include/c++/5/tuple" 3
_Head_base(__uses_alloc1< _Alloc> __a, _UHead &&__uhead) : _M_head_impl(allocator_arg, *(__a._M_a), std::forward< _UHead> (__uhead))
# 135 "/usr/include/c++/5/tuple" 3
{ }
# 137 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 138 "/usr/include/c++/5/tuple" 3
_Head_base(__uses_alloc2< _Alloc> __a, _UHead &&__uhead) : _M_head_impl(std::forward< _UHead> (__uhead), *(__a._M_a))
# 139 "/usr/include/c++/5/tuple" 3
{ }
# 142 "/usr/include/c++/5/tuple" 3
static constexpr _Head &_M_head(std::_Head_base< _Idx, _Head, false> &__b) noexcept { return __b._M_head_impl; }
# 145 "/usr/include/c++/5/tuple" 3
static constexpr const _Head &_M_head(const std::_Head_base< _Idx, _Head, false> &__b) noexcept { return __b._M_head_impl; }
# 147 "/usr/include/c++/5/tuple" 3
_Head _M_head_impl;
# 148 "/usr/include/c++/5/tuple" 3
};
# 158 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class ..._Elements> struct _Tuple_impl;
# 161 "/usr/include/c++/5/tuple" 3
template< class _Tp>
# 162 "/usr/include/c++/5/tuple" 3
struct __is_empty_non_tuple : public is_empty< _Tp> { };
# 165 "/usr/include/c++/5/tuple" 3
template< class _El0, class ..._El>
# 166 "/usr/include/c++/5/tuple" 3
struct __is_empty_non_tuple< tuple< _El0, _El...> > : public false_type { };
# 169 "/usr/include/c++/5/tuple" 3
template< class _Tp> using __empty_not_final = typename conditional< __is_final(_Tp), integral_constant< bool, false> , __is_empty_non_tuple< _Tp> > ::type;
# 179 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class _Head, class ..._Tail>
# 180 "/usr/include/c++/5/tuple" 3
struct _Tuple_impl< _Idx, _Head, _Tail...> : public _Tuple_impl< _Idx + (1), _Tail...> , private _Head_base< _Idx, _Head, conditional< __is_final(_Head), integral_constant< bool, false> , __is_empty_non_tuple< _Head> > ::type::value> {
# 184 "/usr/include/c++/5/tuple" 3
template< ::std::size_t , class ...> friend struct _Tuple_impl;
# 186 "/usr/include/c++/5/tuple" 3
typedef ::std::_Tuple_impl< _Idx + (1), _Tail...> _Inherited;
# 187 "/usr/include/c++/5/tuple" 3
typedef _Head_base< _Idx, _Head, conditional< __is_final(_Head), ::std::integral_constant< bool, false> , __is_empty_non_tuple< _Head> > ::type::value> _Base;
# 190 "/usr/include/c++/5/tuple" 3
static constexpr _Head &_M_head(::std::_Tuple_impl< _Idx, _Head, _Tail...> &__t) noexcept { return _Base::_M_head(__t); }
# 193 "/usr/include/c++/5/tuple" 3
static constexpr const _Head &_M_head(const ::std::_Tuple_impl< _Idx, _Head, _Tail...> &__t) noexcept { return _Base::_M_head(__t); }
# 196 "/usr/include/c++/5/tuple" 3
static constexpr _Inherited &_M_tail(::std::_Tuple_impl< _Idx, _Head, _Tail...> &__t) noexcept { return __t; }
# 199 "/usr/include/c++/5/tuple" 3
static constexpr const _Inherited &_M_tail(const ::std::_Tuple_impl< _Idx, _Head, _Tail...> &__t) noexcept { return __t; }
# 201 "/usr/include/c++/5/tuple" 3
constexpr _Tuple_impl() : _Inherited(), _Base()
# 202 "/usr/include/c++/5/tuple" 3
{ }
# 205 "/usr/include/c++/5/tuple" 3
constexpr explicit _Tuple_impl(const _Head &__head, const _Tail &...__tail) : _Inherited(__tail...), _Base(__head)
# 206 "/usr/include/c++/5/tuple" 3
{ }
# 208 "/usr/include/c++/5/tuple" 3
template< class _UHead, class ..._UTail, class = typename enable_if< sizeof...(_Tail) == sizeof...(_UTail)> ::type> constexpr explicit
# 211 "/usr/include/c++/5/tuple" 3
_Tuple_impl(_UHead &&__head, _UTail &&...__tail) : _Inherited(::std::forward< _UTail> (__tail)...), _Base(::std::forward< _UHead> (__head))
# 213 "/usr/include/c++/5/tuple" 3
{ }
# 215 "/usr/include/c++/5/tuple" 3
constexpr _Tuple_impl(const ::std::_Tuple_impl< _Idx, _Head, _Tail...> &) = default;
# 218 "/usr/include/c++/5/tuple" 3
constexpr _Tuple_impl(::std::_Tuple_impl< _Idx, _Head, _Tail...> &&__in) noexcept(__and_< is_nothrow_move_constructible< _Head> , is_nothrow_move_constructible< ::std::_Tuple_impl< _Idx + (1), _Tail...> > > ::value) : _Inherited(::std::move(_M_tail(__in))), _Base(::std::forward< _Head> (_M_head(__in)))
# 222 "/usr/include/c++/5/tuple" 3
{ }
# 224 "/usr/include/c++/5/tuple" 3
template< class ..._UElements> constexpr
# 225 "/usr/include/c++/5/tuple" 3
_Tuple_impl(const ::std::_Tuple_impl< _Idx, _UElements...> &__in) : _Inherited(_Tuple_impl< _Idx, _UElements...> ::_M_tail(__in)), _Base(_Tuple_impl< _Idx, _UElements...> ::_M_head(__in))
# 227 "/usr/include/c++/5/tuple" 3
{ }
# 229 "/usr/include/c++/5/tuple" 3
template< class _UHead, class ..._UTails> constexpr
# 230 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::_Tuple_impl< _Idx, _UHead, _UTails...> &&__in) : _Inherited(::std::move(_Tuple_impl< _Idx, _UHead, _UTails...> ::_M_tail(__in))), _Base(::std::forward< _UHead> (_Tuple_impl< _Idx, _UHead, _UTails...> ::_M_head(__in)))
# 234 "/usr/include/c++/5/tuple" 3
{ }
# 236 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 237 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a) : _Inherited(__tag, __a), _Base(__tag, __use_alloc< _Head> (__a))
# 239 "/usr/include/c++/5/tuple" 3
{ }
# 241 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 242 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, const _Head &
# 243 "/usr/include/c++/5/tuple" 3
__head, const _Tail &...__tail) : _Inherited(__tag, __a, __tail...), _Base(__use_alloc< _Head, _Alloc, _Head> (__a), __head)
# 245 "/usr/include/c++/5/tuple" 3
{ }
# 247 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead, class ..._UTail, class
# 248 "/usr/include/c++/5/tuple" 3
 = typename enable_if< sizeof...(_Tail) == sizeof...(_UTail)> ::type>
# 250 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, _UHead &&
# 251 "/usr/include/c++/5/tuple" 3
__head, _UTail &&...__tail) : _Inherited(__tag, __a, ::std::forward< _UTail> (__tail)...), _Base(__use_alloc< _Head, _Alloc, _UHead> (__a), ::std::forward< _UHead> (__head))
# 254 "/usr/include/c++/5/tuple" 3
{ }
# 256 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 257 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::_Tuple_impl< _Idx, _Head, _Tail...> &
# 258 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, _M_tail(__in)), _Base(__use_alloc< _Head, _Alloc, _Head> (__a), _M_head(__in))
# 260 "/usr/include/c++/5/tuple" 3
{ }
# 262 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 263 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::_Tuple_impl< _Idx, _Head, _Tail...> &&
# 264 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, ::std::move(_M_tail(__in))), _Base(__use_alloc< _Head, _Alloc, _Head> (__a), ::std::forward< _Head> (_M_head(__in)))
# 267 "/usr/include/c++/5/tuple" 3
{ }
# 269 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class ..._UElements>
# 270 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::_Tuple_impl< _Idx, _UElements...> &
# 271 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, _Tuple_impl< _Idx, _UElements...> ::_M_tail(__in)), _Base(__use_alloc< _Head, _Alloc, _Head> (__a), _Tuple_impl< _Idx, _UElements...> ::_M_head(__in))
# 275 "/usr/include/c++/5/tuple" 3
{ }
# 277 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead, class ..._UTails>
# 278 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::_Tuple_impl< _Idx, _UHead, _UTails...> &&
# 279 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, ::std::move(_Tuple_impl< _Idx, _UHead, _UTails...> ::_M_tail(__in))), _Base(__use_alloc< _Head, _Alloc, _UHead> (__a), ::std::forward< _UHead> (_Tuple_impl< _Idx, _UHead, _UTails...> ::_M_head(__in)))
# 284 "/usr/include/c++/5/tuple" 3
{ }
# 287 "/usr/include/c++/5/tuple" 3
::std::_Tuple_impl< _Idx, _Head, _Tail...> &operator=(const ::std::_Tuple_impl< _Idx, _Head, _Tail...> &__in)
# 288 "/usr/include/c++/5/tuple" 3
{
# 289 "/usr/include/c++/5/tuple" 3
_M_head(*this) = _M_head(__in);
# 290 "/usr/include/c++/5/tuple" 3
_M_tail(*this) = _M_tail(__in);
# 291 "/usr/include/c++/5/tuple" 3
return *this;
# 292 "/usr/include/c++/5/tuple" 3
}
# 295 "/usr/include/c++/5/tuple" 3
::std::_Tuple_impl< _Idx, _Head, _Tail...> &operator=(::std::_Tuple_impl< _Idx, _Head, _Tail...> &&__in) noexcept(__and_< is_nothrow_move_assignable< _Head> , is_nothrow_move_assignable< ::std::_Tuple_impl< _Idx + (1), _Tail...> > > ::value)
# 298 "/usr/include/c++/5/tuple" 3
{
# 299 "/usr/include/c++/5/tuple" 3
_M_head(*this) = ::std::forward< _Head> (_M_head(__in));
# 300 "/usr/include/c++/5/tuple" 3
_M_tail(*this) = ::std::move(_M_tail(__in));
# 301 "/usr/include/c++/5/tuple" 3
return *this;
# 302 "/usr/include/c++/5/tuple" 3
}
# 304 "/usr/include/c++/5/tuple" 3
template< class ..._UElements> ::std::_Tuple_impl< _Idx, _Head, _Tail...> &
# 306 "/usr/include/c++/5/tuple" 3
operator=(const ::std::_Tuple_impl< _Idx, _UElements...> &__in)
# 307 "/usr/include/c++/5/tuple" 3
{
# 308 "/usr/include/c++/5/tuple" 3
_M_head(*this) = _Tuple_impl< _Idx, _UElements...> ::_M_head(__in);
# 309 "/usr/include/c++/5/tuple" 3
_M_tail(*this) = _Tuple_impl< _Idx, _UElements...> ::_M_tail(__in);
# 310 "/usr/include/c++/5/tuple" 3
return *this;
# 311 "/usr/include/c++/5/tuple" 3
}
# 313 "/usr/include/c++/5/tuple" 3
template< class _UHead, class ..._UTails> ::std::_Tuple_impl< _Idx, _Head, _Tail...> &
# 315 "/usr/include/c++/5/tuple" 3
operator=(::std::_Tuple_impl< _Idx, _UHead, _UTails...> &&__in)
# 316 "/usr/include/c++/5/tuple" 3
{
# 317 "/usr/include/c++/5/tuple" 3
_M_head(*this) = ::std::forward< _UHead> (_Tuple_impl< _Idx, _UHead, _UTails...> ::_M_head(__in));
# 319 "/usr/include/c++/5/tuple" 3
_M_tail(*this) = ::std::move(_Tuple_impl< _Idx, _UHead, _UTails...> ::_M_tail(__in));
# 321 "/usr/include/c++/5/tuple" 3
return *this;
# 322 "/usr/include/c++/5/tuple" 3
}
# 326 "/usr/include/c++/5/tuple" 3
protected: void _M_swap(::std::_Tuple_impl< _Idx, _Head, _Tail...> &__in) noexcept(noexcept(swap(::std::declval< _Head &> (), ::std::declval< _Head &> ())) && noexcept((_M_tail(__in)._M_swap(_M_tail(__in)))))
# 330 "/usr/include/c++/5/tuple" 3
{
# 331 "/usr/include/c++/5/tuple" 3
using ::std::swap;
# 332 "/usr/include/c++/5/tuple" 3
swap(_M_head(*this), _M_head(__in));
# 333 "/usr/include/c++/5/tuple" 3
_Inherited::_M_swap(_M_tail(__in));
# 334 "/usr/include/c++/5/tuple" 3
}
# 335 "/usr/include/c++/5/tuple" 3
};
# 338 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class _Head>
# 339 "/usr/include/c++/5/tuple" 3
struct _Tuple_impl< _Idx, _Head> : private _Head_base< _Idx, _Head, conditional< __is_final(_Head), integral_constant< bool, false> , __is_empty_non_tuple< _Head> > ::type::value> {
# 342 "/usr/include/c++/5/tuple" 3
template< ::std::size_t , class ...> friend struct _Tuple_impl;
# 344 "/usr/include/c++/5/tuple" 3
typedef _Head_base< _Idx, _Head, conditional< __is_final(_Head), ::std::integral_constant< bool, false> , __is_empty_non_tuple< _Head> > ::type::value> _Base;
# 347 "/usr/include/c++/5/tuple" 3
static constexpr _Head &_M_head(::std::_Tuple_impl< _Idx, _Head> &__t) noexcept { return _Base::_M_head(__t); }
# 350 "/usr/include/c++/5/tuple" 3
static constexpr const _Head &_M_head(const ::std::_Tuple_impl< _Idx, _Head> &__t) noexcept { return _Base::_M_head(__t); }
# 352 "/usr/include/c++/5/tuple" 3
constexpr _Tuple_impl() : _Base()
# 353 "/usr/include/c++/5/tuple" 3
{ }
# 356 "/usr/include/c++/5/tuple" 3
constexpr explicit _Tuple_impl(const _Head &__head) : _Base(__head)
# 357 "/usr/include/c++/5/tuple" 3
{ }
# 359 "/usr/include/c++/5/tuple" 3
template< class _UHead> constexpr explicit
# 361 "/usr/include/c++/5/tuple" 3
_Tuple_impl(_UHead &&__head) : _Base(::std::forward< _UHead> (__head))
# 362 "/usr/include/c++/5/tuple" 3
{ }
# 364 "/usr/include/c++/5/tuple" 3
constexpr _Tuple_impl(const ::std::_Tuple_impl< _Idx, _Head> &) = default;
# 367 "/usr/include/c++/5/tuple" 3
constexpr _Tuple_impl(::std::_Tuple_impl< _Idx, _Head> &&__in) noexcept(is_nothrow_move_constructible< _Head> ::value) : _Base(::std::forward< _Head> (_M_head(__in)))
# 369 "/usr/include/c++/5/tuple" 3
{ }
# 371 "/usr/include/c++/5/tuple" 3
template< class _UHead> constexpr
# 372 "/usr/include/c++/5/tuple" 3
_Tuple_impl(const ::std::_Tuple_impl< _Idx, _UHead> &__in) : _Base(_Tuple_impl< _Idx, _UHead> ::_M_head(__in))
# 373 "/usr/include/c++/5/tuple" 3
{ }
# 375 "/usr/include/c++/5/tuple" 3
template< class _UHead> constexpr
# 376 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::_Tuple_impl< _Idx, _UHead> &&__in) : _Base(::std::forward< _UHead> (_Tuple_impl< _Idx, _UHead> ::_M_head(__in)))
# 378 "/usr/include/c++/5/tuple" 3
{ }
# 380 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 381 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a) : _Base(__tag, __use_alloc< _Head> (__a))
# 382 "/usr/include/c++/5/tuple" 3
{ }
# 384 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 385 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, const _Head &
# 386 "/usr/include/c++/5/tuple" 3
__head) : _Base(__use_alloc< _Head, _Alloc, _Head> (__a), __head)
# 387 "/usr/include/c++/5/tuple" 3
{ }
# 389 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 390 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, _UHead &&
# 391 "/usr/include/c++/5/tuple" 3
__head) : _Base(__use_alloc< _Head, _Alloc, _UHead> (__a), ::std::forward< _UHead> (__head))
# 393 "/usr/include/c++/5/tuple" 3
{ }
# 395 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 396 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::_Tuple_impl< _Idx, _Head> &
# 397 "/usr/include/c++/5/tuple" 3
__in) : _Base(__use_alloc< _Head, _Alloc, _Head> (__a), _M_head(__in))
# 398 "/usr/include/c++/5/tuple" 3
{ }
# 400 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 401 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::_Tuple_impl< _Idx, _Head> &&
# 402 "/usr/include/c++/5/tuple" 3
__in) : _Base(__use_alloc< _Head, _Alloc, _Head> (__a), ::std::forward< _Head> (_M_head(__in)))
# 404 "/usr/include/c++/5/tuple" 3
{ }
# 406 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 407 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::_Tuple_impl< _Idx, _UHead> &
# 408 "/usr/include/c++/5/tuple" 3
__in) : _Base(__use_alloc< _Head, _Alloc, _Head> (__a), _Tuple_impl< _Idx, _UHead> ::_M_head(__in))
# 410 "/usr/include/c++/5/tuple" 3
{ }
# 412 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _UHead>
# 413 "/usr/include/c++/5/tuple" 3
_Tuple_impl(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::_Tuple_impl< _Idx, _UHead> &&
# 414 "/usr/include/c++/5/tuple" 3
__in) : _Base(__use_alloc< _Head, _Alloc, _UHead> (__a), ::std::forward< _UHead> (_Tuple_impl< _Idx, _UHead> ::_M_head(__in)))
# 417 "/usr/include/c++/5/tuple" 3
{ }
# 420 "/usr/include/c++/5/tuple" 3
::std::_Tuple_impl< _Idx, _Head> &operator=(const ::std::_Tuple_impl< _Idx, _Head> &__in)
# 421 "/usr/include/c++/5/tuple" 3
{
# 422 "/usr/include/c++/5/tuple" 3
_M_head(*this) = _M_head(__in);
# 423 "/usr/include/c++/5/tuple" 3
return *this;
# 424 "/usr/include/c++/5/tuple" 3
}
# 427 "/usr/include/c++/5/tuple" 3
::std::_Tuple_impl< _Idx, _Head> &operator=(::std::_Tuple_impl< _Idx, _Head> &&__in) noexcept(is_nothrow_move_assignable< _Head> ::value)
# 429 "/usr/include/c++/5/tuple" 3
{
# 430 "/usr/include/c++/5/tuple" 3
_M_head(*this) = ::std::forward< _Head> (_M_head(__in));
# 431 "/usr/include/c++/5/tuple" 3
return *this;
# 432 "/usr/include/c++/5/tuple" 3
}
# 434 "/usr/include/c++/5/tuple" 3
template< class _UHead> ::std::_Tuple_impl< _Idx, _Head> &
# 436 "/usr/include/c++/5/tuple" 3
operator=(const ::std::_Tuple_impl< _Idx, _UHead> &__in)
# 437 "/usr/include/c++/5/tuple" 3
{
# 438 "/usr/include/c++/5/tuple" 3
_M_head(*this) = _Tuple_impl< _Idx, _UHead> ::_M_head(__in);
# 439 "/usr/include/c++/5/tuple" 3
return *this;
# 440 "/usr/include/c++/5/tuple" 3
}
# 442 "/usr/include/c++/5/tuple" 3
template< class _UHead> ::std::_Tuple_impl< _Idx, _Head> &
# 444 "/usr/include/c++/5/tuple" 3
operator=(::std::_Tuple_impl< _Idx, _UHead> &&__in)
# 445 "/usr/include/c++/5/tuple" 3
{
# 446 "/usr/include/c++/5/tuple" 3
_M_head(*this) = ::std::forward< _UHead> (_Tuple_impl< _Idx, _UHead> ::_M_head(__in));
# 448 "/usr/include/c++/5/tuple" 3
return *this;
# 449 "/usr/include/c++/5/tuple" 3
}
# 453 "/usr/include/c++/5/tuple" 3
protected: void _M_swap(::std::_Tuple_impl< _Idx, _Head> &__in) noexcept(noexcept(swap(::std::declval< _Head &> (), ::std::declval< _Head &> ())))
# 455 "/usr/include/c++/5/tuple" 3
{
# 456 "/usr/include/c++/5/tuple" 3
using ::std::swap;
# 457 "/usr/include/c++/5/tuple" 3
swap(_M_head(*this), _M_head(__in));
# 458 "/usr/include/c++/5/tuple" 3
}
# 459 "/usr/include/c++/5/tuple" 3
};
# 462 "/usr/include/c++/5/tuple" 3
template< class ..._Elements>
# 463 "/usr/include/c++/5/tuple" 3
class tuple : public _Tuple_impl< 0UL, _Elements...> {
# 465 "/usr/include/c++/5/tuple" 3
typedef _Tuple_impl< 0UL, _Elements...> _Inherited;
# 468 "/usr/include/c++/5/tuple" 3
public: constexpr tuple() : _Inherited()
# 469 "/usr/include/c++/5/tuple" 3
{ }
# 472 "/usr/include/c++/5/tuple" 3
constexpr explicit tuple(const _Elements &...__elements) : _Inherited(__elements...)
# 473 "/usr/include/c++/5/tuple" 3
{ }
# 475 "/usr/include/c++/5/tuple" 3
template< class ..._UElements, class = typename enable_if< __and_< is_convertible< _UElements, _Elements> ...> ::value> ::type> constexpr explicit
# 479 "/usr/include/c++/5/tuple" 3
tuple(_UElements &&...__elements) : _Inherited(::std::forward< _UElements> (__elements)...)
# 480 "/usr/include/c++/5/tuple" 3
{ }
# 482 "/usr/include/c++/5/tuple" 3
constexpr tuple(const tuple &) = default;
# 484 "/usr/include/c++/5/tuple" 3
constexpr tuple(tuple &&) = default;
# 486 "/usr/include/c++/5/tuple" 3
template< class ..._UElements, class = typename enable_if< __and_< is_convertible< const _UElements &, _Elements> ...> ::value> ::type> constexpr
# 489 "/usr/include/c++/5/tuple" 3
tuple(const ::std::tuple< _UElements...> &__in) : _Inherited(static_cast< const _Tuple_impl< 0UL, _UElements...> &>(__in))
# 491 "/usr/include/c++/5/tuple" 3
{ }
# 493 "/usr/include/c++/5/tuple" 3
template< class ..._UElements, class = typename enable_if< __and_< is_convertible< _UElements, _Elements> ...> ::value> ::type> constexpr
# 496 "/usr/include/c++/5/tuple" 3
tuple(::std::tuple< _UElements...> &&__in) : _Inherited(static_cast< _Tuple_impl< 0UL, _UElements...> &&>(__in))
# 497 "/usr/include/c++/5/tuple" 3
{ }
# 501 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 502 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a) : _Inherited(__tag, __a)
# 503 "/usr/include/c++/5/tuple" 3
{ }
# 505 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 506 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const _Elements &...
# 507 "/usr/include/c++/5/tuple" 3
__elements) : _Inherited(__tag, __a, __elements...)
# 508 "/usr/include/c++/5/tuple" 3
{ }
# 510 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class ..._UElements, class = typename enable_if< sizeof...(_UElements) == sizeof...(_Elements)> ::type>
# 513 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, _UElements &&...
# 514 "/usr/include/c++/5/tuple" 3
__elements) : _Inherited(__tag, __a, ::std::forward< _UElements> (__elements)...)
# 516 "/usr/include/c++/5/tuple" 3
{ }
# 518 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 519 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const tuple &__in) : _Inherited(__tag, __a, static_cast< const _Inherited &>(__in))
# 520 "/usr/include/c++/5/tuple" 3
{ }
# 522 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 523 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, tuple &&__in) : _Inherited(__tag, __a, static_cast< _Inherited &&>(__in))
# 524 "/usr/include/c++/5/tuple" 3
{ }
# 526 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class ..._UElements, class = typename enable_if< sizeof...(_UElements) == sizeof...(_Elements)> ::type>
# 529 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::tuple< _UElements...> &
# 530 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, static_cast< const _Tuple_impl< 0UL, _UElements...> &>(__in))
# 533 "/usr/include/c++/5/tuple" 3
{ }
# 535 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class ..._UElements, class = typename enable_if< sizeof...(_UElements) == sizeof...(_Elements)> ::type>
# 538 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::tuple< _UElements...> &&
# 539 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, static_cast< _Tuple_impl< 0UL, _UElements...> &&>(__in))
# 542 "/usr/include/c++/5/tuple" 3
{ }
# 545 "/usr/include/c++/5/tuple" 3
tuple &operator=(const tuple &__in)
# 546 "/usr/include/c++/5/tuple" 3
{
# 547 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = __in;
# 548 "/usr/include/c++/5/tuple" 3
return *this;
# 549 "/usr/include/c++/5/tuple" 3
}
# 552 "/usr/include/c++/5/tuple" 3
tuple &operator=(tuple &&__in) noexcept(is_nothrow_move_assignable< _Tuple_impl< 0UL, _Elements...> > ::value)
# 554 "/usr/include/c++/5/tuple" 3
{
# 555 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = ::std::move(__in);
# 556 "/usr/include/c++/5/tuple" 3
return *this;
# 557 "/usr/include/c++/5/tuple" 3
}
# 559 "/usr/include/c++/5/tuple" 3
template< class ..._UElements, class = typename enable_if< sizeof...(_UElements) == sizeof...(_Elements)> ::type> tuple &
# 563 "/usr/include/c++/5/tuple" 3
operator=(const ::std::tuple< _UElements...> &__in)
# 564 "/usr/include/c++/5/tuple" 3
{
# 565 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = __in;
# 566 "/usr/include/c++/5/tuple" 3
return *this;
# 567 "/usr/include/c++/5/tuple" 3
}
# 569 "/usr/include/c++/5/tuple" 3
template< class ..._UElements, class = typename enable_if< sizeof...(_UElements) == sizeof...(_Elements)> ::type> tuple &
# 573 "/usr/include/c++/5/tuple" 3
operator=(::std::tuple< _UElements...> &&__in)
# 574 "/usr/include/c++/5/tuple" 3
{
# 575 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = ::std::move(__in);
# 576 "/usr/include/c++/5/tuple" 3
return *this;
# 577 "/usr/include/c++/5/tuple" 3
}
# 580 "/usr/include/c++/5/tuple" 3
void swap(tuple &__in) noexcept(noexcept((__in._M_swap(__in))))
# 582 "/usr/include/c++/5/tuple" 3
{ _Inherited::_M_swap(__in); }
# 583 "/usr/include/c++/5/tuple" 3
};
# 587 "/usr/include/c++/5/tuple" 3
template<> class tuple< > {
# 590 "/usr/include/c++/5/tuple" 3
public: void swap(std::tuple< > &) noexcept { }
# 591 "/usr/include/c++/5/tuple" 3
};
# 595 "/usr/include/c++/5/tuple" 3
template< class _T1, class _T2>
# 596 "/usr/include/c++/5/tuple" 3
class tuple< _T1, _T2> : public _Tuple_impl< 0UL, _T1, _T2> {
# 598 "/usr/include/c++/5/tuple" 3
typedef _Tuple_impl< 0UL, _T1, _T2> _Inherited;
# 601 "/usr/include/c++/5/tuple" 3
public: constexpr tuple() : _Inherited()
# 602 "/usr/include/c++/5/tuple" 3
{ }
# 605 "/usr/include/c++/5/tuple" 3
constexpr explicit tuple(const _T1 &__a1, const _T2 &__a2) : _Inherited(__a1, __a2)
# 606 "/usr/include/c++/5/tuple" 3
{ }
# 608 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr explicit
# 612 "/usr/include/c++/5/tuple" 3
tuple(_U1 &&__a1, _U2 &&__a2) : _Inherited(::std::forward< _U1> (__a1), ::std::forward< _U2> (__a2))
# 613 "/usr/include/c++/5/tuple" 3
{ }
# 615 "/usr/include/c++/5/tuple" 3
constexpr tuple(const ::std::tuple< _T1, _T2> &) = default;
# 617 "/usr/include/c++/5/tuple" 3
constexpr tuple(::std::tuple< _T1, _T2> &&) = default;
# 619 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< const _U1 &, _T1> , is_convertible< const _U2 &, _T2> > ::value> ::type> constexpr
# 622 "/usr/include/c++/5/tuple" 3
tuple(const ::std::tuple< _U1, _U2> &__in) : _Inherited(static_cast< const _Tuple_impl< 0UL, _U1, _U2> &>(__in))
# 623 "/usr/include/c++/5/tuple" 3
{ }
# 625 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr
# 628 "/usr/include/c++/5/tuple" 3
tuple(::std::tuple< _U1, _U2> &&__in) : _Inherited(static_cast< _Tuple_impl< 0UL, _U1, _U2> &&>(__in))
# 629 "/usr/include/c++/5/tuple" 3
{ }
# 631 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< const _U1 &, _T1> , is_convertible< const _U2 &, _T2> > ::value> ::type> constexpr
# 634 "/usr/include/c++/5/tuple" 3
tuple(const pair< _U1, _U2> &__in) : _Inherited((__in.first), (__in.second))
# 635 "/usr/include/c++/5/tuple" 3
{ }
# 637 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr
# 640 "/usr/include/c++/5/tuple" 3
tuple(pair< _U1, _U2> &&__in) : _Inherited(::std::forward< _U1> ((__in.first)), ::std::forward< _U2> ((__in.second)))
# 642 "/usr/include/c++/5/tuple" 3
{ }
# 646 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 647 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a) : _Inherited(__tag, __a)
# 648 "/usr/include/c++/5/tuple" 3
{ }
# 650 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 651 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const _T1 &
# 652 "/usr/include/c++/5/tuple" 3
__a1, const _T2 &__a2) : _Inherited(__tag, __a, __a1, __a2)
# 653 "/usr/include/c++/5/tuple" 3
{ }
# 655 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _U1, class _U2>
# 656 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, _U1 &&__a1, _U2 &&__a2) : _Inherited(__tag, __a, ::std::forward< _U1> (__a1), ::std::forward< _U2> (__a2))
# 658 "/usr/include/c++/5/tuple" 3
{ }
# 660 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 661 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::tuple< _T1, _T2> &__in) : _Inherited(__tag, __a, static_cast< const _Inherited &>(__in))
# 662 "/usr/include/c++/5/tuple" 3
{ }
# 664 "/usr/include/c++/5/tuple" 3
template< class _Alloc>
# 665 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::tuple< _T1, _T2> &&__in) : _Inherited(__tag, __a, static_cast< _Inherited &&>(__in))
# 666 "/usr/include/c++/5/tuple" 3
{ }
# 668 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _U1, class _U2>
# 669 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const ::std::tuple< _U1, _U2> &
# 670 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, static_cast< const _Tuple_impl< 0UL, _U1, _U2> &>(__in))
# 673 "/usr/include/c++/5/tuple" 3
{ }
# 675 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _U1, class _U2>
# 676 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, ::std::tuple< _U1, _U2> &&__in) : _Inherited(__tag, __a, static_cast< _Tuple_impl< 0UL, _U1, _U2> &&>(__in))
# 678 "/usr/include/c++/5/tuple" 3
{ }
# 680 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _U1, class _U2>
# 681 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, const pair< _U1, _U2> &
# 682 "/usr/include/c++/5/tuple" 3
__in) : _Inherited(__tag, __a, (__in.first), (__in.second))
# 683 "/usr/include/c++/5/tuple" 3
{ }
# 685 "/usr/include/c++/5/tuple" 3
template< class _Alloc, class _U1, class _U2>
# 686 "/usr/include/c++/5/tuple" 3
tuple(::std::allocator_arg_t __tag, const _Alloc &__a, pair< _U1, _U2> &&__in) : _Inherited(__tag, __a, ::std::forward< _U1> ((__in.first)), ::std::forward< _U2> ((__in.second)))
# 688 "/usr/include/c++/5/tuple" 3
{ }
# 691 "/usr/include/c++/5/tuple" 3
::std::tuple< _T1, _T2> &operator=(const ::std::tuple< _T1, _T2> &__in)
# 692 "/usr/include/c++/5/tuple" 3
{
# 693 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = __in;
# 694 "/usr/include/c++/5/tuple" 3
return *this;
# 695 "/usr/include/c++/5/tuple" 3
}
# 698 "/usr/include/c++/5/tuple" 3
::std::tuple< _T1, _T2> &operator=(::std::tuple< _T1, _T2> &&__in) noexcept(is_nothrow_move_assignable< _Tuple_impl< 0UL, _T1, _T2> > ::value)
# 700 "/usr/include/c++/5/tuple" 3
{
# 701 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = ::std::move(__in);
# 702 "/usr/include/c++/5/tuple" 3
return *this;
# 703 "/usr/include/c++/5/tuple" 3
}
# 705 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2> ::std::tuple< _T1, _T2> &
# 707 "/usr/include/c++/5/tuple" 3
operator=(const ::std::tuple< _U1, _U2> &__in)
# 708 "/usr/include/c++/5/tuple" 3
{
# 709 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = __in;
# 710 "/usr/include/c++/5/tuple" 3
return *this;
# 711 "/usr/include/c++/5/tuple" 3
}
# 713 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2> ::std::tuple< _T1, _T2> &
# 715 "/usr/include/c++/5/tuple" 3
operator=(::std::tuple< _U1, _U2> &&__in)
# 716 "/usr/include/c++/5/tuple" 3
{
# 717 "/usr/include/c++/5/tuple" 3
(static_cast< _Inherited &>(*this)) = ::std::move(__in);
# 718 "/usr/include/c++/5/tuple" 3
return *this;
# 719 "/usr/include/c++/5/tuple" 3
}
# 721 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2> ::std::tuple< _T1, _T2> &
# 723 "/usr/include/c++/5/tuple" 3
operator=(const pair< _U1, _U2> &__in)
# 724 "/usr/include/c++/5/tuple" 3
{
# 725 "/usr/include/c++/5/tuple" 3
(this->_M_head(*this)) = (__in.first);
# 726 "/usr/include/c++/5/tuple" 3
((this->_M_tail(*this))._M_head(*this)) = (__in.second);
# 727 "/usr/include/c++/5/tuple" 3
return *this;
# 728 "/usr/include/c++/5/tuple" 3
}
# 730 "/usr/include/c++/5/tuple" 3
template< class _U1, class _U2> ::std::tuple< _T1, _T2> &
# 732 "/usr/include/c++/5/tuple" 3
operator=(pair< _U1, _U2> &&__in)
# 733 "/usr/include/c++/5/tuple" 3
{
# 734 "/usr/include/c++/5/tuple" 3
(this->_M_head(*this)) = ::std::forward< _U1> ((__in.first));
# 735 "/usr/include/c++/5/tuple" 3
((this->_M_tail(*this))._M_head(*this)) = ::std::forward< _U2> ((__in.second));
# 736 "/usr/include/c++/5/tuple" 3
return *this;
# 737 "/usr/include/c++/5/tuple" 3
}
# 740 "/usr/include/c++/5/tuple" 3
void swap(::std::tuple< _T1, _T2> &__in) noexcept(noexcept((__in._M_swap(__in))))
# 742 "/usr/include/c++/5/tuple" 3
{ _Inherited::_M_swap(__in); }
# 743 "/usr/include/c++/5/tuple" 3
};
# 747 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Tp> class tuple_element;
# 754 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Head, class ..._Tail>
# 755 "/usr/include/c++/5/tuple" 3
struct tuple_element< __i, tuple< _Head, _Tail...> > : public tuple_element< __i - (1), tuple< _Tail...> > {
# 756 "/usr/include/c++/5/tuple" 3
};
# 761 "/usr/include/c++/5/tuple" 3
template< class _Head, class ..._Tail>
# 762 "/usr/include/c++/5/tuple" 3
struct tuple_element< 0, tuple< _Head, _Tail...> > {
# 764 "/usr/include/c++/5/tuple" 3
typedef _Head type;
# 765 "/usr/include/c++/5/tuple" 3
};
# 768 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Tp> using __tuple_element_t = typename tuple_element< __i, _Tp> ::type;
# 771 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Tp>
# 772 "/usr/include/c++/5/tuple" 3
struct tuple_element< __i, const _Tp> {
# 774 "/usr/include/c++/5/tuple" 3
typedef typename add_const< __tuple_element_t< __i, _Tp> > ::type type;
# 775 "/usr/include/c++/5/tuple" 3
};
# 777 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Tp>
# 778 "/usr/include/c++/5/tuple" 3
struct tuple_element< __i, volatile _Tp> {
# 780 "/usr/include/c++/5/tuple" 3
typedef typename add_volatile< __tuple_element_t< __i, _Tp> > ::type type;
# 781 "/usr/include/c++/5/tuple" 3
};
# 783 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Tp>
# 784 "/usr/include/c++/5/tuple" 3
struct tuple_element< __i, const volatile _Tp> {
# 786 "/usr/include/c++/5/tuple" 3
typedef typename add_cv< __tuple_element_t< __i, _Tp> > ::type type;
# 787 "/usr/include/c++/5/tuple" 3
};
# 797 "/usr/include/c++/5/tuple" 3
template< class _Tp> class tuple_size;
# 802 "/usr/include/c++/5/tuple" 3
template< class _Tp>
# 803 "/usr/include/c++/5/tuple" 3
struct tuple_size< const _Tp> : public integral_constant< unsigned long, tuple_size< _Tp> ::value> {
# 804 "/usr/include/c++/5/tuple" 3
};
# 806 "/usr/include/c++/5/tuple" 3
template< class _Tp>
# 807 "/usr/include/c++/5/tuple" 3
struct tuple_size< volatile _Tp> : public integral_constant< unsigned long, tuple_size< _Tp> ::value> {
# 808 "/usr/include/c++/5/tuple" 3
};
# 810 "/usr/include/c++/5/tuple" 3
template< class _Tp>
# 811 "/usr/include/c++/5/tuple" 3
struct tuple_size< const volatile _Tp> : public integral_constant< unsigned long, tuple_size< _Tp> ::value> {
# 812 "/usr/include/c++/5/tuple" 3
};
# 815 "/usr/include/c++/5/tuple" 3
template< class ..._Elements>
# 816 "/usr/include/c++/5/tuple" 3
struct tuple_size< tuple< _Elements...> > : public integral_constant< unsigned long, sizeof...(_Elements)> {
# 817 "/usr/include/c++/5/tuple" 3
};
# 819 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Head, class ..._Tail> constexpr _Head &
# 821 "/usr/include/c++/5/tuple" 3
__get_helper(_Tuple_impl< __i, _Head, _Tail...> &__t) noexcept
# 822 "/usr/include/c++/5/tuple" 3
{ return _Tuple_impl< __i, _Head, _Tail...> ::_M_head(__t); }
# 824 "/usr/include/c++/5/tuple" 3
template< size_t __i, class _Head, class ..._Tail> constexpr const _Head &
# 826 "/usr/include/c++/5/tuple" 3
__get_helper(const _Tuple_impl< __i, _Head, _Tail...> &__t) noexcept
# 827 "/usr/include/c++/5/tuple" 3
{ return _Tuple_impl< __i, _Head, _Tail...> ::_M_head(__t); }
# 830 "/usr/include/c++/5/tuple" 3
template< size_t __i, class ..._Elements> constexpr __tuple_element_t< __i, tuple< _Elements...> > &
# 832 "/usr/include/c++/5/tuple" 3
get(tuple< _Elements...> &__t) noexcept
# 833 "/usr/include/c++/5/tuple" 3
{ return std::__get_helper< __i> (__t); }
# 836 "/usr/include/c++/5/tuple" 3
template< size_t __i, class ..._Elements> constexpr const __tuple_element_t< __i, tuple< _Elements...> > &
# 838 "/usr/include/c++/5/tuple" 3
get(const tuple< _Elements...> &__t) noexcept
# 839 "/usr/include/c++/5/tuple" 3
{ return std::__get_helper< __i> (__t); }
# 842 "/usr/include/c++/5/tuple" 3
template< size_t __i, class ..._Elements> constexpr __tuple_element_t< __i, tuple< _Elements...> > &&
# 844 "/usr/include/c++/5/tuple" 3
get(tuple< _Elements...> &&__t) noexcept
# 845 "/usr/include/c++/5/tuple" 3
{
# 846 "/usr/include/c++/5/tuple" 3
typedef __tuple_element_t< __i, tuple< _Elements...> > __element_type;
# 847 "/usr/include/c++/5/tuple" 3
return std::forward< __tuple_element_t< __i, tuple< _Elements...> > &&> (std::get< __i> (__t));
# 848 "/usr/include/c++/5/tuple" 3
}
# 884 "/usr/include/c++/5/tuple" 3
template< class _Tp, class _Up, size_t __i, size_t __size>
# 885 "/usr/include/c++/5/tuple" 3
struct __tuple_compare {
# 888 "/usr/include/c++/5/tuple" 3
static constexpr bool __eq(const _Tp &__t, const _Up &__u)
# 889 "/usr/include/c++/5/tuple" 3
{
# 890 "/usr/include/c++/5/tuple" 3
return ((bool)(std::get< __i> (__t) == std::get< __i> (__u))) && __tuple_compare< _Tp, _Up, __i + (1), __size> ::__eq(__t, __u);
# 892 "/usr/include/c++/5/tuple" 3
}
# 895 "/usr/include/c++/5/tuple" 3
static constexpr bool __less(const _Tp &__t, const _Up &__u)
# 896 "/usr/include/c++/5/tuple" 3
{
# 897 "/usr/include/c++/5/tuple" 3
return ((bool)(std::get< __i> (__t) < std::get< __i> (__u))) || ((!((bool)(std::get< __i> (__u) < std::get< __i> (__t)))) && __tuple_compare< _Tp, _Up, __i + (1), __size> ::__less(__t, __u));
# 900 "/usr/include/c++/5/tuple" 3
}
# 901 "/usr/include/c++/5/tuple" 3
};
# 903 "/usr/include/c++/5/tuple" 3
template< class _Tp, class _Up, size_t __size>
# 904 "/usr/include/c++/5/tuple" 3
struct __tuple_compare< _Tp, _Up, __size, __size> {
# 907 "/usr/include/c++/5/tuple" 3
static constexpr bool __eq(const _Tp &, const _Up &) { return true; }
# 910 "/usr/include/c++/5/tuple" 3
static constexpr bool __less(const _Tp &, const _Up &) { return false; }
# 911 "/usr/include/c++/5/tuple" 3
};
# 913 "/usr/include/c++/5/tuple" 3
template< class ..._TElements, class ..._UElements> constexpr bool
# 915 "/usr/include/c++/5/tuple" 3
operator==(const tuple< _TElements...> &__t, const tuple< _UElements...> &
# 916 "/usr/include/c++/5/tuple" 3
__u)
# 917 "/usr/include/c++/5/tuple" 3
{
# 918 "/usr/include/c++/5/tuple" 3
static_assert((sizeof...(_TElements) == sizeof...(_UElements)), "tuple objects can only be compared if they have equal sizes.");
# 920 "/usr/include/c++/5/tuple" 3
using __compare = __tuple_compare< tuple< _TElements...> , tuple< _UElements...> , 0UL, sizeof...(_TElements)> ;
# 923 "/usr/include/c++/5/tuple" 3
return __compare::__eq(__t, __u);
# 924 "/usr/include/c++/5/tuple" 3
}
# 926 "/usr/include/c++/5/tuple" 3
template< class ..._TElements, class ..._UElements> constexpr bool
# 928 "/usr/include/c++/5/tuple" 3
operator<(const tuple< _TElements...> &__t, const tuple< _UElements...> &
# 929 "/usr/include/c++/5/tuple" 3
__u)
# 930 "/usr/include/c++/5/tuple" 3
{
# 931 "/usr/include/c++/5/tuple" 3
static_assert((sizeof...(_TElements) == sizeof...(_UElements)), "tuple objects can only be compared if they have equal sizes.");
# 933 "/usr/include/c++/5/tuple" 3
using __compare = __tuple_compare< tuple< _TElements...> , tuple< _UElements...> , 0UL, sizeof...(_TElements)> ;
# 936 "/usr/include/c++/5/tuple" 3
return __compare::__less(__t, __u);
# 937 "/usr/include/c++/5/tuple" 3
}
# 939 "/usr/include/c++/5/tuple" 3
template< class ..._TElements, class ..._UElements> constexpr bool
# 941 "/usr/include/c++/5/tuple" 3
operator!=(const tuple< _TElements...> &__t, const tuple< _UElements...> &
# 942 "/usr/include/c++/5/tuple" 3
__u)
# 943 "/usr/include/c++/5/tuple" 3
{ return !(__t == __u); }
# 945 "/usr/include/c++/5/tuple" 3
template< class ..._TElements, class ..._UElements> constexpr bool
# 947 "/usr/include/c++/5/tuple" 3
operator>(const tuple< _TElements...> &__t, const tuple< _UElements...> &
# 948 "/usr/include/c++/5/tuple" 3
__u)
# 949 "/usr/include/c++/5/tuple" 3
{ return __u < __t; }
# 951 "/usr/include/c++/5/tuple" 3
template< class ..._TElements, class ..._UElements> constexpr bool
# 953 "/usr/include/c++/5/tuple" 3
operator<=(const tuple< _TElements...> &__t, const tuple< _UElements...> &
# 954 "/usr/include/c++/5/tuple" 3
__u)
# 955 "/usr/include/c++/5/tuple" 3
{ return !(__u < __t); }
# 957 "/usr/include/c++/5/tuple" 3
template< class ..._TElements, class ..._UElements> constexpr bool
# 959 "/usr/include/c++/5/tuple" 3
operator>=(const tuple< _TElements...> &__t, const tuple< _UElements...> &
# 960 "/usr/include/c++/5/tuple" 3
__u)
# 961 "/usr/include/c++/5/tuple" 3
{ return !(__t < __u); }
# 964 "/usr/include/c++/5/tuple" 3
template< class ..._Elements> constexpr tuple< typename __decay_and_strip< _Elements> ::__type...>
# 966 "/usr/include/c++/5/tuple" 3
make_tuple(_Elements &&...__args)
# 967 "/usr/include/c++/5/tuple" 3
{
# 969 "/usr/include/c++/5/tuple" 3
typedef tuple< typename __decay_and_strip< _Elements> ::__type...> __result_type;
# 970 "/usr/include/c++/5/tuple" 3
return __result_type(std::forward< _Elements> (__args)...);
# 971 "/usr/include/c++/5/tuple" 3
}
# 973 "/usr/include/c++/5/tuple" 3
template< class ..._Elements> tuple< _Elements &&...>
# 975 "/usr/include/c++/5/tuple" 3
forward_as_tuple(_Elements &&...__args) noexcept
# 976 "/usr/include/c++/5/tuple" 3
{ return tuple< _Elements &&...> (std::forward< _Elements> (__args)...); }
# 978 "/usr/include/c++/5/tuple" 3
template< class >
# 979 "/usr/include/c++/5/tuple" 3
struct __is_tuple_like_impl : public false_type {
# 980 "/usr/include/c++/5/tuple" 3
};
# 982 "/usr/include/c++/5/tuple" 3
template< class ..._Tps>
# 983 "/usr/include/c++/5/tuple" 3
struct __is_tuple_like_impl< tuple< _Tps...> > : public true_type {
# 984 "/usr/include/c++/5/tuple" 3
};
# 986 "/usr/include/c++/5/tuple" 3
template< class _T1, class _T2>
# 987 "/usr/include/c++/5/tuple" 3
struct __is_tuple_like_impl< pair< _T1, _T2> > : public true_type {
# 988 "/usr/include/c++/5/tuple" 3
};
# 990 "/usr/include/c++/5/tuple" 3
template< class _Tp, size_t _Nm>
# 991 "/usr/include/c++/5/tuple" 3
struct __is_tuple_like_impl< array< _Tp, _Nm> > : public true_type {
# 992 "/usr/include/c++/5/tuple" 3
};
# 995 "/usr/include/c++/5/tuple" 3
template< class _Tp>
# 996 "/usr/include/c++/5/tuple" 3
struct __is_tuple_like : public __is_tuple_like_impl< typename remove_cv< typename remove_reference< _Tp> ::type> ::type> ::type {
# 999 "/usr/include/c++/5/tuple" 3
};
# 1001 "/usr/include/c++/5/tuple" 3
template< size_t , class , class , size_t > struct __make_tuple_impl;
# 1004 "/usr/include/c++/5/tuple" 3
template< size_t _Idx, class _Tuple, class ..._Tp, size_t _Nm>
# 1005 "/usr/include/c++/5/tuple" 3
struct __make_tuple_impl< _Idx, tuple< _Tp...> , _Tuple, _Nm> : public __make_tuple_impl< _Idx + (1), tuple< _Tp..., __tuple_element_t< _Idx, _Tuple> > , _Tuple, _Nm> {
# 1009 "/usr/include/c++/5/tuple" 3
};
# 1011 "/usr/include/c++/5/tuple" 3
template< size_t _Nm, class _Tuple, class ..._Tp>
# 1012 "/usr/include/c++/5/tuple" 3
struct __make_tuple_impl< _Nm, tuple< _Tp...> , _Tuple, _Nm> {
# 1014 "/usr/include/c++/5/tuple" 3
typedef tuple< _Tp...> __type;
# 1015 "/usr/include/c++/5/tuple" 3
};
# 1017 "/usr/include/c++/5/tuple" 3
template< class _Tuple>
# 1018 "/usr/include/c++/5/tuple" 3
struct __do_make_tuple : public __make_tuple_impl< 0UL, tuple< > , _Tuple, tuple_size< _Tuple> ::value> {
# 1020 "/usr/include/c++/5/tuple" 3
};
# 1023 "/usr/include/c++/5/tuple" 3
template< class _Tuple>
# 1024 "/usr/include/c++/5/tuple" 3
struct __make_tuple : public __do_make_tuple< typename remove_cv< typename remove_reference< _Tuple> ::type> ::type> {
# 1027 "/usr/include/c++/5/tuple" 3
};
# 1030 "/usr/include/c++/5/tuple" 3
template< class ...> struct __combine_tuples;
# 1034 "/usr/include/c++/5/tuple" 3
template<> struct __combine_tuples< > {
# 1036 "/usr/include/c++/5/tuple" 3
typedef tuple< > __type;
# 1037 "/usr/include/c++/5/tuple" 3
};
# 1039 "/usr/include/c++/5/tuple" 3
template< class ..._Ts>
# 1040 "/usr/include/c++/5/tuple" 3
struct __combine_tuples< tuple< _Ts...> > {
# 1042 "/usr/include/c++/5/tuple" 3
typedef tuple< _Ts...> __type;
# 1043 "/usr/include/c++/5/tuple" 3
};
# 1045 "/usr/include/c++/5/tuple" 3
template< class ..._T1s, class ..._T2s, class ..._Rem>
# 1046 "/usr/include/c++/5/tuple" 3
struct __combine_tuples< tuple< _T1s...> , tuple< _T2s...> , _Rem...> {
# 1049 "/usr/include/c++/5/tuple" 3
typedef typename std::__combine_tuples< tuple< _T1s..., _T2s...> , _Rem...> ::__type __type;
# 1050 "/usr/include/c++/5/tuple" 3
};
# 1053 "/usr/include/c++/5/tuple" 3
template< class ..._Tpls>
# 1054 "/usr/include/c++/5/tuple" 3
struct __tuple_cat_result {
# 1057 "/usr/include/c++/5/tuple" 3
typedef typename __combine_tuples< typename __make_tuple< _Tpls> ::__type...> ::__type __type;
# 1058 "/usr/include/c++/5/tuple" 3
};
# 1062 "/usr/include/c++/5/tuple" 3
template< class ...> struct __make_1st_indices;
# 1066 "/usr/include/c++/5/tuple" 3
template<> struct __make_1st_indices< > {
# 1068 "/usr/include/c++/5/tuple" 3
typedef _Index_tuple< > __type;
# 1069 "/usr/include/c++/5/tuple" 3
};
# 1071 "/usr/include/c++/5/tuple" 3
template< class _Tp, class ..._Tpls>
# 1072 "/usr/include/c++/5/tuple" 3
struct __make_1st_indices< _Tp, _Tpls...> {
# 1075 "/usr/include/c++/5/tuple" 3
typedef typename _Build_index_tuple< tuple_size< typename remove_reference< _Tp> ::type> ::value> ::__type __type;
# 1076 "/usr/include/c++/5/tuple" 3
};
# 1081 "/usr/include/c++/5/tuple" 3
template< class _Ret, class _Indices, class ..._Tpls> struct __tuple_concater;
# 1084 "/usr/include/c++/5/tuple" 3
template< class _Ret, size_t ..._Is, class _Tp, class ..._Tpls>
# 1085 "/usr/include/c++/5/tuple" 3
struct __tuple_concater< _Ret, _Index_tuple< _Is...> , _Tp, _Tpls...> {
# 1087 "/usr/include/c++/5/tuple" 3
template< class ..._Us> static constexpr _Ret
# 1089 "/usr/include/c++/5/tuple" 3
_S_do(_Tp &&__tp, _Tpls &&...__tps, _Us &&...__us)
# 1090 "/usr/include/c++/5/tuple" 3
{
# 1091 "/usr/include/c++/5/tuple" 3
typedef typename __make_1st_indices< _Tpls...> ::__type __idx;
# 1092 "/usr/include/c++/5/tuple" 3
typedef std::__tuple_concater< _Ret, typename __make_1st_indices< _Tpls...> ::__type, _Tpls...> __next;
# 1093 "/usr/include/c++/5/tuple" 3
return __next::_S_do(std::forward< _Tpls> (__tps)..., std::forward< _Us> (__us)..., std::get< _Is> (std::forward< _Tp> (__tp))...);
# 1096 "/usr/include/c++/5/tuple" 3
}
# 1097 "/usr/include/c++/5/tuple" 3
};
# 1099 "/usr/include/c++/5/tuple" 3
template< class _Ret>
# 1100 "/usr/include/c++/5/tuple" 3
struct __tuple_concater< _Ret, _Index_tuple< > > {
# 1102 "/usr/include/c++/5/tuple" 3
template< class ..._Us> static constexpr _Ret
# 1104 "/usr/include/c++/5/tuple" 3
_S_do(_Us &&...__us)
# 1105 "/usr/include/c++/5/tuple" 3
{
# 1106 "/usr/include/c++/5/tuple" 3
return _Ret(std::forward< _Us> (__us)...);
# 1107 "/usr/include/c++/5/tuple" 3
}
# 1108 "/usr/include/c++/5/tuple" 3
};
# 1111 "/usr/include/c++/5/tuple" 3
template< class ..._Tpls, class = typename enable_if< __and_< __is_tuple_like< _Tpls> ...> ::value> ::type> constexpr auto
# 1114 "/usr/include/c++/5/tuple" 3
tuple_cat(_Tpls &&...__tpls)->typename __tuple_cat_result< _Tpls...> ::__type
# 1116 "/usr/include/c++/5/tuple" 3
{
# 1117 "/usr/include/c++/5/tuple" 3
typedef typename __tuple_cat_result< _Tpls...> ::__type __ret;
# 1118 "/usr/include/c++/5/tuple" 3
typedef typename __make_1st_indices< _Tpls...> ::__type __idx;
# 1119 "/usr/include/c++/5/tuple" 3
typedef __tuple_concater< typename __tuple_cat_result< _Tpls...> ::__type, typename __make_1st_indices< _Tpls...> ::__type, _Tpls...> __concater;
# 1120 "/usr/include/c++/5/tuple" 3
return __concater::_S_do(std::forward< _Tpls> (__tpls)...);
# 1121 "/usr/include/c++/5/tuple" 3
}
# 1124 "/usr/include/c++/5/tuple" 3
template< class ..._Elements> inline tuple< _Elements &...>
# 1126 "/usr/include/c++/5/tuple" 3
tie(_Elements &...__args) noexcept
# 1127 "/usr/include/c++/5/tuple" 3
{ return tuple< _Elements &...> (__args...); }
# 1130 "/usr/include/c++/5/tuple" 3
template< class ..._Elements> inline void
# 1132 "/usr/include/c++/5/tuple" 3
swap(tuple< _Elements...> &__x, tuple< _Elements...> &__y) noexcept(noexcept((__x.swap(__y))))
# 1134 "/usr/include/c++/5/tuple" 3
{ (__x.swap(__y)); }
# 1138 "/usr/include/c++/5/tuple" 3
struct _Swallow_assign {
# 1140 "/usr/include/c++/5/tuple" 3
template< class _Tp> const _Swallow_assign &
# 1142 "/usr/include/c++/5/tuple" 3
operator=(const _Tp &) const
# 1143 "/usr/include/c++/5/tuple" 3
{ return *this; }
# 1144 "/usr/include/c++/5/tuple" 3
};
# 1146 "/usr/include/c++/5/tuple" 3
const _Swallow_assign ignore{};
# 1149 "/usr/include/c++/5/tuple" 3
template< class ..._Types, class _Alloc>
# 1150 "/usr/include/c++/5/tuple" 3
struct uses_allocator< tuple< _Types...> , _Alloc> : public true_type { };
# 1153 "/usr/include/c++/5/tuple" 3
template< class _T1, class _T2>
# 1154 "/usr/include/c++/5/tuple" 3
template< class ..._Args1, class ..._Args2> inline
# 1157 "/usr/include/c++/5/tuple" 3
pair< _T1, _T2> ::pair(piecewise_construct_t, tuple< _Args1...>
# 1158 "/usr/include/c++/5/tuple" 3
__first, tuple< _Args2...> __second) : pair(__first, __second, typename _Build_index_tuple< sizeof...(_Args1)> ::__type(), typename _Build_index_tuple< sizeof...(_Args2)> ::__type())
# 1162 "/usr/include/c++/5/tuple" 3
{ }
# 1164 "/usr/include/c++/5/tuple" 3
template< class _T1, class _T2>
# 1165 "/usr/include/c++/5/tuple" 3
template< class ..._Args1, size_t ..._Indexes1, class ...
# 1166 "/usr/include/c++/5/tuple" 3
_Args2, size_t ..._Indexes2> inline
# 1169 "/usr/include/c++/5/tuple" 3
pair< _T1, _T2> ::pair(tuple< _Args1...> &__tuple1, tuple< _Args2...> &__tuple2, _Index_tuple< _Indexes1...> , _Index_tuple< _Indexes2...> ) : first(std::forward< _Args1> (std::get< _Indexes1> (__tuple1))...), second(std::forward< _Args2> (std::get< _Indexes2> (__tuple2))...)
# 1173 "/usr/include/c++/5/tuple" 3
{ }
# 1178 "/usr/include/c++/5/tuple" 3
}
# 66 "/usr/include/c++/5/bits/stl_map.h" 3
namespace std __attribute((__visibility__("default"))) {
# 94 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare = less< _Key> , class
# 95 "/usr/include/c++/5/bits/stl_map.h" 3
_Alloc = allocator< pair< const _Key, _Tp> > >
# 96 "/usr/include/c++/5/bits/stl_map.h" 3
class map {
# 99 "/usr/include/c++/5/bits/stl_map.h" 3
public: typedef _Key key_type;
# 100 "/usr/include/c++/5/bits/stl_map.h" 3
typedef _Tp mapped_type;
# 101 "/usr/include/c++/5/bits/stl_map.h" 3
typedef pair< const _Key, _Tp> value_type;
# 102 "/usr/include/c++/5/bits/stl_map.h" 3
typedef _Compare key_compare;
# 103 "/usr/include/c++/5/bits/stl_map.h" 3
typedef _Alloc allocator_type;
# 107 "/usr/include/c++/5/bits/stl_map.h" 3
private: typedef typename _Alloc::value_type _Alloc_value_type;
# 114 "/usr/include/c++/5/bits/stl_map.h" 3
public: class value_compare : public binary_function< pair< const _Key, _Tp> , pair< const _Key, _Tp> , bool> {
# 117 "/usr/include/c++/5/bits/stl_map.h" 3
friend class map;
# 119 "/usr/include/c++/5/bits/stl_map.h" 3
protected: _Compare comp;
# 121 "/usr/include/c++/5/bits/stl_map.h" 3
value_compare(_Compare __c) : comp(__c)
# 122 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 125 "/usr/include/c++/5/bits/stl_map.h" 3
public: bool operator()(const typename ::std::map< _Key, _Tp, _Compare, _Alloc> ::value_type &__x, const typename ::std::map< _Key, _Tp, _Compare, _Alloc> ::value_type &__y) const
# 126 "/usr/include/c++/5/bits/stl_map.h" 3
{ return (comp)((__x.first), (__y.first)); }
# 127 "/usr/include/c++/5/bits/stl_map.h" 3
};
# 132 "/usr/include/c++/5/bits/stl_map.h" 3
private: typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other _Pair_alloc_type;
# 135 "/usr/include/c++/5/bits/stl_map.h" 3
typedef _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> _Rep_type;
# 138 "/usr/include/c++/5/bits/stl_map.h" 3
_Rep_type _M_t;
# 140 "/usr/include/c++/5/bits/stl_map.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> _Alloc_traits;
# 145 "/usr/include/c++/5/bits/stl_map.h" 3
public: typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::pointer pointer;
# 146 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_pointer const_pointer;
# 147 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::reference reference;
# 148 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_reference const_reference;
# 149 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator iterator;
# 150 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_iterator const_iterator;
# 151 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::size_type size_type;
# 152 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::difference_type difference_type;
# 153 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::reverse_iterator reverse_iterator;
# 154 "/usr/include/c++/5/bits/stl_map.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_reverse_iterator const_reverse_iterator;
# 162 "/usr/include/c++/5/bits/stl_map.h" 3
map() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _M_t()
# 166 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 174 "/usr/include/c++/5/bits/stl_map.h" 3
explicit map(const _Compare &__comp, const allocator_type &
# 175 "/usr/include/c++/5/bits/stl_map.h" 3
__a = allocator_type()) : _M_t(__comp, (_Pair_alloc_type)__a)
# 176 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 185 "/usr/include/c++/5/bits/stl_map.h" 3
map(const map &__x) : _M_t(__x._M_t)
# 186 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 196 "/usr/include/c++/5/bits/stl_map.h" 3
map(map &&__x) noexcept(is_nothrow_copy_constructible< _Compare> ::value) : _M_t(std::move(__x._M_t))
# 198 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 211 "/usr/include/c++/5/bits/stl_map.h" 3
map(initializer_list< pair< const _Key, _Tp> > __l, const _Compare &
# 212 "/usr/include/c++/5/bits/stl_map.h" 3
__comp = _Compare(), const allocator_type &
# 213 "/usr/include/c++/5/bits/stl_map.h" 3
__a = allocator_type()) : _M_t(__comp, (_Pair_alloc_type)__a)
# 215 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t)._M_insert_unique((__l.begin()), (__l.end()))); }
# 219 "/usr/include/c++/5/bits/stl_map.h" 3
explicit map(const allocator_type &__a) : _M_t(_Compare(), (_Pair_alloc_type)__a)
# 220 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 223 "/usr/include/c++/5/bits/stl_map.h" 3
map(const map &__m, const allocator_type &__a) : _M_t(__m._M_t, (_Pair_alloc_type)__a)
# 224 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 227 "/usr/include/c++/5/bits/stl_map.h" 3
map(map &&__m, const allocator_type &__a) noexcept(is_nothrow_copy_constructible< _Compare> ::value && _Alloc_traits::_S_always_equal()) : _M_t(std::move(__m._M_t), (_Pair_alloc_type)__a)
# 230 "/usr/include/c++/5/bits/stl_map.h" 3
{ }
# 233 "/usr/include/c++/5/bits/stl_map.h" 3
map(initializer_list< pair< const _Key, _Tp> > __l, const allocator_type &__a) : _M_t(_Compare(), (_Pair_alloc_type)__a)
# 235 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t)._M_insert_unique((__l.begin()), (__l.end()))); }
# 238 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _InputIterator>
# 239 "/usr/include/c++/5/bits/stl_map.h" 3
map(_InputIterator __first, _InputIterator __last, const allocator_type &
# 240 "/usr/include/c++/5/bits/stl_map.h" 3
__a) : _M_t(_Compare(), (_Pair_alloc_type)__a)
# 242 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t)._M_insert_unique(__first, __last)); }
# 255 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _InputIterator>
# 256 "/usr/include/c++/5/bits/stl_map.h" 3
map(_InputIterator __first, _InputIterator __last) : _M_t()
# 258 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t)._M_insert_unique(__first, __last)); }
# 272 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _InputIterator>
# 273 "/usr/include/c++/5/bits/stl_map.h" 3
map(_InputIterator __first, _InputIterator __last, const _Compare &
# 274 "/usr/include/c++/5/bits/stl_map.h" 3
__comp, const allocator_type &
# 275 "/usr/include/c++/5/bits/stl_map.h" 3
__a = allocator_type()) : _M_t(__comp, (_Pair_alloc_type)__a)
# 277 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t)._M_insert_unique(__first, __last)); }
# 296 "/usr/include/c++/5/bits/stl_map.h" 3
map &operator=(const map &__x)
# 297 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 298 "/usr/include/c++/5/bits/stl_map.h" 3
(_M_t) = (__x._M_t);
# 299 "/usr/include/c++/5/bits/stl_map.h" 3
return *this;
# 300 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 305 "/usr/include/c++/5/bits/stl_map.h" 3
map &operator=(map &&) = default;
# 319 "/usr/include/c++/5/bits/stl_map.h" 3
map &operator=(initializer_list< pair< const _Key, _Tp> > __l)
# 320 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 321 "/usr/include/c++/5/bits/stl_map.h" 3
((_M_t)._M_assign_unique((__l.begin()), (__l.end())));
# 322 "/usr/include/c++/5/bits/stl_map.h" 3
return *this;
# 323 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 328 "/usr/include/c++/5/bits/stl_map.h" 3
allocator_type get_allocator() const noexcept
# 329 "/usr/include/c++/5/bits/stl_map.h" 3
{ return (allocator_type)((_M_t).get_allocator()); }
# 338 "/usr/include/c++/5/bits/stl_map.h" 3
iterator begin() noexcept
# 339 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).begin()); }
# 347 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator begin() const noexcept
# 348 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).begin()); }
# 356 "/usr/include/c++/5/bits/stl_map.h" 3
iterator end() noexcept
# 357 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).end()); }
# 365 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator end() const noexcept
# 366 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).end()); }
# 374 "/usr/include/c++/5/bits/stl_map.h" 3
reverse_iterator rbegin() noexcept
# 375 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).rbegin()); }
# 383 "/usr/include/c++/5/bits/stl_map.h" 3
const_reverse_iterator rbegin() const noexcept
# 384 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).rbegin()); }
# 392 "/usr/include/c++/5/bits/stl_map.h" 3
reverse_iterator rend() noexcept
# 393 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).rend()); }
# 401 "/usr/include/c++/5/bits/stl_map.h" 3
const_reverse_iterator rend() const noexcept
# 402 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).rend()); }
# 411 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator cbegin() const noexcept
# 412 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).begin()); }
# 420 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator cend() const noexcept
# 421 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).end()); }
# 429 "/usr/include/c++/5/bits/stl_map.h" 3
const_reverse_iterator crbegin() const noexcept
# 430 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).rbegin()); }
# 438 "/usr/include/c++/5/bits/stl_map.h" 3
const_reverse_iterator crend() const noexcept
# 439 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).rend()); }
# 447 "/usr/include/c++/5/bits/stl_map.h" 3
bool empty() const noexcept
# 448 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).empty()); }
# 452 "/usr/include/c++/5/bits/stl_map.h" 3
size_type size() const noexcept
# 453 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).size()); }
# 457 "/usr/include/c++/5/bits/stl_map.h" 3
size_type max_size() const noexcept
# 458 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).max_size()); }
# 474 "/usr/include/c++/5/bits/stl_map.h" 3
mapped_type &operator[](const key_type &__k)
# 475 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 479 "/usr/include/c++/5/bits/stl_map.h" 3
iterator __i = lower_bound(__k);
# 481 "/usr/include/c++/5/bits/stl_map.h" 3
if ((__i == this->end()) || key_comp()(__k, ((*__i).first))) {
# 483 "/usr/include/c++/5/bits/stl_map.h" 3
__i = ((_M_t)._M_emplace_hint_unique(__i, std::piecewise_construct, ((tuple< const _Key &> )(__k)), tuple< > ())); }
# 489 "/usr/include/c++/5/bits/stl_map.h" 3
return (*__i).second;
# 490 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 494 "/usr/include/c++/5/bits/stl_map.h" 3
mapped_type &operator[](key_type &&__k)
# 495 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 499 "/usr/include/c++/5/bits/stl_map.h" 3
iterator __i = lower_bound(__k);
# 501 "/usr/include/c++/5/bits/stl_map.h" 3
if ((__i == this->end()) || key_comp()(__k, ((*__i).first))) {
# 502 "/usr/include/c++/5/bits/stl_map.h" 3
__i = ((_M_t)._M_emplace_hint_unique(__i, std::piecewise_construct, std::forward_as_tuple(std::move(__k)), tuple< > ())); }
# 505 "/usr/include/c++/5/bits/stl_map.h" 3
return (*__i).second;
# 506 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 519 "/usr/include/c++/5/bits/stl_map.h" 3
mapped_type &at(const key_type &__k)
# 520 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 521 "/usr/include/c++/5/bits/stl_map.h" 3
iterator __i = lower_bound(__k);
# 522 "/usr/include/c++/5/bits/stl_map.h" 3
if ((__i == this->end()) || key_comp()(__k, ((*__i).first))) {
# 523 "/usr/include/c++/5/bits/stl_map.h" 3
__throw_out_of_range("map::at"); }
# 524 "/usr/include/c++/5/bits/stl_map.h" 3
return (*__i).second;
# 525 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 528 "/usr/include/c++/5/bits/stl_map.h" 3
const mapped_type &at(const key_type &__k) const
# 529 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 530 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator __i = lower_bound(__k);
# 531 "/usr/include/c++/5/bits/stl_map.h" 3
if ((__i == this->end()) || key_comp()(__k, ((*__i).first))) {
# 532 "/usr/include/c++/5/bits/stl_map.h" 3
__throw_out_of_range("map::at"); }
# 533 "/usr/include/c++/5/bits/stl_map.h" 3
return (*__i).second;
# 534 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 556 "/usr/include/c++/5/bits/stl_map.h" 3
template< class ..._Args> pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator, bool>
# 558 "/usr/include/c++/5/bits/stl_map.h" 3
emplace(_Args &&...__args)
# 559 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t)._M_emplace_unique(std::forward< _Args> (__args)...)); }
# 586 "/usr/include/c++/5/bits/stl_map.h" 3
template< class ..._Args> iterator
# 588 "/usr/include/c++/5/bits/stl_map.h" 3
emplace_hint(const_iterator __pos, _Args &&...__args)
# 589 "/usr/include/c++/5/bits/stl_map.h" 3
{
# 590 "/usr/include/c++/5/bits/stl_map.h" 3
return ((_M_t)._M_emplace_hint_unique(__pos, std::forward< _Args> (__args)...));
# 592 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 612 "/usr/include/c++/5/bits/stl_map.h" 3
pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator, bool> insert(const value_type &__x)
# 613 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t)._M_insert_unique(__x)); }
# 616 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Pair, class = typename enable_if< is_constructible< pair< const _Key, _Tp> , _Pair &&> ::value> ::type> pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator, bool>
# 620 "/usr/include/c++/5/bits/stl_map.h" 3
insert(_Pair &&__x)
# 621 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t)._M_insert_unique(std::forward< _Pair> (__x))); }
# 633 "/usr/include/c++/5/bits/stl_map.h" 3
void insert(initializer_list< pair< const _Key, _Tp> > __list)
# 634 "/usr/include/c++/5/bits/stl_map.h" 3
{ insert((__list.begin()), (__list.end())); }
# 662 "/usr/include/c++/5/bits/stl_map.h" 3
iterator insert(const_iterator __position, const value_type &__x)
# 666 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t)._M_insert_unique_(__position, __x)); }
# 669 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Pair, class = typename enable_if< is_constructible< pair< const _Key, _Tp> , _Pair &&> ::value> ::type> iterator
# 673 "/usr/include/c++/5/bits/stl_map.h" 3
insert(const_iterator __position, _Pair &&__x)
# 674 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t)._M_insert_unique_(__position, std::forward< _Pair> (__x)));
# 675 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 686 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _InputIterator> void
# 688 "/usr/include/c++/5/bits/stl_map.h" 3
insert(_InputIterator __first, _InputIterator __last)
# 689 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t)._M_insert_unique(__first, __last)); }
# 708 "/usr/include/c++/5/bits/stl_map.h" 3
iterator erase(const_iterator __position)
# 709 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).erase(__position)); }
# 712 "/usr/include/c++/5/bits/stl_map.h" 3
__attribute((__abi_tag__("cxx11" ))) iterator
# 714 "/usr/include/c++/5/bits/stl_map.h" 3
erase(iterator __position)
# 715 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).erase(__position)); }
# 744 "/usr/include/c++/5/bits/stl_map.h" 3
size_type erase(const key_type &__x)
# 745 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).erase(__x)); }
# 764 "/usr/include/c++/5/bits/stl_map.h" 3
iterator erase(const_iterator __first, const_iterator __last)
# 765 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).erase(__first, __last)); }
# 796 "/usr/include/c++/5/bits/stl_map.h" 3
void swap(map &__x) noexcept(_Alloc_traits::_S_nothrow_swap())
# 800 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t).swap(__x._M_t)); }
# 809 "/usr/include/c++/5/bits/stl_map.h" 3
void clear() noexcept
# 810 "/usr/include/c++/5/bits/stl_map.h" 3
{ ((_M_t).clear()); }
# 818 "/usr/include/c++/5/bits/stl_map.h" 3
key_compare key_comp() const
# 819 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).key_comp()); }
# 826 "/usr/include/c++/5/bits/stl_map.h" 3
value_compare value_comp() const
# 827 "/usr/include/c++/5/bits/stl_map.h" 3
{ return (value_compare)((_M_t).key_comp()); }
# 845 "/usr/include/c++/5/bits/stl_map.h" 3
iterator find(const key_type &__x)
# 846 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).find(__x)); }
# 870 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator find(const key_type &__x) const
# 871 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).find(__x)); }
# 891 "/usr/include/c++/5/bits/stl_map.h" 3
size_type count(const key_type &__x) const
# 892 "/usr/include/c++/5/bits/stl_map.h" 3
{ return (((_M_t).find(__x)) == ((_M_t).end())) ? 0 : 1; }
# 915 "/usr/include/c++/5/bits/stl_map.h" 3
iterator lower_bound(const key_type &__x)
# 916 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).lower_bound(__x)); }
# 940 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator lower_bound(const key_type &__x) const
# 941 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).lower_bound(__x)); }
# 960 "/usr/include/c++/5/bits/stl_map.h" 3
iterator upper_bound(const key_type &__x)
# 961 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).upper_bound(__x)); }
# 980 "/usr/include/c++/5/bits/stl_map.h" 3
const_iterator upper_bound(const key_type &__x) const
# 981 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).upper_bound(__x)); }
# 1009 "/usr/include/c++/5/bits/stl_map.h" 3
pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator, typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator> equal_range(const key_type &__x)
# 1010 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).equal_range(__x)); }
# 1038 "/usr/include/c++/5/bits/stl_map.h" 3
pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_iterator, typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_iterator> equal_range(const key_type &__x) const
# 1039 "/usr/include/c++/5/bits/stl_map.h" 3
{ return ((_M_t).equal_range(__x)); }
# 1050 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _K1, class _T1, class _C1, class _A1> friend bool operator==(const std::map< _K1, _T1, _C1, _A1> &, const std::map< _K1, _T1, _C1, _A1> &);
# 1055 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _K1, class _T1, class _C1, class _A1> friend bool operator<(const std::map< _K1, _T1, _C1, _A1> &, const std::map< _K1, _T1, _C1, _A1> &);
# 1059 "/usr/include/c++/5/bits/stl_map.h" 3
};
# 1071 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1073 "/usr/include/c++/5/bits/stl_map.h" 3
operator==(const map< _Key, _Tp, _Compare, _Alloc> &__x, const map< _Key, _Tp, _Compare, _Alloc> &
# 1074 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1075 "/usr/include/c++/5/bits/stl_map.h" 3
{ return (__x._M_t) == (__y._M_t); }
# 1088 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1090 "/usr/include/c++/5/bits/stl_map.h" 3
operator<(const map< _Key, _Tp, _Compare, _Alloc> &__x, const map< _Key, _Tp, _Compare, _Alloc> &
# 1091 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1092 "/usr/include/c++/5/bits/stl_map.h" 3
{ return (__x._M_t) < (__y._M_t); }
# 1095 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1097 "/usr/include/c++/5/bits/stl_map.h" 3
operator!=(const map< _Key, _Tp, _Compare, _Alloc> &__x, const map< _Key, _Tp, _Compare, _Alloc> &
# 1098 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1099 "/usr/include/c++/5/bits/stl_map.h" 3
{ return !(__x == __y); }
# 1102 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1104 "/usr/include/c++/5/bits/stl_map.h" 3
operator>(const map< _Key, _Tp, _Compare, _Alloc> &__x, const map< _Key, _Tp, _Compare, _Alloc> &
# 1105 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1106 "/usr/include/c++/5/bits/stl_map.h" 3
{ return __y < __x; }
# 1109 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1111 "/usr/include/c++/5/bits/stl_map.h" 3
operator<=(const map< _Key, _Tp, _Compare, _Alloc> &__x, const map< _Key, _Tp, _Compare, _Alloc> &
# 1112 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1113 "/usr/include/c++/5/bits/stl_map.h" 3
{ return !(__y < __x); }
# 1116 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1118 "/usr/include/c++/5/bits/stl_map.h" 3
operator>=(const map< _Key, _Tp, _Compare, _Alloc> &__x, const map< _Key, _Tp, _Compare, _Alloc> &
# 1119 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1120 "/usr/include/c++/5/bits/stl_map.h" 3
{ return !(__x < __y); }
# 1123 "/usr/include/c++/5/bits/stl_map.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline void
# 1125 "/usr/include/c++/5/bits/stl_map.h" 3
swap(map< _Key, _Tp, _Compare, _Alloc> &__x, map< _Key, _Tp, _Compare, _Alloc> &
# 1126 "/usr/include/c++/5/bits/stl_map.h" 3
__y)
# 1127 "/usr/include/c++/5/bits/stl_map.h" 3
{ (__x.swap(__y)); }
# 1130 "/usr/include/c++/5/bits/stl_map.h" 3
}
# 64 "/usr/include/c++/5/bits/stl_multimap.h" 3
namespace std __attribute((__visibility__("default"))) {
# 92 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class
# 93 "/usr/include/c++/5/bits/stl_multimap.h" 3
_Compare = less< _Key> , class
# 94 "/usr/include/c++/5/bits/stl_multimap.h" 3
_Alloc = allocator< pair< const _Key, _Tp> > >
# 95 "/usr/include/c++/5/bits/stl_multimap.h" 3
class multimap {
# 98 "/usr/include/c++/5/bits/stl_multimap.h" 3
public: typedef _Key key_type;
# 99 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef _Tp mapped_type;
# 100 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef pair< const _Key, _Tp> value_type;
# 101 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef _Compare key_compare;
# 102 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef _Alloc allocator_type;
# 106 "/usr/include/c++/5/bits/stl_multimap.h" 3
private: typedef typename _Alloc::value_type _Alloc_value_type;
# 113 "/usr/include/c++/5/bits/stl_multimap.h" 3
public: class value_compare : public binary_function< pair< const _Key, _Tp> , pair< const _Key, _Tp> , bool> {
# 116 "/usr/include/c++/5/bits/stl_multimap.h" 3
friend class multimap;
# 118 "/usr/include/c++/5/bits/stl_multimap.h" 3
protected: _Compare comp;
# 120 "/usr/include/c++/5/bits/stl_multimap.h" 3
value_compare(_Compare __c) : comp(__c)
# 121 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 124 "/usr/include/c++/5/bits/stl_multimap.h" 3
public: bool operator()(const typename ::std::multimap< _Key, _Tp, _Compare, _Alloc> ::value_type &__x, const typename ::std::multimap< _Key, _Tp, _Compare, _Alloc> ::value_type &__y) const
# 125 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return (comp)((__x.first), (__y.first)); }
# 126 "/usr/include/c++/5/bits/stl_multimap.h" 3
};
# 131 "/usr/include/c++/5/bits/stl_multimap.h" 3
private: typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other _Pair_alloc_type;
# 134 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> _Rep_type;
# 136 "/usr/include/c++/5/bits/stl_multimap.h" 3
_Rep_type _M_t;
# 138 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> _Alloc_traits;
# 143 "/usr/include/c++/5/bits/stl_multimap.h" 3
public: typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::pointer pointer;
# 144 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_pointer const_pointer;
# 145 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::reference reference;
# 146 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_reference const_reference;
# 147 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator iterator;
# 148 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_iterator const_iterator;
# 149 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::size_type size_type;
# 150 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::difference_type difference_type;
# 151 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::reverse_iterator reverse_iterator;
# 152 "/usr/include/c++/5/bits/stl_multimap.h" 3
typedef typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_reverse_iterator const_reverse_iterator;
# 160 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _M_t()
# 164 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 172 "/usr/include/c++/5/bits/stl_multimap.h" 3
explicit multimap(const _Compare &__comp, const allocator_type &
# 173 "/usr/include/c++/5/bits/stl_multimap.h" 3
__a = allocator_type()) : _M_t(__comp, (_Pair_alloc_type)__a)
# 174 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 183 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(const multimap &__x) : _M_t(__x._M_t)
# 184 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 194 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(multimap &&__x) noexcept(is_nothrow_copy_constructible< _Compare> ::value) : _M_t(std::move(__x._M_t))
# 196 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 208 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(initializer_list< pair< const _Key, _Tp> > __l, const _Compare &
# 209 "/usr/include/c++/5/bits/stl_multimap.h" 3
__comp = _Compare(), const allocator_type &
# 210 "/usr/include/c++/5/bits/stl_multimap.h" 3
__a = allocator_type()) : _M_t(__comp, (_Pair_alloc_type)__a)
# 212 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t)._M_insert_equal((__l.begin()), (__l.end()))); }
# 216 "/usr/include/c++/5/bits/stl_multimap.h" 3
explicit multimap(const allocator_type &__a) : _M_t(_Compare(), (_Pair_alloc_type)__a)
# 217 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 220 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(const multimap &__m, const allocator_type &__a) : _M_t(__m._M_t, (_Pair_alloc_type)__a)
# 221 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 224 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(multimap &&__m, const allocator_type &__a) noexcept(is_nothrow_copy_constructible< _Compare> ::value && _Alloc_traits::_S_always_equal()) : _M_t(std::move(__m._M_t), (_Pair_alloc_type)__a)
# 227 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ }
# 230 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(initializer_list< pair< const _Key, _Tp> > __l, const allocator_type &__a) : _M_t(_Compare(), (_Pair_alloc_type)__a)
# 232 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t)._M_insert_equal((__l.begin()), (__l.end()))); }
# 235 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _InputIterator>
# 236 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(_InputIterator __first, _InputIterator __last, const allocator_type &
# 237 "/usr/include/c++/5/bits/stl_multimap.h" 3
__a) : _M_t(_Compare(), (_Pair_alloc_type)__a)
# 239 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t)._M_insert_equal(__first, __last)); }
# 251 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _InputIterator>
# 252 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(_InputIterator __first, _InputIterator __last) : _M_t()
# 254 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t)._M_insert_equal(__first, __last)); }
# 267 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _InputIterator>
# 268 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap(_InputIterator __first, _InputIterator __last, const _Compare &
# 269 "/usr/include/c++/5/bits/stl_multimap.h" 3
__comp, const allocator_type &
# 270 "/usr/include/c++/5/bits/stl_multimap.h" 3
__a = allocator_type()) : _M_t(__comp, (_Pair_alloc_type)__a)
# 272 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t)._M_insert_equal(__first, __last)); }
# 291 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap &operator=(const multimap &__x)
# 292 "/usr/include/c++/5/bits/stl_multimap.h" 3
{
# 293 "/usr/include/c++/5/bits/stl_multimap.h" 3
(_M_t) = (__x._M_t);
# 294 "/usr/include/c++/5/bits/stl_multimap.h" 3
return *this;
# 295 "/usr/include/c++/5/bits/stl_multimap.h" 3
}
# 300 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap &operator=(multimap &&) = default;
# 314 "/usr/include/c++/5/bits/stl_multimap.h" 3
multimap &operator=(initializer_list< pair< const _Key, _Tp> > __l)
# 315 "/usr/include/c++/5/bits/stl_multimap.h" 3
{
# 316 "/usr/include/c++/5/bits/stl_multimap.h" 3
((_M_t)._M_assign_equal((__l.begin()), (__l.end())));
# 317 "/usr/include/c++/5/bits/stl_multimap.h" 3
return *this;
# 318 "/usr/include/c++/5/bits/stl_multimap.h" 3
}
# 323 "/usr/include/c++/5/bits/stl_multimap.h" 3
allocator_type get_allocator() const noexcept
# 324 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return (allocator_type)((_M_t).get_allocator()); }
# 333 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator begin() noexcept
# 334 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).begin()); }
# 342 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator begin() const noexcept
# 343 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).begin()); }
# 351 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator end() noexcept
# 352 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).end()); }
# 360 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator end() const noexcept
# 361 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).end()); }
# 369 "/usr/include/c++/5/bits/stl_multimap.h" 3
reverse_iterator rbegin() noexcept
# 370 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).rbegin()); }
# 378 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_reverse_iterator rbegin() const noexcept
# 379 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).rbegin()); }
# 387 "/usr/include/c++/5/bits/stl_multimap.h" 3
reverse_iterator rend() noexcept
# 388 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).rend()); }
# 396 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_reverse_iterator rend() const noexcept
# 397 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).rend()); }
# 406 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator cbegin() const noexcept
# 407 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).begin()); }
# 415 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator cend() const noexcept
# 416 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).end()); }
# 424 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_reverse_iterator crbegin() const noexcept
# 425 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).rbegin()); }
# 433 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_reverse_iterator crend() const noexcept
# 434 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).rend()); }
# 440 "/usr/include/c++/5/bits/stl_multimap.h" 3
bool empty() const noexcept
# 441 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).empty()); }
# 445 "/usr/include/c++/5/bits/stl_multimap.h" 3
size_type size() const noexcept
# 446 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).size()); }
# 450 "/usr/include/c++/5/bits/stl_multimap.h" 3
size_type max_size() const noexcept
# 451 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).max_size()); }
# 471 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class ..._Args> iterator
# 473 "/usr/include/c++/5/bits/stl_multimap.h" 3
emplace(_Args &&...__args)
# 474 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t)._M_emplace_equal(std::forward< _Args> (__args)...)); }
# 498 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class ..._Args> iterator
# 500 "/usr/include/c++/5/bits/stl_multimap.h" 3
emplace_hint(const_iterator __pos, _Args &&...__args)
# 501 "/usr/include/c++/5/bits/stl_multimap.h" 3
{
# 502 "/usr/include/c++/5/bits/stl_multimap.h" 3
return ((_M_t)._M_emplace_hint_equal(__pos, std::forward< _Args> (__args)...));
# 504 "/usr/include/c++/5/bits/stl_multimap.h" 3
}
# 520 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator insert(const value_type &__x)
# 521 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t)._M_insert_equal(__x)); }
# 524 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Pair, class = typename enable_if< is_constructible< pair< const _Key, _Tp> , _Pair &&> ::value> ::type> iterator
# 528 "/usr/include/c++/5/bits/stl_multimap.h" 3
insert(_Pair &&__x)
# 529 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t)._M_insert_equal(std::forward< _Pair> (__x))); }
# 554 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator insert(const_iterator __position, const value_type &__x)
# 558 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t)._M_insert_equal_(__position, __x)); }
# 561 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Pair, class = typename enable_if< is_constructible< pair< const _Key, _Tp> , _Pair &&> ::value> ::type> iterator
# 565 "/usr/include/c++/5/bits/stl_multimap.h" 3
insert(const_iterator __position, _Pair &&__x)
# 566 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t)._M_insert_equal_(__position, std::forward< _Pair> (__x)));
# 567 "/usr/include/c++/5/bits/stl_multimap.h" 3
}
# 579 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _InputIterator> void
# 581 "/usr/include/c++/5/bits/stl_multimap.h" 3
insert(_InputIterator __first, _InputIterator __last)
# 582 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t)._M_insert_equal(__first, __last)); }
# 593 "/usr/include/c++/5/bits/stl_multimap.h" 3
void insert(initializer_list< pair< const _Key, _Tp> > __l)
# 594 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ (this->insert((__l.begin()), (__l.end()))); }
# 614 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator erase(const_iterator __position)
# 615 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).erase(__position)); }
# 618 "/usr/include/c++/5/bits/stl_multimap.h" 3
__attribute((__abi_tag__("cxx11" ))) iterator
# 620 "/usr/include/c++/5/bits/stl_multimap.h" 3
erase(iterator __position)
# 621 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).erase(__position)); }
# 650 "/usr/include/c++/5/bits/stl_multimap.h" 3
size_type erase(const key_type &__x)
# 651 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).erase(__x)); }
# 671 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator erase(const_iterator __first, const_iterator __last)
# 672 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).erase(__first, __last)); }
# 706 "/usr/include/c++/5/bits/stl_multimap.h" 3
void swap(multimap &__x) noexcept(_Alloc_traits::_S_nothrow_swap())
# 710 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t).swap(__x._M_t)); }
# 719 "/usr/include/c++/5/bits/stl_multimap.h" 3
void clear() noexcept
# 720 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ ((_M_t).clear()); }
# 728 "/usr/include/c++/5/bits/stl_multimap.h" 3
key_compare key_comp() const
# 729 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).key_comp()); }
# 736 "/usr/include/c++/5/bits/stl_multimap.h" 3
value_compare value_comp() const
# 737 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return (value_compare)((_M_t).key_comp()); }
# 754 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator find(const key_type &__x)
# 755 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).find(__x)); }
# 778 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator find(const key_type &__x) const
# 779 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).find(__x)); }
# 796 "/usr/include/c++/5/bits/stl_multimap.h" 3
size_type count(const key_type &__x) const
# 797 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).count(__x)); }
# 820 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator lower_bound(const key_type &__x)
# 821 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).lower_bound(__x)); }
# 845 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator lower_bound(const key_type &__x) const
# 846 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).lower_bound(__x)); }
# 865 "/usr/include/c++/5/bits/stl_multimap.h" 3
iterator upper_bound(const key_type &__x)
# 866 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).upper_bound(__x)); }
# 885 "/usr/include/c++/5/bits/stl_multimap.h" 3
const_iterator upper_bound(const key_type &__x) const
# 886 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).upper_bound(__x)); }
# 912 "/usr/include/c++/5/bits/stl_multimap.h" 3
pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator, typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::iterator> equal_range(const key_type &__x)
# 913 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).equal_range(__x)); }
# 939 "/usr/include/c++/5/bits/stl_multimap.h" 3
pair< typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_iterator, typename _Rb_tree< _Key, pair< const _Key, _Tp> , _Select1st< pair< const _Key, _Tp> > , _Compare, typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< pair< const _Key, _Tp> > ::other> ::const_iterator> equal_range(const key_type &__x) const
# 940 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return ((_M_t).equal_range(__x)); }
# 951 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _K1, class _T1, class _C1, class _A1> friend bool operator==(const std::multimap< _K1, _T1, _C1, _A1> &, const std::multimap< _K1, _T1, _C1, _A1> &);
# 956 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _K1, class _T1, class _C1, class _A1> friend bool operator<(const std::multimap< _K1, _T1, _C1, _A1> &, const std::multimap< _K1, _T1, _C1, _A1> &);
# 960 "/usr/include/c++/5/bits/stl_multimap.h" 3
};
# 972 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 974 "/usr/include/c++/5/bits/stl_multimap.h" 3
operator==(const multimap< _Key, _Tp, _Compare, _Alloc> &__x, const multimap< _Key, _Tp, _Compare, _Alloc> &
# 975 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 976 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return (__x._M_t) == (__y._M_t); }
# 989 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 991 "/usr/include/c++/5/bits/stl_multimap.h" 3
operator<(const multimap< _Key, _Tp, _Compare, _Alloc> &__x, const multimap< _Key, _Tp, _Compare, _Alloc> &
# 992 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 993 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return (__x._M_t) < (__y._M_t); }
# 996 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 998 "/usr/include/c++/5/bits/stl_multimap.h" 3
operator!=(const multimap< _Key, _Tp, _Compare, _Alloc> &__x, const multimap< _Key, _Tp, _Compare, _Alloc> &
# 999 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 1000 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return !(__x == __y); }
# 1003 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1005 "/usr/include/c++/5/bits/stl_multimap.h" 3
operator>(const multimap< _Key, _Tp, _Compare, _Alloc> &__x, const multimap< _Key, _Tp, _Compare, _Alloc> &
# 1006 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 1007 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return __y < __x; }
# 1010 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1012 "/usr/include/c++/5/bits/stl_multimap.h" 3
operator<=(const multimap< _Key, _Tp, _Compare, _Alloc> &__x, const multimap< _Key, _Tp, _Compare, _Alloc> &
# 1013 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 1014 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return !(__y < __x); }
# 1017 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline bool
# 1019 "/usr/include/c++/5/bits/stl_multimap.h" 3
operator>=(const multimap< _Key, _Tp, _Compare, _Alloc> &__x, const multimap< _Key, _Tp, _Compare, _Alloc> &
# 1020 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 1021 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ return !(__x < __y); }
# 1024 "/usr/include/c++/5/bits/stl_multimap.h" 3
template< class _Key, class _Tp, class _Compare, class _Alloc> inline void
# 1026 "/usr/include/c++/5/bits/stl_multimap.h" 3
swap(multimap< _Key, _Tp, _Compare, _Alloc> &__x, multimap< _Key, _Tp, _Compare, _Alloc> &
# 1027 "/usr/include/c++/5/bits/stl_multimap.h" 3
__y)
# 1028 "/usr/include/c++/5/bits/stl_multimap.h" 3
{ (__x.swap(__y)); }
# 1031 "/usr/include/c++/5/bits/stl_multimap.h" 3
}
# 10 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"

# 10 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline float minf(const float &a, const float &b) { return (a < b) ? a : b; }
# 11 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline float maxf(const float &a, const float &b) { return (a > b) ? a : b; }
# 18 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline int ceil_int_div(int numer, int denom) {
# 19 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return (int)ceilf(((float)numer) / ((float)denom));
# 20 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 21 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline int floor_int_div(int numer, int denom) {
# 22 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return (int)floorf(((float)numer) / ((float)denom));
# 23 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 25 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
template< class T> inline T
# 26 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
lerp(T &val1, T &val2, float t) {
# 27 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return (val1 * ((1.0F) - t)) + (val2 * t);
# 29 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 31 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
template< class T> inline T
# 32 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
interpolateBary(T &v0, T &v1, T &v2, float
# 33 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
alpha, float beta, float gamma) {
# 34 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return ((v0 * alpha) + (v1 * beta)) + (v2 * gamma);
# 37 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 46 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline float dist2d(const float &x1, const float &y1, const float &
# 47 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
x2, const float &y2) {
# 48 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return sqrtf(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));
# 49 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 52 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline float sphereVolume(float r, int dimension) {
# 54 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
switch (dimension) {
# 55 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 0: return (1.0F);
# 56 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 1: return (2.0F) * r;
# 57 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 2: return ((((1.0F)) * (3.141592653589793116)) * r) * r;
# 58 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 3: return (((((4.0F) / (3.0F)) * (3.141592653589793116)) * r) * r) * r;
# 59 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 4: return (((((((1.0F) / (2.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r;
# 60 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 5: return ((((((((8.0F) / (15.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r;
# 61 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 6: return ((((((((((1.0F) / (6.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r) * r;
# 62 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 7: return (((((((((((16.0F) / (105.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r) * r) * r;
# 63 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 8: return (((((((((((((1.0F) / (24.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r) * r) * r) * r;
# 64 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 9: return ((((((((((((((32.0F) / (945.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r) * r) * r) * r) * r;
# 65 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 10: return ((((((((((((((((1.0F) / (120.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r) * r) * r) * r) * r) * r;
# 66 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
case 11: return (((((((((((((((((64.0F) / (10395.0F)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * (3.141592653589793116)) * r) * r) * r) * r) * r) * r) * r) * r) * r) * r) * r;
# 67 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
default: break;
# 68 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
} ;
# 70 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return (0.0F);
# 71 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 81 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline float getAngle(float y, float x) {
# 86 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
float ay = fabsf(y);
# 87 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
float ax = fabsf(x);
# 89 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
float angle1q, angle;
# 91 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
if (ax == (0.0F)) {
# 92 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
angle1q = ((3.141592653589793116) * ((0.5F)));
# 93 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
} else {
# 94 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
angle1q = atan(ay / ax);
# 95 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 97 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
if (y >= (0)) {
# 98 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
if (x >= (0)) {
# 100 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
angle = angle1q;
# 101 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
} else {
# 103 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
angle = ((3.141592653589793116) - angle1q);
# 104 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 105 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
} else {
# 106 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
if (x >= (0)) {
# 108 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
angle = ((((2.0F)) * (3.141592653589793116)) - angle1q);
# 109 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
} else {
# 111 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
angle = ((3.141592653589793116) + angle1q);
# 112 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 113 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 115 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
return angle;
# 116 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 118 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
inline void clampInplace(float &val, const float &vmin, const float &vmax) {
# 119 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
if (val < vmin) { val = vmin; }
# 120 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
if (val > vmax) { val = vmax; }
# 121 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/maths.h"
}
# 30 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
struct cvec2f { float x, y; };
# 31 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
struct cvec3f { float x, y, z; };
# 32 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
struct cvec4f { float x, y, z, w; };
# 34 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
struct cvec2i { int x, y; };
# 35 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
struct cvec3i { int x, y, z; };
# 36 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
struct cvec4i { int x, y, z, w; };
# 38 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void zerovec(cvec2f &v) { (v.x) = (0.0F); (v.y) = (0.0F); }
# 39 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void zerovec(cvec3f &v) { (v.x) = (0.0F); (v.y) = (0.0F); (v.z) = (0.0F); }
# 40 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void zerovec(cvec4f &v) { (v.x) = (0.0F); (v.y) = (0.0F); (v.z) = (0.0F); (v.w) = (0.0F); }
# 42 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void zerovec(cvec2i &v) { (v.x) = 0; (v.y) = 0; }
# 43 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void zerovec(cvec3i &v) { (v.x) = 0; (v.y) = 0; (v.z) = 0; }
# 44 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void zerovec(cvec4i &v) { (v.x) = 0; (v.y) = 0; (v.z) = 0; (v.w) = 0; }
# 46 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f gencvec2f(const float &x, const float &y) { cvec2f v; (v.x) = x; (v.y) = y; return v; }
# 47 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f gencvec3f(const float &x, const float &y, const float &z) { cvec3f v; (v.x) = x; (v.y) = y; (v.z) = z; return v; }
# 48 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f gencvec4f(const float &x, const float &y, const float &z, const float &w) { cvec4f v; (v.x) = x; (v.y) = y; (v.z) = z; (v.w) = w; return v; }
# 50 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2i gencvec2i(const int &x, const int &y) { cvec2i v; (v.x) = x; (v.y) = y; return v; }
# 51 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3i gencvec3i(const int &x, const int &y, const int &z) { cvec3i v; (v.x) = x; (v.y) = y; (v.z) = z; return v; }
# 52 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4i gencvec4i(const int &x, const int &y, const int &z, const int &w) { cvec4i v; (v.x) = x; (v.y) = y; (v.z) = z; (v.w) = w; return v; }
# 54 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f negative(const cvec2f &v) { cvec2f n; (n.x) = (-(v.x)); (n.y) = (-(v.y)); return n; }
# 55 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f negative(const cvec3f &v) { cvec3f n; (n.x) = (-(v.x)); (n.y) = (-(v.y)); (n.z) = (-(v.z)); return n; }
# 56 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f negative(const cvec4f &v) { cvec4f n; (n.x) = (-(v.x)); (n.y) = (-(v.y)); (n.z) = (-(v.z)); (n.w) = (-(v.w)); return n; }
# 58 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline float magsqr(const cvec2f &v) { return ((v.x) * (v.x)) + ((v.y) * (v.y)); }
# 59 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline float magsqr(const cvec3f &v) { return (((v.x) * (v.x)) + ((v.y) * (v.y))) + ((v.z) * (v.z)); }
# 60 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline float magsqr(const cvec4f &v) { return ((((v.x) * (v.x)) + ((v.y) * (v.y))) + ((v.z) * (v.z))) + ((v.w) * (v.w)); }
# 63 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f addvec(const cvec2f &v1, const cvec2f &v2) { cvec2f s; (s.x) = ((v1.x) + (v2.x)); (s.y) = ((v1.y) + (v2.y)); return s; }
# 64 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f addvec(const cvec3f &v1, const cvec3f &v2) { cvec3f s; (s.x) = ((v1.x) + (v2.x)); (s.y) = ((v1.y) + (v2.y)); (s.z) = ((v1.z) + (v2.z)); return s; }
# 65 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f addvec(const cvec4f &v1, const cvec4f &v2) { cvec4f s; (s.x) = ((v1.x) + (v2.x)); (s.y) = ((v1.y) + (v2.y)); (s.z) = ((v1.z) + (v2.z)); (s.w) = ((v1.w) + (v2.w)); return s; }
# 67 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f subvec(const cvec2f &v1, const cvec2f &v2) { cvec2f s; (s.x) = ((v1.x) - (v2.x)); (s.y) = ((v1.y) - (v2.y)); return s; }
# 68 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f subvec(const cvec3f &v1, const cvec3f &v2) { cvec3f s; (s.x) = ((v1.x) - (v2.x)); (s.y) = ((v1.y) - (v2.y)); (s.z) = ((v1.z) - (v2.z)); return s; }
# 69 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f subvec(const cvec4f &v1, const cvec4f &v2) { cvec4f s; (s.x) = ((v1.x) - (v2.x)); (s.y) = ((v1.y) - (v2.y)); (s.z) = ((v1.z) - (v2.z)); (s.w) = ((v1.w) - (v2.w)); return s; }
# 71 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f mulvec(const cvec2f &v1, const float &k) { cvec2f s; (s.x) = ((v1.x) * k); (s.y) = ((v1.y) * k); return s; }
# 72 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f mulvec(const cvec3f &v1, const float &k) { cvec3f s; (s.x) = ((v1.x) * k); (s.y) = ((v1.y) * k); (s.z) = ((v1.z) * k); return s; }
# 73 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f mulvec(const cvec4f &v1, const float &k) { cvec4f s; (s.x) = ((v1.x) * k); (s.y) = ((v1.y) * k); (s.z) = ((v1.z) * k); (s.w) = ((v1.w) * k); return s; }
# 75 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void mulvecInplace(cvec2f &v1, const float &k) { (v1.x) = ((v1.x) * k); (v1.y) = ((v1.y) * k); }
# 76 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void mulvecInplace(cvec3f &v1, const float &k) { (v1.x) = ((v1.x) * k); (v1.y) = ((v1.y) * k); (v1.z) = ((v1.z) * k); }
# 77 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void mulvecInplace(cvec4f &v1, const float &k) { (v1.x) = ((v1.x) * k); (v1.y) = ((v1.y) * k); (v1.z) = ((v1.z) * k); (v1.w) = ((v1.w) * k); }
# 79 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f operator+(const cvec2f &v1, const cvec2f &v2) { return addvec(v1, v2); }
# 80 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f operator+(const cvec3f &v1, const cvec3f &v2) { return addvec(v1, v2); }
# 81 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f operator+(const cvec4f &v1, const cvec4f &v2) { return addvec(v1, v2); }
# 83 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f operator-(const cvec2f &v1, const cvec2f &v2) { return subvec(v1, v2); }
# 84 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f operator-(const cvec3f &v1, const cvec3f &v2) { return subvec(v1, v2); }
# 85 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f operator-(const cvec4f &v1, const cvec4f &v2) { return subvec(v1, v2); }
# 87 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f operator*(const cvec2f &v1, const float &k) { return mulvec(v1, k); }
# 88 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f operator*(const cvec3f &v1, const float &k) { return mulvec(v1, k); }
# 89 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f operator*(const cvec4f &v1, const float &k) { return mulvec(v1, k); }
# 91 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f operator*(const float &k, const cvec2f &v1) { return mulvec(v1, k); }
# 92 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f operator*(const float &k, const cvec3f &v1) { return mulvec(v1, k); }
# 93 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f operator*(const float &k, const cvec4f &v1) { return mulvec(v1, k); }
# 95 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f &operator+=(cvec2f &v1, const cvec2f &v2) { (v1.x) += (v2.x); (v1.y) += (v2.y); return v1; }
# 96 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f &operator+=(cvec3f &v1, const cvec3f &v2) { (v1.x) += (v2.x); (v1.y) += (v2.y); (v1.z) += (v2.z); return v1; }
# 97 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f &operator+=(cvec4f &v1, const cvec4f &v2) { (v1.x) += (v2.x); (v1.y) += (v2.y); (v1.z) += (v2.z); (v1.w) += (v2.w); return v1; }
# 99 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f &operator-=(cvec2f &v1, const cvec2f &v2) { (v1.x) -= (v2.x); (v1.y) -= (v2.y); return v1; }
# 100 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f &operator-=(cvec3f &v1, const cvec3f &v2) { (v1.x) -= (v2.x); (v1.y) -= (v2.y); (v1.z) -= (v2.z); return v1; }
# 101 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f &operator-=(cvec4f &v1, const cvec4f &v2) { (v1.x) -= (v2.x); (v1.y) -= (v2.y); (v1.z) -= (v2.z); (v1.w) -= (v2.w); return v1; }
# 103 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec2f &operator*=(cvec2f &v1, const float &k) { (v1.x) *= k; (v1.y) *= k; return v1; }
# 104 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f &operator*=(cvec3f &v1, const float &k) { (v1.x) *= k; (v1.y) *= k; (v1.z) *= k; return v1; }
# 105 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec4f &operator*=(cvec4f &v1, const float &k) { (v1.x) *= k; (v1.y) *= k; (v1.z) *= k; (v1.w) *= k; return v1; }
# 107 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline float dotvec(const cvec2f &v1, const cvec2f &v2) { return ((v1.x) * (v2.x)) + ((v1.y) * (v2.y)); }
# 108 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline float dotvec(const cvec3f &v1, const cvec3f &v2) { return (((v1.x) * (v2.x)) + ((v1.y) * (v2.y))) + ((v1.z) * (v2.z)); }
# 109 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline float dotvec(const cvec4f &v1, const cvec4f &v2) { return ((((v1.x) * (v2.x)) + ((v1.y) * (v2.y))) + ((v1.z) * (v2.z))) + ((v1.w) * (v2.w)); }
# 111 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool equalvec(const cvec2f &v1, const cvec2f &v2) { return ((v1.x) == (v2.x)) && ((v1.y) == (v2.y)); }
# 112 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool equalvec(const cvec3f &v1, const cvec3f &v2) { return ((v1.x) == (v2.x)) && ((v1.y) == (v2.y)) && ((v1.z) == (v2.z)); }
# 113 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool equalvec(const cvec4f &v1, const cvec4f &v2) { return ((v1.x) == (v2.x)) && ((v1.y) == (v2.y)) && ((v1.z) == (v2.z)) && ((v1.w) == (v2.w)); }
# 115 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool operator==(const cvec2f &v1, const cvec2f &v2) { return equalvec(v1, v2); }
# 116 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool operator==(const cvec3f &v1, const cvec3f &v2) { return equalvec(v1, v2); }
# 117 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool operator==(const cvec4f &v1, const cvec4f &v2) { return equalvec(v1, v2); }
# 119 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool operator!=(const cvec2f &v1, const cvec2f &v2) { return !equalvec(v1, v2); }
# 120 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool operator!=(const cvec3f &v1, const cvec3f &v2) { return !equalvec(v1, v2); }
# 121 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline bool operator!=(const cvec4f &v1, const cvec4f &v2) { return !equalvec(v1, v2); }
# 123 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void clampInplace(float & val, const float & vmin = (0.0F), const float & vmax = (1.0F));
# 124 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void clampInplace(cvec2f &v) { clampInplace(v.x); clampInplace(v.y); }
# 125 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void clampInplace(cvec3f &v) { clampInplace(v.x); clampInplace(v.y); clampInplace(v.z); }
# 126 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void clampInplace(cvec4f &v) { clampInplace(v.x); clampInplace(v.y); clampInplace(v.z); clampInplace(v.w); }
# 128 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f cvec4fxyz(cvec4f &v) { return gencvec3f(v.x, v.y, v.z); }
# 130 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> inline void disp2(const T &v) { printf("% 0.2f % 0.2f", (v.x), (v.y)); }
# 131 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> inline void disp3(const T &v) { printf("% 0.2f % 0.2f % 0.2f", (v.x), (v.y), (v.z)); }
# 132 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> inline void disp4(const T &v) { printf("% 0.2f % 0.2f % 0.2f % 0.2f", (v.x), (v.y), (v.z), (v.w)); }
# 134 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> cvec2f getcvec2f(const T &v) { cvec2f v2; (v2.x) = (v.x); (v2.y) = (v.y); return v2; }
# 135 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> cvec3f getcvec3f(const T &v) { cvec3f v3; (v3.x) = (v.x); (v3.y) = (v.y); (v3.z) = (v.z); return v3; }
# 137 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> inline float magvec(const T &v) { return sqrtf(magsqr(v)); }
# 139 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> inline void normalizeInplace(T &v) {
# 140 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
float m = magvec(v);
# 141 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
if (m != (0.0F)) { mulvecInplace(v, (1.0F) / m); }
# 142 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
}
# 144 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
template< class T> inline T lerp(const T &a, const T &b, float t) {
# 145 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
return addvec(mulvec(a, (1.0F) - t), mulvec(b, t));
# 146 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
}
# 148 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline cvec3f cross(const cvec3f &v1, const cvec3f &v2)
# 149 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
{
# 150 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
cvec3f crossprod;
# 151 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(crossprod.x) = (((v1.y) * (v2.z)) - ((v1.z) * (v2.y)));
# 152 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(crossprod.y) = (((v1.z) * (v2.x)) - ((v1.x) * (v2.z)));
# 153 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(crossprod.z) = (((v1.x) * (v2.y)) - ((v1.y) * (v2.x)));
# 154 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
return crossprod;
# 155 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
}
# 164 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
inline void matmultvec4f(const float *matrix, const cvec4f &v, cvec4f &ssv)
# 165 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
{
# 166 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(ssv.x) = (((((matrix[0]) * (v.x)) + ((matrix[4]) * (v.y))) + ((matrix[8]) * (v.z))) + ((matrix[12]) * (v.w)));
# 167 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(ssv.y) = (((((matrix[1]) * (v.x)) + ((matrix[5]) * (v.y))) + ((matrix[9]) * (v.z))) + ((matrix[13]) * (v.w)));
# 168 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(ssv.z) = (((((matrix[2]) * (v.x)) + ((matrix[6]) * (v.y))) + ((matrix[10]) * (v.z))) + ((matrix[14]) * (v.w)));
# 169 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
(ssv.w) = (((((matrix[3]) * (v.x)) + ((matrix[7]) * (v.y))) + ((matrix[11]) * (v.z))) + ((matrix[15]) * (v.w)));
# 170 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/api/include/piko/cvec.h"
}
# 19 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
using namespace std;
# 22 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float B(int i, float t) {
# 23 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 0) { return (((1.0F) - t) * ((1.0F) - t)) * ((1.0F) - t); } else {
# 24 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 1) { return (((3.0F) * t) * ((1.0F) - t)) * ((1.0F) - t); } else {
# 25 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 2) { return (((3.0F) * t) * t) * ((1.0F) - t); } else {
# 26 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 3) { return (t * t) * t; } } } }
# 27 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
return (0.0F);
# 28 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 30 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float dB(int i, float t) {
# 31 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 0) { return ((-(3.0F)) * ((1.0F) - t)) * ((1.0F) - t); } else {
# 32 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 1) { return ((3.0F) * ((1.0F) - t)) * ((1.0F) - ((3.0F) * t)); } else {
# 33 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 2) { return ((3.0F) * t) * ((2.0F) - ((3.0F) * t)); } else {
# 34 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (i == 3) { return ((3.0F) * t) * t; } } } }
# 35 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
return (0.0F);
# 36 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 38 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float B0(float u) { return (((1.0F) - u) * ((1.0F) - u)) * ((1.0F) - u); }
# 39 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float B1(float u) { return (((3.0F) * u) * ((1.0F) - u)) * ((1.0F) - u); }
# 40 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float B2(float u) { return ((3.0F) * u) * (u - (u * u)); }
# 41 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float B3(float u) { return u * (u * u); }
# 43 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float dB0(float u) { return ((-(3.0F)) * ((1.0F) - u)) * ((1.0F) - u); }
# 44 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float dB1(float u) { return ((3.0F) * ((1.0F) - u)) * ((1.0F) - ((3.0F) * u)); }
# 45 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float dB2(float u) { return ((3.0F) * u) * ((2.0F) - ((3.0F) * u)); }
# 46 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline float dB3(float u) { return ((3.0F) * u) * u; }
# 49 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline int pow2roundup(int x)
# 50 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
{
# 51 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
if (x < 0) {
# 52 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
return 0; }
# 53 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
--x;
# 54 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
x |= (x >> 1);
# 55 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
x |= (x >> 2);
# 56 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
x |= (x >> 4);
# 57 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
x |= (x >> 8);
# 58 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
x |= (x >> 16);
# 59 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
return x + 1;
# 60 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 62 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline cvec3f bezier_eval(cvec3f *pos, float u, float v) {
# 63 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec3f pt;
# 64 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (int j = 0; j < 4; j++) {
# 65 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (int i = 0; i < 4; i++) {
# 66 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
(pt += (((((pos[(j * 4) + i]) * (B(i, u)))) * (B(j, v)))));
# 67 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 68 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 69 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
return pt;
# 70 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 73 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
class bezmesh;
# 75 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
class patch {
# 78 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
public: patch() { }
# 81 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
patch(const patch &p)
# 82 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
{
# 83 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (int u = 0; u < 4; u++) {
# 84 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (int v = 0; v < 4; v++)
# 85 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
{
# 86 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
(((cp)[u])[v]) = (((p.cp)[u])[v]);
# 87 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
(((realcp)[u])[v]) = (((p.realcp)[u])[v]);
# 88 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
} }
# 89 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
((bbox) = (p.bbox));
# 91 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
(parent) = (p.parent);
# 92 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 94 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec4f cp[4][4];
# 95 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
std::vector< cvec3f> bbox;
# 96 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec4f realcp[4][4];
# 97 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
bezmesh *parent;
# 98 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec3f patch_val(cvec4f & input);
# 99 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec4f pos_at_uv(float u, float v);
# 100 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec3f nor_at_uv(float u, float v);
# 101 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec3f patch_val(float u, float v);
# 102 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec4f patch_valw(float u, float v);
# 103 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec3f normal(cvec4f & parameters, float u, float v);
# 162 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
};
# 164 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
class bezmesh {
# 167 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
std::vector< patch> _patches;
# 168 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
float *control_points;
# 169 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
unsigned _matID;
# 170 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
std::map< std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > , int> _attrs;
# 172 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
float _Viewmat[16];
# 173 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
float _invViewmat[16];
# 176 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
public: bezmesh() { }
# 177 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
bezmesh(const std::__cxx11::string filename) { this->read_bez(filename.c_str(), (1.0)); }
# 178 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
int read_bez(const char * filename, float scale, bool swapyz = false);
# 179 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
inline void vtokenize(const std::__cxx11::string & str, const std::__cxx11::string & delimiters, std::vector< std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > > & tokens);
# 180 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
void patches_normalize(float scale);
# 182 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
float *get_patches();
# 183 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
void get_patches(float * control_points);
# 185 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
patch &get_patches(int i);
# 187 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
void applyTransformation(float Viewmat[16], float invViewmat[16]) {
# 188 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
memcpy(_Viewmat, Viewmat, (16) * sizeof(float));
# 189 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
memcpy(_invViewmat, invViewmat, (16) * sizeof(float));
# 191 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (unsigned i = (0); i < (_patches).size(); i++) {
# 192 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (int j = 0; j < 4; j++) {
# 193 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
for (int k = 0; k < 4; k++) {
# 195 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
cvec4f ta;
# 196 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
matmultvec4f(_Viewmat, (((_patches)[i].cp)[j])[k], ta);
# 197 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
((((_patches)[i].cp)[j])[k]) = ta;
# 198 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 199 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 200 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 201 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
}
# 203 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
unsigned numPatches() { return (_patches).size(); }
# 204 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
unsigned numPoints() { return (_patches).size() * (16); }
# 206 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
unsigned &matID() { return _matID; }
# 207 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
std::map< std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > , int> &attributes() { return _attrs; }
# 208 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
float *Viewmat() { return _Viewmat; }
# 209 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
float *invViewmat() { return _invViewmat; }
# 210 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
std::vector< patch> &patches() { return _patches; }
# 212 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.h"
};
# 4 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
inline void bezmesh::vtokenize(const std::__cxx11::string &str, const std::__cxx11::string &delimiters, std::vector< std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > > &tokens)
# 5 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
{
# 6 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
tokens.clear();
# 8 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if ((str == (""))) { return; }
# 10 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > ::size_type lastPos = str.find_first_not_of(delimiters, 0);
# 12 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > ::size_type pos = str.find_first_of(delimiters, lastPos);
# 13 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
while ((std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > ::npos != pos) || (std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > ::npos != lastPos))
# 14 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
{
# 16 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
tokens.push_back(str.substr(lastPos, pos - lastPos));
# 18 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
lastPos = str.find_first_not_of(delimiters, pos);
# 20 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
pos = str.find_first_of(delimiters, lastPos);
# 21 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 22 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 23 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
int bezmesh::read_bez(const char *filename, float scale = (1.0F), bool swapyz) {
# 25 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
FILE *f;
# 27 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
char line[500];
# 28 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
std::__cxx11::string sline;
# 29 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
std::vector< std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > > tokens;
# 30 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
std::__cxx11::string delim = " \t\n\r";
# 32 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
f = fopen(filename, "r");
# 34 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (!f)
# 35 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
{
# 36 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
printf("File %s not found\n", filename);
# 37 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return -1;
# 38 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 40 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
printf("Reading mesh...\n"); fflush(stdout);
# 42 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
while (fgets(line, 500, f))
# 43 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
{
# 44 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(sline = (line));
# 45 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
this->vtokenize(sline, delim, tokens);
# 47 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (tokens.size() >= (2)) {
# 48 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if ((((tokens[0]) == ("Patch"))) && (((tokens[1]) == ("\"bicubic\"")))) {
# 50 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
patch p;
# 51 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < 4; i++) {
# 52 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (fgets(line, 500, f)) {
# 53 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(sline = (line));
# 54 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
this->vtokenize(sline, delim, tokens);
# 55 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 56 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
((((p.cp)[i])[j]).x) = ((float)strtod(tokens[(j * 3) + 0].c_str(), __null));
# 57 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
((((p.cp)[i])[j]).y) = ((float)strtod(tokens[(j * 3) + 1].c_str(), __null));
# 58 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
((((p.cp)[i])[j]).z) = ((float)strtod(tokens[(j * 3) + 2].c_str(), __null));
# 59 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (swapyz) { swap((((p.cp)[i])[j]).y, (((p.cp)[i])[j]).z); }
# 60 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
((((p.cp)[i])[j]).w) = (1.0F);
# 63 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 64 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
} else {
# 65 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return -1;
# 66 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 67 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 68 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(p.parent) = this;
# 69 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(_patches).push_back(p);
# 70 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 71 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 72 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 75 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (scale != (0.0F)) { this->patches_normalize(scale); }
# 77 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
fclose(f);
# 78 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return (int)((_patches).size() * (16));
# 80 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 82 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
float *bezmesh::get_patches() {
# 84 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
float *control_points;
# 86 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
control_points = (new float [((_patches).size() * (16)) * (4)]);
# 88 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < ((int)(_patches).size()); i++) {
# 89 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 90 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int k = 0; k < 4; k++) {
# 91 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 0)) = (((((_patches)[i].cp)[j])[k]).x);
# 92 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 1)) = (((((_patches)[i].cp)[j])[k]).y);
# 93 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 2)) = (((((_patches)[i].cp)[j])[k]).z);
# 94 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 3)) = (((((_patches)[i].cp)[j])[k]).w);
# 95 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 96 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 97 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 103 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return control_points;
# 104 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 106 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
void bezmesh::get_patches(float *control_points) {
# 109 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < ((int)(_patches).size()); i++) {
# 110 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 111 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int k = 0; k < 4; k++) {
# 112 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 0)) = (((((_patches)[i].cp)[j])[k]).x);
# 113 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 1)) = (((((_patches)[i].cp)[j])[k]).y);
# 114 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 2)) = (((((_patches)[i].cp)[j])[k]).z);
# 115 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(*((control_points + ((((i * 16) + (j * 4)) + k) * 4)) + 3)) = (((((_patches)[i].cp)[j])[k]).w);
# 116 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 117 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 118 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 124 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 126 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
patch &bezmesh::get_patches(int i) {
# 127 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return (_patches)[i];
# 128 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 130 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
void bezmesh::patches_normalize(float scale) {
# 132 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
float maxcoord = (0.0F);
# 134 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
printf("%ld patches\n", (_patches).size());
# 136 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < ((int)(_patches).size()); i++) {
# 137 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 138 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int k = 0; k < 4; k++) {
# 140 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (fabsf(((((_patches)[i].cp)[j])[k]).x) > maxcoord) { maxcoord = (((((_patches)[i].cp)[j])[k]).x); }
# 141 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (fabsf(((((_patches)[i].cp)[j])[k]).y) > maxcoord) { maxcoord = (((((_patches)[i].cp)[j])[k]).y); }
# 142 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
if (fabsf(((((_patches)[i].cp)[j])[k]).z) > maxcoord) { maxcoord = (((((_patches)[i].cp)[j])[k]).z); }
# 143 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 144 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 145 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 147 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
float factor = scale / maxcoord;
# 149 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
printf("factor = %f\n", factor);
# 151 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < ((int)(_patches).size()); i++) {
# 152 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 153 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int k = 0; k < 4; k++) {
# 155 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(((((_patches)[i].cp)[j])[k]).x) *= factor;
# 156 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(((((_patches)[i].cp)[j])[k]).y) *= factor;
# 157 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(((((_patches)[i].cp)[j])[k]).z) *= factor;
# 158 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 159 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 160 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 161 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 163 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
cvec4f patch::pos_at_uv(float u, float v) {
# 164 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
cvec4f point;
# 165 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < 4; i++) {
# 166 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 167 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(point += (((((((cp)[i])[j]) * (B(i, u)))) * (B(j, v)))));
# 168 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 169 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 170 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return point;
# 171 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 173 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
cvec3f patch::nor_at_uv(float u, float v) {
# 174 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
cvec3f tangu, tangv;
# 175 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < 4; i++) {
# 176 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 177 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(tangu += (((((gencvec3f((((cp)[i])[j]).x, (((cp)[i])[j]).y, (((cp)[i])[j]).z)) * (dB(i, u)))) * (B(j, v)))));
# 178 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 179 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 180 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int i = 0; i < 4; i++) {
# 181 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
for (int j = 0; j < 4; j++) {
# 182 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
(tangv += (((((gencvec3f((((cp)[i])[j]).x, (((cp)[i])[j]).y, (((cp)[i])[j]).z)) * (B(i, u)))) * (dB(j, v)))));
# 183 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 184 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 185 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
cvec3f norm = cross(tangu, tangv);
# 186 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
normalizeInplace(norm);
# 187 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
return norm;
# 188 "/home/zhengzhen/workspace/pipeline/basicversion/reyesDP/bezmesh/bezmesh.cu"
}
# 1 "bezmesh.cudafe1.stub.c"
# 1 "bezmesh.cudafe1.stub.c"
# 1 "bezmesh.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"


# 1 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 3

# 74 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 3
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 121 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 3
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary_15_bezmesh_cpp1_ii_4924c2dd ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "_15_bezmesh_cpp1_ii_4924c2dd";
# 152 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 3
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();





}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/local/cuda-8.0/include/common_functions.h" 1 3
# 249 "/usr/local/cuda-8.0/include/common_functions.h" 3
# 1 "/usr/local/cuda-8.0/include/math_functions.h" 1 3
# 10055 "/usr/local/cuda-8.0/include/math_functions.h" 3
# 1 "/usr/local/cuda-8.0/include/crt/func_macro.h" 1 3
# 10056 "/usr/local/cuda-8.0/include/math_functions.h" 2 3







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 10327 "/usr/local/cuda-8.0/include/math_functions.h" 3
# 1 "/usr/local/cuda-8.0/include/math_functions.hpp" 1 3
# 1095 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
# 1 "/usr/local/cuda-8.0/include/math_constants.h" 1 3
# 1096 "/usr/local/cuda-8.0/include/math_functions.hpp" 2 3
# 3420 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3738 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}
# 10328 "/usr/local/cuda-8.0/include/math_functions.h" 2 3



# 1 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.h" 1 3
# 270 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.h" 3
# 1 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.hpp" 1 3
# 271 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.h" 2 3
# 10332 "/usr/local/cuda-8.0/include/math_functions.h" 2 3
# 250 "/usr/local/cuda-8.0/include/common_functions.h" 2 3
# 247 "/usr/local/cuda-8.0/include/crt/host_runtime.h" 2 3







#pragma pack()
# 7 "bezmesh.cudafe1.stub.c" 2 3
# 1 "bezmesh.fatbin.c" 1 3
# 1 "/usr/local/cuda-8.0/include/fatBinaryCtl.h" 1 3
# 33 "/usr/local/cuda-8.0/include/fatBinaryCtl.h" 3
# 1 "/usr/local/cuda-8.0/include/fatbinary.h" 1 3
# 49 "/usr/local/cuda-8.0/include/fatbinary.h" 3
typedef struct fatBinaryHeader *computeFatBinaryFormat_t;
# 78 "/usr/local/cuda-8.0/include/fatbinary.h" 3
struct __attribute__((aligned(8))) fatBinaryHeader
{
  unsigned int magic;
  unsigned short version;
  unsigned short headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX = 0x0001,
  FATBIN_KIND_ELF = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;
# 34 "/usr/local/cuda-8.0/include/fatBinaryCtl.h" 2 3


extern "C" {







typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,
  FBCTL_ERROR_UNRECOGNIZED,
  FBCTL_ERROR_NO_CANDIDATE,
  FBCTL_ERROR_COMPILE_FAILED,
  FBCTL_ERROR_INTERNAL
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);
# 75 "/usr/local/cuda-8.0/include/fatBinaryCtl.h" 3
typedef enum {
  fatBinary_PreferBestCode,
  fatBinary_AvoidPTX,
  fatBinary_ForcePTX,
  fatBinary_JITIfNotMatch
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data,
                                                 void* *elf, size_t *esize);
# 104 "/usr/local/cuda-8.0/include/fatBinaryCtl.h" 3
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 133 "/usr/local/cuda-8.0/include/fatBinaryCtl.h" 3
}
# 2 "bezmesh.fatbin.c" 2 3


asm(
".section __nv_relfatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000000720,0x0000009001010002,0x0000000000000690\n"
".quad 0x000000000000068b,0x0000002300010007,0x0000004a00000040,0x0000000000002015\n"
".quad 0x0000000000000000,0x0000000000001940,0x687a2f656d6f682f,0x2f6e65687a676e65\n"
".quad 0x636170736b726f77,0x696c657069702f65,0x63697361622f656e,0x2f6e6f6973726576\n"
".quad 0x2f50447365796572,0x2f6873656d7a6562,0x2e6873656d7a6562,0x0000000000007563\n"
".quad 0x010102464c457fa2,0x00016e0001000733,0xc0220001005000be,0x2305230df5000814\n"
".quad 0x4000000038004000,0x732e000001001200,0x0062617472747368,0x00086d792700082e\n"
".quad 0x78646e68735f14f7,0x666e692e766e2e00,0x2e747865742e006f,0x4474654761647563\n"
".quad 0xf700146563697665,0x746547636e754602,0x7475626972747441,0x634f22f8001c7365\n"
".quad 0x4d79636e61707563,0x6576697463417861,0x6550736b636f6c42,0x727069746c754d72\n"
".quad 0x57726f737365636f,0x3d67616c46687469,0x07005b08006a0200,0x6f6c6c614d6f001d\n"
".quad 0xff00d80021006b63,0x5f67756265645f06,0x7361735f656e696c,0x00186c65722e0073\n"
".quad 0x0800240200110602,0x7003f10030050010,0x332e7478745f7874,0x3233303632373035\n"
".quad 0x6c6c616391013d35,0x9f000e6870617267,0x7079746f746f7270,0x05017c0f20018265\n"
".quad 0x0e0d018a0f001406,0x3d0f2e01a00f001c,0x1d0f0e01d70f2000,0x11030201ee0f0000\n"
".quad 0x022d0f1a01f90f00,0x6c696c6c69237322,0x0004230022000869,0x70024b0f00116912\n"
".quad 0x000032750700010f,0x801300100c002200,0x03000000407d0008,0x0030541100300c00\n"
".quad 0x00306a1100300d1d,0x0030861100300d1d,0x0030bd1100300e1d,0x0030fa1100300e1d\n"
".quad 0x3001112000300f1d,0x012e2000300f1d00,0x39110030101d0030,0x4a110030101d0030\n"
".quad 0x78110030111d0030,0xca110030111d0030,0xf6110018041d0018,0x12200018051d0018\n"
".quad 0x110018061d001802,0x110018081d00182f,0x700018091d00183d,0xba300002000000c9\n"
".quad 0x01000a0efb019105,0x02050f05c7010101,0x450209240001010a,0xc60310020104a000\n"
".quad 0x190c0047f0020100,0xe91f040018281f00,0x040018381f050031,0x49d714040018191f\n"
".quad 0x172c00cd01b32000,0x6d6f682fb000cd01,0x05676e65687a2f65,0x6b726f772f00f000\n"
".quad 0x69702f6563617073,0x622f1af002f46570,0x7372657663697361,0x657965722f6e6f69\n"
".quad 0x6d7a65622f504473,0x7273752f00687365,0xb02f6c61636f6c2f,0x692f302e382ddf03\n"
".quad 0x5c006564756c636e,0x0044697061342500,0x00006f6b69702f73,0x010075632ec0006e\n"
".quad 0x6e29a005c9daf8e5,0x08f30486645f2100,0x656d69746e75725f,0x0200682e6970615f\n"
".quad 0x1d6ca205c394f5be,0x6974636e7566d300,0x1d7070682e736e6f,0x6576630a849eb100\n"
".quad 0x29004f0300682e63,0x1002025f01b456a9,0xcd021f010183d003,0x19da1f0019000501\n"
".quad 0x1f050019cb1f0500,0x0019d515050019c1,0x14f1012403036404,0x61742e00302e3520\n"
".quad 0x5f6d732074656772,0x726464612e003533,0x657a69735f737365,0x657760002f343620\n"
".quad 0x00f000fb2e206b61,0x617261702e282020,0x13203233622e206d,0x61767465725fa600\n"
".quad 0x282505a22029306c,0x0018343627002600,0x2c305f3f00165f11,0x00290031500b0020\n"
".quad 0xf200676712052e7b,0x3b3e323c72250900,0x752e766f6d000000,0x3033202c31920012\n"
".quad 0x2900004b7473003b,0x02ff00915b092800,0x317225202c5d302b,0x003b74657200003b\n"
".quad 0x0e073c0d1c00cb7d,0x00e10e00230d00d6,0x7a00ec0f06002b0f,0x240e00ed0e07810e\n"
".quad 0x32332f0000ee0f00,0x18002c311f0b002c,0x096d0572011b321f,0x0904001b0501120e\n"
".quad 0x08e60f7200b10f01,0x16003b0f00d10e16,0x0e2500430f02e80e,0x321f1e00430f0211\n"
".quad 0x9b01ba331f2f0086,0x052801c30f0b5b05,0x004c0f01cc0e0044,0x004c0c3001d50f27\n"
".quad 0x98331f380098321f,0x64460233341f3800,0x07c20b0008230400,0x00082347000c1117\n"
".quad 0x1700180917001809,0x1700180717001807,0x1700180517001805,0x1700180317001803\n"
".quad 0x400ac00117001801,0xfe130008ffffffff,0x20fffffffd400008,0x0000510b38bb1100\n"
".quad 0x01ac3100600001c5,0x000001bf53008000,0xb41300c000001809,0x02220050b713004d\n"
".quad 0x0000109f17001800,0x4800001087170030,0x00600000106e1700,0x1700780000105617\n"
".quad 0xa12a00630000103d,0x006001882a006001,0x01562a0060016f2a,0x2a0060013d2a0060\n"
".quad 0x2500010f00600124,0x0080808080b8a0b0,0x74400cf51fc01208,0x02193000171c003c\n"
".quad 0x000885802f00083c,0x7ffffc1c003c8e0d,0x1300080f00301200,0x001f6fffff00800f\n"
".quad 0x0c039001132c0001,0x821b000840130018,0x400b1f03ac0c039d,0x4b2f0029c2130400\n"
".quad 0x040413130b004002,0x17104b101300400c,0x1a041076000428b0,0x40011f0050181410\n"
".quad 0xcd2f0595c0130304,0x00402d1f0b008000,0x00b71f109b8d1304,0x13040040491f0c01\n"
".quad 0x004007a52f00a944,0x40701c000729120b,0x10901311c3ec1300,0x1211620b064c0500\n"
".quad 0x7c2a00400d008066,0x480400400c012810,0x00400e1073741101,0x0040301f00409413\n"
".quad 0x01000c069015130c,0x004060170040c813,0x1280101700380417,0x4011282e0100400f\n"
".quad 0x3213000040051f00,0x11c02a124a0c0154,0x062b0028031212b8,0x040040461f002840\n"
".quad 0x00034c004012402e,0x0080621f00400800,0x00054c0000400f05,0x00809f1f00400c00\n"
".quad 0x80071f0040131e05,0x0f050080bc1f0000,0x000040091f000040,0x40141e050080cd1f\n"
".quad 0x00005000c00b1a00,0x0000000000000000\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[230];

}


extern "C" {





extern const __fatBinC_Wrapper_t __fatbinwrap_15_bezmesh_cpp1_ii_4924c2dd __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 8 "bezmesh.cudafe1.stub.c" 2 3
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_15_bezmesh_cpp1_ii_4924c2dd(void) __attribute__((__constructor__));
static void __nv_cudaEntityRegisterCallback(void **__T22){{ volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T22; };__nv_save_fatbinhandle_for_managed_rt(__T22);}
static void __sti____cudaRegisterAll_15_bezmesh_cpp1_ii_4924c2dd(void){{ __cudaRegisterLinkedBinary_15_bezmesh_cpp1_ii_4924c2dd (( void (*)(void **))(__nv_cudaEntityRegisterCallback), (void *)&__fatbinwrap_15_bezmesh_cpp1_ii_4924c2dd, (void *)&__module_id_str, (void (*)(void *))&____nv_dummy_param_ref); };}

#pragma GCC diagnostic pop
# 2 "bezmesh.cudafe1.stub.c" 2
# 1 "bezmesh.cudafe1.stub.c"
